# Vana SDK Next.js Demo - Environment Configuration Example
# Copy this file to .env.local and fill in your values

# ====================================
# RELAYER CONFIGURATION
# ====================================
# The relayer pays gas fees for users' transactions
# WARNING: The default private key below is publicly known - NEVER use on mainnet!
# For production, use a securely managed private key with sufficient VANA tokens
RELAYER_PRIVATE_KEY=0x3f572ac0f0671db5231100918c22296306be0ed77d4353f80ad8b4ea9317cf51

# ====================================
# BLOCKCHAIN CONFIGURATION
# ====================================
# Moksha Testnet Configuration
CHAIN_RPC_URL=https://rpc.moksha.vana.org
CHAIN_ID=14800

# For Vana Mainnet, use:
# CHAIN_RPC_URL=https://rpc.vana.org
# CHAIN_ID=1480

# ====================================
# WALLETCONNECT (OPTIONAL)
# ====================================
# Get your project ID at https://cloud.walletconnect.com/
# This enables WalletConnect support for mobile wallets
NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID=your_project_id_here

# ====================================
# SUBGRAPH CONFIGURATION
# ====================================
# The Graph Protocol endpoint for querying blockchain data
NEXT_PUBLIC_SUBGRAPH_URL=https://api.goldsky.com/api/public/project_cm168cz887zva010j39il7a6p/subgraphs/vana/7.0.1/gn

# ====================================
# PINATA IPFS CONFIGURATION
# ====================================
# Pinata provides decentralized storage for encrypted user data
# Sign up at https://app.pinata.cloud and create an API key
# 
# Required permissions when creating your Pinata API key:
# ✅ Files - Write (for uploading encrypted data)
# ✅ Gateways - Read (for retrieving data)
# ✅ pinFileToIPFS (legacy endpoint)
# ✅ pinByHash (legacy endpoint)
#
# After creating the key, you'll receive a JWT token like:
# eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# Server-side JWT (for relayer permission parameters)
PINATA_JWT=your_pinata_jwt_token_here

# Client-side JWT (for direct browser uploads via Storage API)
# NOTE: This will be exposed to the browser - use a limited-scope key!
NEXT_PUBLIC_PINATA_JWT=your_client_side_pinata_jwt_here

# Optional: Custom gateway URL (default is fine for most users)
PINATA_GATEWAY_URL=https://gateway.pinata.cloud
NEXT_PUBLIC_PINATA_GATEWAY_URL=https://gateway.pinata.cloud

# TODO Move this to server-side not public
NEXT_PUBLIC_APPLICATION_PRIVATE_KEY=application_private_key

APPLICATION_PRIVATE_KEY=application_private_key

NEXT_PUBLIC_REPLICATE_API_TOKEN=replicate_api_token

# ====================================
# IMPORTANT SECURITY NOTES
# ====================================
# 1. NEVER commit .env.local to version control
# 2. The default RELAYER_PRIVATE_KEY is for testing only
# 3. In production, use environment variables from your hosting provider
# 4. Ensure your relayer wallet has sufficient VANA tokens for gas
# 5. Keep your Pinata JWT token secret - it provides write access to your IPFS storage

# ====================================
# FEATURE FLAGS
# ====================================
# The system automatically detects available services:
# - If PINATA_JWT is configured: Uses real IPFS storage
# - If not configured: Falls back to in-memory storage (development only)
# - Check /api/health endpoint to see which features are enabled