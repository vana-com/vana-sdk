{
  "result": [
    {
      "scriptId": "6",
      "url": "node:internal/per_context/primordials",
      "functions": [
        {
          "functionName": "SafeIterator",
          "ranges": [{ "startOffset": 9149, "endOffset": 9220, "count": 27 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "next",
          "ranges": [{ "startOffset": 9225, "endOffset": 9274, "count": 324 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 9279, "endOffset": 9324, "count": 22 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 10889, "endOffset": 10956, "count": 12 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "SafeMap",
          "ranges": [
            { "startOffset": 11614, "endOffset": 11642, "count": 142 }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "SafeSet",
          "ranges": [
            { "startOffset": 11943, "endOffset": 11971, "count": 134 }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "SafeFinalizationRegistry",
          "ranges": [{ "startOffset": 12395, "endOffset": 12451, "count": 3 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "SafeWeakRef",
          "ranges": [{ "startOffset": 12604, "endOffset": 12642, "count": 30 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "SafePromise",
          "ranges": [{ "startOffset": 12790, "endOffset": 12832, "count": 72 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 13337, "endOffset": 13611, "count": 12 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 13482, "endOffset": 13606, "count": 12 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 13512, "endOffset": 13561, "count": 12 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 14931, "endOffset": 15487, "count": 8 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 14966, "endOffset": 15486, "count": 8 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 15357, "endOffset": 15466, "count": 10 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 15829, "endOffset": 16282, "count": 11 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 15864, "endOffset": 16281, "count": 11 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onFulfilled",
          "ranges": [{ "startOffset": 15996, "endOffset": 16073, "count": 10 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "9",
      "url": "node:internal/bootstrap/realm",
      "functions": [
        {
          "functionName": "internalBinding",
          "ranges": [{ "startOffset": 5981, "endOffset": 6243, "count": 70 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getOwn",
          "ranges": [
            { "startOffset": 6509, "endOffset": 6663, "count": 105 },
            { "startOffset": 6645, "endOffset": 6660, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "canBeRequiredByUsers",
          "ranges": [{ "startOffset": 9476, "endOffset": 9551, "count": 187 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "canBeRequiredWithoutScheme",
          "ranges": [{ "startOffset": 9562, "endOffset": 9656, "count": 513 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "normalizeRequirableId",
          "ranges": [
            { "startOffset": 9667, "endOffset": 10012, "count": 365 },
            { "startOffset": 9743, "endOffset": 9905, "count": 0 },
            { "startOffset": 9961, "endOffset": 9985, "count": 29 },
            { "startOffset": 9985, "endOffset": 10011, "count": 336 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getCanBeRequiredByUsersWithoutSchemeList",
          "ranges": [{ "startOffset": 10275, "endOffset": 10384, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "compileForPublicLoader",
          "ranges": [
            { "startOffset": 10542, "endOffset": 11205, "count": 73 },
            { "startOffset": 10623, "endOffset": 10815, "count": 0 },
            { "startOffset": 10879, "endOffset": 11176, "count": 14 },
            { "startOffset": 11138, "endOffset": 11142, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getESMFacade",
          "ranges": [
            { "startOffset": 11209, "endOffset": 11843, "count": 3 },
            { "startOffset": 11247, "endOffset": 11266, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 11580, "endOffset": 11683, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "syncExports",
          "ranges": [
            { "startOffset": 12139, "endOffset": 12483, "count": 3 },
            { "startOffset": 12258, "endOffset": 12473, "count": 105 },
            { "startOffset": 12335, "endOffset": 12344, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "compileForInternalLoader",
          "ranges": [
            { "startOffset": 12487, "endOffset": 13309, "count": 631 }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "requireBuiltin",
          "ranges": [
            { "startOffset": 13504, "endOffset": 13869, "count": 560 }
          ],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "10",
      "url": "node:internal/errors",
      "functions": [
        {
          "functionName": "setInternalPrepareStackTrace",
          "ranges": [{ "startOffset": 2771, "endOffset": 2862, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "hideStackFrames",
          "ranges": [{ "startOffset": 14657, "endOffset": 14954, "count": 4 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "wrappedFn",
          "ranges": [
            { "startOffset": 14690, "endOffset": 14896, "count": 2465 }
          ],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "11",
      "url": "node:internal/assert",
      "functions": [
        {
          "functionName": "assert",
          "ranges": [
            { "startOffset": 157, "endOffset": 307, "count": 256 },
            { "startOffset": 205, "endOffset": 305, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "12",
      "url": "node:internal/bootstrap/node",
      "functions": [
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 3830, "endOffset": 3880, "count": 6 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 3886, "endOffset": 3944, "count": 2 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 4086, "endOffset": 4122, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "set",
          "ranges": [
            { "startOffset": 4128, "endOffset": 4547, "count": 3 },
            { "startOffset": 4187, "endOffset": 4469, "count": 1 },
            { "startOffset": 4252, "endOffset": 4266, "count": 0 },
            { "startOffset": 4267, "endOffset": 4315, "count": 0 },
            { "startOffset": 4317, "endOffset": 4352, "count": 0 },
            { "startOffset": 4469, "endOffset": 4518, "count": 2 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 8066, "endOffset": 8228, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 8330, "endOffset": 8526, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 12072, "endOffset": 12122, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [
            { "startOffset": 13230, "endOffset": 13266, "count": 176 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 14136, "endOffset": 14171, "count": 20 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "13",
      "url": "node:internal/timers",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4385, "endOffset": 4410, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "initAsyncResource",
          "ranges": [
            { "startOffset": 5763, "endOffset": 6041, "count": 1 },
            { "startOffset": 5989, "endOffset": 6039, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Timeout",
          "ranges": [
            { "startOffset": 6147, "endOffset": 7193, "count": 1 },
            { "startOffset": 6295, "endOffset": 6647, "count": 0 },
            { "startOffset": 7004, "endOffset": 7011, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "unref",
          "ranges": [{ "startOffset": 7587, "endOffset": 7726, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "TimersList",
          "ranges": [{ "startOffset": 7935, "endOffset": 8241, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "incRefCount",
          "ranges": [{ "startOffset": 9618, "endOffset": 9784, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "decRefCount",
          "ranges": [{ "startOffset": 9786, "endOffset": 9953, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "insert",
          "ranges": [{ "startOffset": 11102, "endOffset": 11841, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "setPosition",
          "ranges": [{ "startOffset": 12905, "endOffset": 12976, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "processTimers",
          "ranges": [
            { "startOffset": 15228, "endOffset": 15718, "count": 1 },
            { "startOffset": 15459, "endOffset": 15564, "count": 0 },
            { "startOffset": 15602, "endOffset": 15617, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "listOnTimeout",
          "ranges": [
            { "startOffset": 15722, "endOffset": 18460, "count": 1 },
            { "startOffset": 16146, "endOffset": 16374, "count": 0 },
            { "startOffset": 16414, "endOffset": 16429, "count": 0 },
            { "startOffset": 16631, "endOffset": 16948, "count": 0 },
            { "startOffset": 17059, "endOffset": 17181, "count": 0 },
            { "startOffset": 17295, "endOffset": 17363, "count": 0 },
            { "startOffset": 17408, "endOffset": 17436, "count": 0 },
            { "startOffset": 17438, "endOffset": 17547, "count": 0 },
            { "startOffset": 17702, "endOffset": 17734, "count": 0 },
            { "startOffset": 17777, "endOffset": 17794, "count": 0 },
            { "startOffset": 17843, "endOffset": 17864, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "14",
      "url": "node:internal/async_hooks",
      "functions": [
        {
          "functionName": "newAsyncId",
          "ranges": [{ "startOffset": 14549, "endOffset": 14619, "count": 5 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getDefaultTriggerAsyncId",
          "ranges": [
            { "startOffset": 14994, "endOffset": 15284, "count": 5 },
            { "startOffset": 15250, "endOffset": 15283, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "hasHooks",
          "ranges": [{ "startOffset": 16096, "endOffset": 16159, "count": 22 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "enabledHooksExist",
          "ranges": [{ "startOffset": 16161, "endOffset": 16220, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "initHooksExist",
          "ranges": [{ "startOffset": 16222, "endOffset": 16277, "count": 5 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "destroyHooksExist",
          "ranges": [{ "startOffset": 16338, "endOffset": 16399, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "emitBeforeScript",
          "ranges": [
            { "startOffset": 16890, "endOffset": 17066, "count": 5 },
            { "startOffset": 17038, "endOffset": 17064, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "emitAfterScript",
          "ranges": [
            { "startOffset": 17069, "endOffset": 17189, "count": 4 },
            { "startOffset": 17133, "endOffset": 17158, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "pushAsyncContext",
          "ranges": [
            { "startOffset": 17534, "endOffset": 18104, "count": 5 },
            { "startOffset": 17754, "endOffset": 17804, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "popAsyncContext",
          "ranges": [
            { "startOffset": 18169, "endOffset": 18780, "count": 4 },
            { "startOffset": 18285, "endOffset": 18298, "count": 0 },
            { "startOffset": 18377, "endOffset": 18483, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "15",
      "url": "node:internal/validators",
      "functions": [
        {
          "functionName": "isInt32",
          "ranges": [{ "startOffset": 1087, "endOffset": 1146, "count": 138 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "parseFileMode",
          "ranges": [
            { "startOffset": 1881, "endOffset": 2192, "count": 19 },
            { "startOffset": 1974, "endOffset": 2142, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 2438, "endOffset": 2819, "count": 21 },
            { "startOffset": 2558, "endOffset": 2612, "count": 0 },
            { "startOffset": 2652, "endOffset": 2706, "count": 0 },
            { "startOffset": 2749, "endOffset": 2815, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 3063, "endOffset": 3526, "count": 44 },
            { "startOffset": 3235, "endOffset": 3303, "count": 0 },
            { "startOffset": 3337, "endOffset": 3405, "count": 0 },
            { "startOffset": 3442, "endOffset": 3522, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 3757, "endOffset": 4189, "count": 20 },
            { "startOffset": 3827, "endOffset": 3891, "count": 0 },
            { "startOffset": 3923, "endOffset": 3987, "count": 0 },
            { "startOffset": 4011, "endOffset": 4014, "count": 0 },
            { "startOffset": 4111, "endOffset": 4187, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4381, "endOffset": 4493, "count": 3531 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 4735, "endOffset": 5181, "count": 19 },
            { "startOffset": 4813, "endOffset": 4867, "count": 0 },
            { "startOffset": 4957, "endOffset": 4971, "count": 0 },
            { "startOffset": 4997, "endOffset": 5179, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 5369, "endOffset": 5702, "count": 1 },
            { "startOffset": 5440, "endOffset": 5700, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 5513, "endOffset": 5574, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 5898, "endOffset": 6012, "count": 5 },
            { "startOffset": 5955, "endOffset": 6010, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 6594, "endOffset": 7613, "count": 25 },
            { "startOffset": 6685, "endOffset": 6925, "count": 3 },
            { "startOffset": 6736, "endOffset": 6808, "count": 0 },
            { "startOffset": 6847, "endOffset": 6919, "count": 0 },
            { "startOffset": 6925, "endOffset": 7609, "count": 22 },
            { "startOffset": 7038, "endOffset": 7055, "count": 21 },
            { "startOffset": 7057, "endOffset": 7129, "count": 0 },
            { "startOffset": 7227, "endOffset": 7249, "count": 0 },
            { "startOffset": 7251, "endOffset": 7323, "count": 0 },
            { "startOffset": 7479, "endOffset": 7529, "count": 0 },
            { "startOffset": 7531, "endOffset": 7603, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 8567, "endOffset": 8845, "count": 1 },
            { "startOffset": 8629, "endOffset": 8692, "count": 0 },
            { "startOffset": 8725, "endOffset": 8843, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 12692, "endOffset": 12909, "count": 1 },
            { "startOffset": 12739, "endOffset": 12835, "count": 0 },
            { "startOffset": 12837, "endOffset": 12907, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 13109, "endOffset": 13225, "count": 50 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "16",
      "url": "node:internal/util",
      "functions": [
        {
          "functionName": "getDeprecationWarningEmitter",
          "ranges": [{ "startOffset": 2398, "endOffset": 3047, "count": 16 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "shouldEmitWarning",
          "ranges": [{ "startOffset": 2497, "endOffset": 2507, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2544, "endOffset": 3044, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "deprecate",
          "ranges": [{ "startOffset": 3796, "endOffset": 4850, "count": 16 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "deprecated",
          "ranges": [{ "startOffset": 4160, "endOffset": 4462, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "normalizeEncoding",
          "ranges": [
            { "startOffset": 5373, "endOffset": 5504, "count": 157 },
            { "startOffset": 5443, "endOffset": 5461, "count": 1 },
            { "startOffset": 5477, "endOffset": 5503, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "promisify",
          "ranges": [
            { "startOffset": 11280, "endOffset": 13141, "count": 3 },
            { "startOffset": 11400, "endOffset": 11456, "count": 1 },
            { "startOffset": 11543, "endOffset": 11820, "count": 0 },
            { "startOffset": 12927, "endOffset": 13089, "count": 10 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "fn",
          "ranges": [{ "startOffset": 12020, "endOffset": 12539, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 12066, "endOffset": 12533, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 12120, "endOffset": 12483, "count": 2 },
            { "startOffset": 12159, "endOffset": 12200, "count": 0 },
            { "startOffset": 12241, "endOffset": 12261, "count": 0 },
            { "startOffset": 12263, "endOffset": 12428, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "spliceOne",
          "ranges": [
            { "startOffset": 13699, "endOffset": 13826, "count": 1 },
            { "startOffset": 13780, "endOffset": 13810, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "once",
          "ranges": [{ "startOffset": 14946, "endOffset": 15285, "count": 5 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 15070, "endOffset": 15282, "count": 5 },
            { "startOffset": 15106, "endOffset": 15125, "count": 0 },
            { "startOffset": 15238, "endOffset": 15246, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "exposeInterface",
          "ranges": [{ "startOffset": 16032, "endOffset": 16252, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "defineLazyProperties",
          "ranges": [{ "startOffset": 16751, "endOffset": 17684, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 16970, "endOffset": 17113, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 17216, "endOffset": 17412, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "defineReplaceableLazyAttribute",
          "ranges": [{ "startOffset": 17686, "endOffset": 18586, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [
            { "startOffset": 17898, "endOffset": 18134, "count": 4 },
            { "startOffset": 17946, "endOffset": 17999, "count": 0 },
            { "startOffset": 18024, "endOffset": 18055, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 18239, "endOffset": 18310, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "exposeLazyInterfaces",
          "ranges": [{ "startOffset": 18588, "endOffset": 18688, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setOwnProperty",
          "ranges": [
            { "startOffset": 19883, "endOffset": 20073, "count": 236 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getLazy",
          "ranges": [{ "startOffset": 22094, "endOffset": 22306, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 22175, "endOffset": 22303, "count": 639 },
            { "startOffset": 22219, "endOffset": 22281, "count": 4 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "setupCoverageHooks",
          "ranges": [
            { "startOffset": 22431, "endOffset": 23108, "count": 1 },
            { "startOffset": 22901, "endOffset": 23078, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "countBinaryOnes",
          "ranges": [{ "startOffset": 23195, "endOffset": 23448, "count": 5 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getCIDR",
          "ranges": [
            { "startOffset": 23450, "endOffset": 24426, "count": 2 },
            { "startOffset": 23640, "endOffset": 23700, "count": 0 },
            { "startOffset": 23745, "endOffset": 24392, "count": 20 },
            { "startOffset": 23777, "endOffset": 23857, "count": 14 },
            { "startOffset": 23813, "endOffset": 23840, "count": 12 },
            { "startOffset": 23840, "endOffset": 23857, "count": 2 },
            { "startOffset": 23857, "endOffset": 24388, "count": 8 },
            { "startOffset": 23982, "endOffset": 24052, "count": 3 },
            { "startOffset": 24010, "endOffset": 24044, "count": 0 },
            { "startOffset": 24052, "endOffset": 24382, "count": 5 },
            { "startOffset": 24232, "endOffset": 24374, "count": 2 },
            { "startOffset": 24299, "endOffset": 24337, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "guessHandleType",
          "ranges": [{ "startOffset": 24498, "endOffset": 24595, "count": 6 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 24597, "endOffset": 25141, "count": 9 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "WeakReference",
          "ranges": [{ "startOffset": 24672, "endOffset": 24739, "count": 9 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "incRef",
          "ranges": [{ "startOffset": 24743, "endOffset": 24961, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "decRef",
          "ranges": [{ "startOffset": 24965, "endOffset": 25093, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 25097, "endOffset": 25139, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "17",
      "url": "node:internal/options",
      "functions": [
        {
          "functionName": "getCLIOptionsFromBinding",
          "ranges": [
            { "startOffset": 495, "endOffset": 623, "count": 396 },
            { "startOffset": 553, "endOffset": 599, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getCLIOptionsInfoFromBinding",
          "ranges": [{ "startOffset": 625, "endOffset": 743, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getEmbedderOptions",
          "ranges": [
            { "startOffset": 745, "endOffset": 889, "count": 5 },
            { "startOffset": 801, "endOffset": 861, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "refreshOptions",
          "ranges": [{ "startOffset": 891, "endOffset": 947, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getOptionValue",
          "ranges": [{ "startOffset": 949, "endOffset": 1072, "count": 396 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "18",
      "url": "node:internal/util/types",
      "functions": [
        {
          "functionName": "isUint8Array",
          "ranges": [{ "startOffset": 236, "endOffset": 342, "count": 340 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isBigInt64Array",
          "ranges": [{ "startOffset": 1232, "endOffset": 1344, "count": 8 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "19",
      "url": "node:internal/linkedlist",
      "functions": [
        {
          "functionName": "peek",
          "ranges": [
            { "startOffset": 133, "endOffset": 225, "count": 2 },
            { "startOffset": 186, "endOffset": 224, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "remove",
          "ranges": [{ "startOffset": 260, "endOffset": 487, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "append",
          "ranges": [
            { "startOffset": 543, "endOffset": 995, "count": 1 },
            { "startOffset": 594, "endOffset": 611, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "20",
      "url": "node:internal/priority_queue",
      "functions": [
        {
          "functionName": "insert",
          "ranges": [
            { "startOffset": 692, "endOffset": 875, "count": 1 },
            { "startOffset": 826, "endOffset": 843, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "peek",
          "ranges": [{ "startOffset": 879, "endOffset": 917, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "percolateUp",
          "ranges": [
            { "startOffset": 1646, "endOffset": 2134, "count": 1 },
            { "startOffset": 1821, "endOffset": 2043, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "removeAt",
          "ranges": [
            { "startOffset": 2138, "endOffset": 2468, "count": 1 },
            { "startOffset": 2296, "endOffset": 2310, "count": 0 },
            { "startOffset": 2312, "endOffset": 2464, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "shift",
          "ranges": [
            { "startOffset": 2472, "endOffset": 2626, "count": 1 },
            { "startOffset": 2573, "endOffset": 2580, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "21",
      "url": "node:internal/util/inspect",
      "functions": [
        {
          "functionName": "isUndetectableObject",
          "ranges": [
            { "startOffset": 3751, "endOffset": 3801, "count": 1 },
            { "startOffset": 3783, "endOffset": 3801, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "inspect",
          "ranges": [
            { "startOffset": 9152, "endOffset": 11178, "count": 1 },
            { "startOffset": 10004, "endOffset": 10200, "count": 0 },
            { "startOffset": 10270, "endOffset": 10306, "count": 0 },
            { "startOffset": 10707, "endOffset": 10737, "count": 0 },
            { "startOffset": 10782, "endOffset": 10937, "count": 0 },
            { "startOffset": 10974, "endOffset": 11005, "count": 0 },
            { "startOffset": 11041, "endOffset": 11071, "count": 0 },
            { "startOffset": 11108, "endOffset": 11139, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "stylizeNoColor",
          "ranges": [{ "startOffset": 17324, "endOffset": 17370, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "formatValue",
          "ranges": [
            { "startOffset": 24023, "endOffset": 26780, "count": 1 },
            { "startOffset": 24295, "endOffset": 26779, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "formatNumber",
          "ranges": [
            { "startOffset": 53572, "endOffset": 54360, "count": 1 },
            { "startOffset": 53763, "endOffset": 53803, "count": 0 },
            { "startOffset": 53845, "endOffset": 54359, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "formatPrimitive",
          "ranges": [
            { "startOffset": 54580, "endOffset": 55985, "count": 1 },
            { "startOffset": 54656, "endOffset": 55571, "count": 0 },
            { "startOffset": 55662, "endOffset": 55984, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 55369, "endOffset": 55408, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "formatWithOptions",
          "ranges": [{ "startOffset": 73647, "endOffset": 73839, "count": 21 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "formatWithOptionsInternal",
          "ranges": [
            { "startOffset": 74209, "endOffset": 78233, "count": 21 },
            { "startOffset": 74373, "endOffset": 78036, "count": 19 },
            { "startOffset": 74402, "endOffset": 74429, "count": 17 },
            { "startOffset": 74429, "endOffset": 74516, "count": 2 },
            { "startOffset": 74516, "endOffset": 77875, "count": 11 },
            { "startOffset": 74572, "endOffset": 77869, "count": 2 },
            { "startOffset": 74831, "endOffset": 74920, "count": 0 },
            { "startOffset": 74959, "endOffset": 75048, "count": 0 },
            { "startOffset": 75086, "endOffset": 75130, "count": 0 },
            { "startOffset": 75131, "endOffset": 75187, "count": 0 },
            { "startOffset": 75249, "endOffset": 75465, "count": 0 },
            { "startOffset": 75513, "endOffset": 75599, "count": 0 },
            { "startOffset": 75612, "endOffset": 76035, "count": 0 },
            { "startOffset": 76048, "endOffset": 76144, "count": 0 },
            { "startOffset": 76157, "endOffset": 76385, "count": 0 },
            { "startOffset": 76398, "endOffset": 76868, "count": 0 },
            { "startOffset": 76881, "endOffset": 77211, "count": 0 },
            { "startOffset": 77224, "endOffset": 77310, "count": 0 },
            { "startOffset": 77323, "endOffset": 77455, "count": 0 },
            { "startOffset": 77468, "endOffset": 77552, "count": 0 },
            { "startOffset": 77738, "endOffset": 77861, "count": 0 },
            { "startOffset": 77875, "endOffset": 78032, "count": 2 },
            { "startOffset": 77964, "endOffset": 78026, "count": 0 },
            { "startOffset": 78036, "endOffset": 78064, "count": 4 },
            { "startOffset": 78064, "endOffset": 78217, "count": 1 },
            { "startOffset": 78180, "endOffset": 78187, "count": 0 },
            { "startOffset": 78217, "endOffset": 78232, "count": 4 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "22",
      "url": "node:internal/util/debuglog",
      "functions": [
        {
          "functionName": "initializeDebugEnv",
          "ranges": [
            { "startOffset": 503, "endOffset": 976, "count": 1 },
            { "startOffset": 595, "endOffset": 932, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "testEnabled",
          "ranges": [{ "startOffset": 870, "endOffset": 927, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "testEnabled",
          "ranges": [{ "startOffset": 958, "endOffset": 969, "count": 8 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "noop",
          "ranges": [{ "startOffset": 1404, "endOffset": 1412, "count": 782 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "debuglogImpl",
          "ranges": [
            { "startOffset": 1533, "endOffset": 2091, "count": 8 },
            { "startOffset": 1608, "endOffset": 2063, "count": 5 },
            { "startOffset": 1627, "endOffset": 2016, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "debug",
          "ranges": [{ "startOffset": 1716, "endOffset": 2009, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "debuglog",
          "ranges": [{ "startOffset": 2311, "endOffset": 3337, "count": 8 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "init",
          "ranges": [{ "startOffset": 2342, "endOffset": 2438, "count": 8 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "debug",
          "ranges": [
            { "startOffset": 2453, "endOffset": 2847, "count": 8 },
            { "startOffset": 2700, "endOffset": 2730, "count": 3 },
            { "startOffset": 2737, "endOffset": 2776, "count": 4 },
            { "startOffset": 2783, "endOffset": 2837, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "test",
          "ranges": [{ "startOffset": 2877, "endOffset": 2946, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "logger",
          "ranges": [
            { "startOffset": 2965, "endOffset": 3160, "count": 8 },
            { "startOffset": 3013, "endOffset": 3043, "count": 3 },
            { "startOffset": 3050, "endOffset": 3089, "count": 4 },
            { "startOffset": 3096, "endOffset": 3150, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 3231, "endOffset": 3265, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "23",
      "url": "node:events",
      "functions": [
        {
          "functionName": "EventEmitter",
          "ranges": [{ "startOffset": 6575, "endOffset": 6644, "count": 18 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "checkListener",
          "ranges": [{ "startOffset": 8095, "endOffset": 8173, "count": 35 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 8281, "endOffset": 8329, "count": 2 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "hasEventListener",
          "ranges": [
            { "startOffset": 8446, "endOffset": 8625, "count": 14 },
            { "startOffset": 8516, "endOffset": 8550, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "EventEmitter.init",
          "ranges": [{ "startOffset": 10152, "endOffset": 10820, "count": 18 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "_getMaxListeners",
          "ranges": [{ "startOffset": 12311, "endOffset": 12460, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emit",
          "ranges": [
            { "startOffset": 13617, "endOffset": 15920, "count": 103 }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "_addListener",
          "ranges": [{ "startOffset": 15923, "endOffset": 17839, "count": 20 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "addListener",
          "ranges": [{ "startOffset": 18017, "endOffset": 18109, "count": 20 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onceWrapper",
          "ranges": [
            { "startOffset": 18502, "endOffset": 18766, "count": 1 },
            { "startOffset": 18665, "endOffset": 18704, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "_onceWrap",
          "ranges": [{ "startOffset": 18768, "endOffset": 19009, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "once",
          "ranges": [{ "startOffset": 19200, "endOffset": 19326, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "removeListener",
          "ranges": [
            { "startOffset": 19936, "endOffset": 21299, "count": 14 },
            { "startOffset": 20059, "endOffset": 20071, "count": 0 },
            { "startOffset": 20170, "endOffset": 20199, "count": 2 },
            { "startOffset": 20201, "endOffset": 20572, "count": 12 },
            { "startOffset": 20266, "endOffset": 20313, "count": 0 },
            { "startOffset": 20348, "endOffset": 20405, "count": 0 },
            { "startOffset": 20493, "endOffset": 20554, "count": 11 },
            { "startOffset": 20572, "endOffset": 21273, "count": 2 },
            { "startOffset": 20610, "endOffset": 21273, "count": 1 },
            { "startOffset": 20728, "endOffset": 20760, "count": 0 },
            { "startOffset": 20868, "endOffset": 20880, "count": 0 },
            { "startOffset": 20920, "endOffset": 20933, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "listenerCount",
          "ranges": [{ "startOffset": 24551, "endOffset": 25256, "count": 2 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "arrayClone",
          "ranges": [{ "startOffset": 25508, "endOffset": 25981, "count": 58 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "25",
      "url": "node:buffer",
      "functions": [
        {
          "functionName": "alignPool",
          "ranges": [{ "startOffset": 4097, "endOffset": 4219, "count": 21 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 8395, "endOffset": 8423, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "from",
          "ranges": [{ "startOffset": 8681, "endOffset": 9646, "count": 21 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "alloc",
          "ranges": [
            { "startOffset": 11465, "endOffset": 11737, "count": 7 },
            { "startOffset": 11576, "endOffset": 11589, "count": 0 },
            { "startOffset": 11590, "endOffset": 11601, "count": 0 },
            { "startOffset": 11603, "endOffset": 11704, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "allocUnsafeSlow",
          "ranges": [{ "startOffset": 12259, "endOffset": 12375, "count": 12 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "fromStringFast",
          "ranges": [{ "startOffset": 13030, "endOffset": 13682, "count": 21 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fromString",
          "ranges": [{ "startOffset": 13931, "endOffset": 14291, "count": 21 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isEncoding",
          "ranges": [
            { "startOffset": 16155, "endOffset": 16306, "count": 150 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "write",
          "ranges": [{ "startOffset": 17925, "endOffset": 17989, "count": 21 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "slice",
          "ranges": [{ "startOffset": 18002, "endOffset": 18048, "count": 7 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getEncodingOps",
          "ranges": [
            { "startOffset": 21317, "endOffset": 23141, "count": 7 },
            { "startOffset": 21467, "endOffset": 21703, "count": 0 },
            { "startOffset": 21708, "endOffset": 22127, "count": 0 },
            { "startOffset": 22132, "endOffset": 22286, "count": 0 },
            { "startOffset": 22291, "endOffset": 22447, "count": 0 },
            { "startOffset": 22452, "endOffset": 22833, "count": 0 },
            { "startOffset": 22838, "endOffset": 22970, "count": 0 },
            { "startOffset": 22975, "endOffset": 23135, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "toString",
          "ranges": [
            { "startOffset": 24765, "endOffset": 25380, "count": 7 },
            { "startOffset": 24837, "endOffset": 24885, "count": 0 },
            { "startOffset": 24937, "endOffset": 24947, "count": 0 },
            { "startOffset": 24977, "endOffset": 24987, "count": 0 },
            { "startOffset": 25055, "endOffset": 25067, "count": 0 },
            { "startOffset": 25083, "endOffset": 25121, "count": 0 },
            { "startOffset": 25147, "endOffset": 25157, "count": 0 },
            { "startOffset": 25193, "endOffset": 25227, "count": 0 },
            { "startOffset": 25298, "endOffset": 25339, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "26",
      "url": "node:internal/buffer",
      "functions": [
        {
          "functionName": "FastBuffer",
          "ranges": [{ "startOffset": 26365, "endOffset": 26465, "count": 40 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createUnsafeBuffer",
          "ranges": [{ "startOffset": 30291, "endOffset": 30427, "count": 12 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "reconnectZeroFillToggle",
          "ranges": [{ "startOffset": 30682, "endOffset": 30754, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "28",
      "url": "node:internal/process/per_thread",
      "functions": [
        {
          "functionName": "exit",
          "ranges": [{ "startOffset": 4747, "endOffset": 5860, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "buildAllowedFlags",
          "ranges": [
            { "startOffset": 7998, "endOffset": 12145, "count": 1 },
            { "startOffset": 8339, "endOffset": 8630, "count": 182 },
            { "startOffset": 8391, "endOffset": 8626, "count": 144 },
            { "startOffset": 8488, "endOffset": 8620, "count": 74 },
            { "startOffset": 9090, "endOffset": 9512, "count": 24 },
            { "startOffset": 9144, "endOffset": 9508, "count": 12 },
            { "startOffset": 9233, "endOffset": 9302, "count": 3 },
            { "startOffset": 9367, "endOffset": 9436, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "isAccepted",
          "ranges": [
            { "startOffset": 8634, "endOffset": 9038, "count": 31 },
            { "startOffset": 8696, "endOffset": 8710, "count": 30 },
            { "startOffset": 8712, "endOffset": 8724, "count": 2 },
            { "startOffset": 8724, "endOffset": 8801, "count": 29 },
            { "startOffset": 8801, "endOffset": 8970, "count": 2 },
            { "startOffset": 8851, "endOffset": 8898, "count": 1 },
            { "startOffset": 8970, "endOffset": 9037, "count": 27 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "trimLeadingDashes",
          "ranges": [{ "startOffset": 9546, "endOffset": 9608, "count": 230 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "NodeEnvironmentFlagsSet",
          "ranges": [{ "startOffset": 9918, "endOffset": 9994, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "add",
          "ranges": [{ "startOffset": 10000, "endOffset": 10069, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "delete",
          "ranges": [{ "startOffset": 10075, "endOffset": 10148, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "clear",
          "ranges": [{ "startOffset": 10154, "endOffset": 10206, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "has",
          "ranges": [{ "startOffset": 10212, "endOffset": 11027, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "entries",
          "ranges": [{ "startOffset": 11033, "endOffset": 11198, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "forEach",
          "ranges": [{ "startOffset": 11204, "endOffset": 11381, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get size",
          "ranges": [{ "startOffset": 11387, "endOffset": 11448, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "values",
          "ranges": [{ "startOffset": 11454, "endOffset": 11617, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "toggleTraceCategoryState",
          "ranges": [
            { "startOffset": 12335, "endOffset": 12665, "count": 1 },
            { "startOffset": 12415, "endOffset": 12590, "count": 0 },
            { "startOffset": 12622, "endOffset": 12663, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "29",
      "url": "node:internal/fs/utils",
      "functions": [
        {
          "functionName": "lazyLoadFs",
          "ranges": [{ "startOffset": 3476, "endOffset": 3555, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "assertEncoding",
          "ranges": [
            { "startOffset": 3557, "endOffset": 3757, "count": 319 },
            { "startOffset": 3608, "endOffset": 3639, "count": 150 },
            { "startOffset": 3641, "endOffset": 3755, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Dirent",
          "ranges": [{ "startOffset": 3776, "endOffset": 3907, "count": 18 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isDirectory",
          "ranges": [{ "startOffset": 3911, "endOffset": 3972, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isFile",
          "ranges": [{ "startOffset": 3976, "endOffset": 4033, "count": 18 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "copyObject",
          "ranges": [
            { "startOffset": 4704, "endOffset": 4832, "count": 1 },
            { "startOffset": 4787, "endOffset": 4813, "count": 2 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getDirents",
          "ranges": [
            { "startOffset": 5491, "endOffset": 6606, "count": 5 },
            { "startOffset": 5715, "endOffset": 6388, "count": 18 },
            { "startOffset": 5784, "endOffset": 6310, "count": 0 },
            { "startOffset": 6453, "endOffset": 6604, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 6049, "endOffset": 6300, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getOptions",
          "ranges": [
            { "startOffset": 7391, "endOffset": 8017, "count": 324 },
            { "startOffset": 7475, "endOffset": 7507, "count": 319 },
            { "startOffset": 7509, "endOffset": 7541, "count": 5 },
            { "startOffset": 7541, "endOffset": 7578, "count": 319 },
            { "startOffset": 7578, "endOffset": 7696, "count": 149 },
            { "startOffset": 7696, "endOffset": 7818, "count": 170 },
            { "startOffset": 7735, "endOffset": 7818, "count": 0 },
            { "startOffset": 7818, "endOffset": 7932, "count": 319 },
            { "startOffset": 7932, "endOffset": 7996, "count": 0 },
            { "startOffset": 7996, "endOffset": 8016, "count": 319 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "handleErrorFromBinding",
          "ranges": [
            { "startOffset": 8075, "endOffset": 8608, "count": 20 },
            { "startOffset": 8145, "endOffset": 8284, "count": 0 },
            { "startOffset": 8316, "endOffset": 8606, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "StatsBase",
          "ranges": [{ "startOffset": 9349, "endOffset": 9656, "count": 8 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "StatsBase.isDirectory",
          "ranges": [{ "startOffset": 9692, "endOffset": 9749, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "StatsBase.isFile",
          "ranges": [{ "startOffset": 9781, "endOffset": 9838, "count": 5 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "msFromTimeSpec",
          "ranges": [{ "startOffset": 10437, "endOffset": 10519, "count": 32 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "dateFromMs",
          "ranges": [{ "startOffset": 11006, "endOffset": 11117, "count": 32 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "Stats",
          "ranges": [{ "startOffset": 12289, "endOffset": 12831, "count": 8 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "Stats._checkModeProperty",
          "ranges": [
            { "startOffset": 13172, "endOffset": 13402, "count": 9 },
            { "startOffset": 13209, "endOffset": 13287, "count": 0 },
            { "startOffset": 13289, "endOffset": 13356, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getStatsFromBinding",
          "ranges": [
            { "startOffset": 13520, "endOffset": 14599, "count": 8 },
            { "startOffset": 13600, "endOffset": 14126, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "stringToFlags",
          "ranges": [
            { "startOffset": 15001, "endOffset": 16257, "count": 155 },
            { "startOffset": 15082, "endOffset": 15137, "count": 0 },
            { "startOffset": 15160, "endOffset": 15186, "count": 0 },
            { "startOffset": 15211, "endOffset": 15238, "count": 154 },
            { "startOffset": 15243, "endOffset": 15254, "count": 0 },
            { "startOffset": 15276, "endOffset": 15313, "count": 0 },
            { "startOffset": 15318, "endOffset": 15344, "count": 0 },
            { "startOffset": 15349, "endOffset": 15361, "count": 0 },
            { "startOffset": 15383, "endOffset": 15419, "count": 0 },
            { "startOffset": 15425, "endOffset": 15472, "count": 0 },
            { "startOffset": 15477, "endOffset": 15488, "count": 0 },
            { "startOffset": 15510, "endOffset": 15567, "count": 0 },
            { "startOffset": 15573, "endOffset": 15619, "count": 0 },
            { "startOffset": 15624, "endOffset": 15635, "count": 0 },
            { "startOffset": 15657, "endOffset": 15712, "count": 0 },
            { "startOffset": 15718, "endOffset": 15766, "count": 1 },
            { "startOffset": 15771, "endOffset": 15782, "count": 0 },
            { "startOffset": 15804, "endOffset": 15862, "count": 0 },
            { "startOffset": 15867, "endOffset": 15878, "count": 0 },
            { "startOffset": 15900, "endOffset": 15958, "count": 0 },
            { "startOffset": 15964, "endOffset": 16011, "count": 0 },
            { "startOffset": 16016, "endOffset": 16027, "count": 0 },
            { "startOffset": 16049, "endOffset": 16105, "count": 0 },
            { "startOffset": 16110, "endOffset": 16121, "count": 0 },
            { "startOffset": 16143, "endOffset": 16199, "count": 0 },
            { "startOffset": 16203, "endOffset": 16256, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 17756, "endOffset": 18241, "count": 20 },
            { "startOffset": 17819, "endOffset": 17919, "count": 0 },
            { "startOffset": 17959, "endOffset": 18068, "count": 0 },
            { "startOffset": 18090, "endOffset": 18178, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 18284, "endOffset": 18996, "count": 340 },
            { "startOffset": 18346, "endOffset": 18368, "count": 0 },
            { "startOffset": 18370, "endOffset": 18477, "count": 0 },
            { "startOffset": 18668, "endOffset": 18688, "count": 0 },
            { "startOffset": 18758, "endOffset": 18826, "count": 0 },
            { "startOffset": 18845, "endOffset": 18995, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 19041, "endOffset": 19176, "count": 175 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 19219, "endOffset": 19340, "count": 20 },
            { "startOffset": 19270, "endOffset": 19289, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 21781, "endOffset": 22505, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 21957, "endOffset": 22501, "count": 1 },
            { "startOffset": 21988, "endOffset": 22120, "count": 0 },
            { "startOffset": 22140, "endOffset": 22163, "count": 0 },
            { "startOffset": 22165, "endOffset": 22196, "count": 0 },
            { "startOffset": 22226, "endOffset": 22247, "count": 0 },
            { "startOffset": 22249, "endOffset": 22467, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 23815, "endOffset": 24284, "count": 1 },
            { "startOffset": 23899, "endOffset": 23915, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "30",
      "url": "node:internal/url",
      "functions": [
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 3494, "endOffset": 4283, "count": 254 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get hasPort",
          "ranges": [{ "startOffset": 4062, "endOffset": 4127, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get hasSearch",
          "ranges": [{ "startOffset": 4131, "endOffset": 4206, "count": 221 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get hasHash",
          "ranges": [{ "startOffset": 4210, "endOffset": 4281, "count": 221 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isURL",
          "ranges": [
            { "startOffset": 21737, "endOffset": 21862, "count": 403 },
            { "startOffset": 21788, "endOffset": 21804, "count": 68 },
            { "startOffset": 21805, "endOffset": 21831, "count": 68 },
            { "startOffset": 21832, "endOffset": 21858, "count": 68 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [
            { "startOffset": 22189, "endOffset": 33222, "count": 254 }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "setURLSearchParamsModified",
          "ranges": [{ "startOffset": 22319, "endOffset": 22807, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "URL",
          "ranges": [
            { "startOffset": 22816, "endOffset": 23280, "count": 254 },
            { "startOffset": 22912, "endOffset": 22960, "count": 0 },
            { "startOffset": 23065, "endOffset": 23096, "count": 117 },
            { "startOffset": 23236, "endOffset": 23276, "count": 222 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "parse",
          "ranges": [
            { "startOffset": 23291, "endOffset": 23533, "count": 21 },
            { "startOffset": 23356, "endOffset": 23404, "count": 0 },
            { "startOffset": 23504, "endOffset": 23521, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 23537, "endOffset": 24257, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#getSearchFromContext",
          "ranges": [
            { "startOffset": 24261, "endOffset": 24595, "count": 6 },
            { "startOffset": 24331, "endOffset": 24594, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#getSearchFromParams",
          "ranges": [{ "startOffset": 24599, "endOffset": 24710, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#ensureSearchParamsUpdated",
          "ranges": [
            { "startOffset": 24714, "endOffset": 25153, "count": 251 },
            { "startOffset": 24982, "endOffset": 25149, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#updateContext",
          "ranges": [
            { "startOffset": 25401, "endOffset": 27046, "count": 234 },
            { "startOffset": 25510, "endOffset": 25531, "count": 6 },
            { "startOffset": 25532, "endOffset": 25630, "count": 0 },
            { "startOffset": 26326, "endOffset": 27042, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "toString",
          "ranges": [{ "startOffset": 27050, "endOffset": 27235, "count": 94 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get href",
          "ranges": [
            { "startOffset": 27239, "endOffset": 27424, "count": 151 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "set href",
          "ranges": [{ "startOffset": 27428, "endOffset": 27647, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get origin",
          "ranges": [{ "startOffset": 27665, "endOffset": 28534, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get protocol",
          "ranges": [
            { "startOffset": 28538, "endOffset": 28642, "count": 211 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "set protocol",
          "ranges": [{ "startOffset": 28646, "endOffset": 28819, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get username",
          "ranges": [{ "startOffset": 28823, "endOffset": 29050, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set username",
          "ranges": [{ "startOffset": 29054, "endOffset": 29227, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get password",
          "ranges": [{ "startOffset": 29231, "endOffset": 29454, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set password",
          "ranges": [{ "startOffset": 29458, "endOffset": 29631, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get host",
          "ranges": [
            { "startOffset": 29635, "endOffset": 30066, "count": 12 },
            { "startOffset": 29739, "endOffset": 29764, "count": 0 },
            { "startOffset": 29945, "endOffset": 29969, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "set host",
          "ranges": [{ "startOffset": 30070, "endOffset": 30235, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get hostname",
          "ranges": [
            { "startOffset": 30239, "endOffset": 30521, "count": 84 },
            { "startOffset": 30405, "endOffset": 30430, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "set hostname",
          "ranges": [{ "startOffset": 30525, "endOffset": 30698, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get port",
          "ranges": [{ "startOffset": 30702, "endOffset": 30810, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set port",
          "ranges": [{ "startOffset": 30814, "endOffset": 30979, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get pathname",
          "ranges": [
            { "startOffset": 30983, "endOffset": 31275, "count": 215 },
            { "startOffset": 31049, "endOffset": 31099, "count": 0 },
            { "startOffset": 31132, "endOffset": 31180, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "set pathname",
          "ranges": [{ "startOffset": 31279, "endOffset": 31452, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get search",
          "ranges": [{ "startOffset": 31456, "endOffset": 31653, "count": 6 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "set search",
          "ranges": [{ "startOffset": 31657, "endOffset": 31861, "count": 6 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get searchParams",
          "ranges": [{ "startOffset": 31879, "endOffset": 32237, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get hash",
          "ranges": [
            { "startOffset": 32241, "endOffset": 32456, "count": 6 },
            { "startOffset": 32285, "endOffset": 32347, "count": 0 },
            { "startOffset": 32373, "endOffset": 32455, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "set hash",
          "ranges": [{ "startOffset": 32460, "endOffset": 32625, "count": 6 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "toJSON",
          "ranges": [{ "startOffset": 32629, "endOffset": 32812, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "canParse",
          "ranges": [{ "startOffset": 32823, "endOffset": 33220, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getPathFromURLPosix",
          "ranges": [
            { "startOffset": 42504, "endOffset": 43025, "count": 84 },
            { "startOffset": 42567, "endOffset": 42623, "count": 0 },
            { "startOffset": 42701, "endOffset": 42984, "count": 6270 },
            { "startOffset": 42732, "endOffset": 42980, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "fileURLToPath",
          "ranges": [
            { "startOffset": 43027, "endOffset": 43439, "count": 84 },
            { "startOffset": 43154, "endOffset": 43175, "count": 21 },
            { "startOffset": 43175, "endOffset": 43269, "count": 63 },
            { "startOffset": 43205, "endOffset": 43269, "count": 0 },
            { "startOffset": 43307, "endOffset": 43348, "count": 0 },
            { "startOffset": 43381, "endOffset": 43408, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "encodePathChars",
          "ranges": [
            { "startOffset": 43992, "endOffset": 46009, "count": 52 },
            { "startOffset": 44099, "endOffset": 44180, "count": 0 },
            { "startOffset": 44229, "endOffset": 44306, "count": 0 },
            { "startOffset": 44354, "endOffset": 44435, "count": 0 },
            { "startOffset": 44483, "endOffset": 44571, "count": 0 },
            { "startOffset": 44618, "endOffset": 44697, "count": 0 },
            { "startOffset": 44744, "endOffset": 44823, "count": 0 },
            { "startOffset": 44870, "endOffset": 44948, "count": 0 },
            { "startOffset": 44995, "endOffset": 45081, "count": 0 },
            { "startOffset": 45128, "endOffset": 45219, "count": 0 },
            { "startOffset": 45381, "endOffset": 45464, "count": 0 },
            { "startOffset": 45511, "endOffset": 45603, "count": 0 },
            { "startOffset": 45650, "endOffset": 45729, "count": 0 },
            { "startOffset": 45776, "endOffset": 45861, "count": 0 },
            { "startOffset": 45908, "endOffset": 45987, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "pathToFileURL",
          "ranges": [
            { "startOffset": 46011, "endOffset": 47870, "count": 52 },
            { "startOffset": 46133, "endOffset": 46179, "count": 0 },
            { "startOffset": 46181, "endOffset": 47319, "count": 0 },
            { "startOffset": 47345, "endOffset": 47375, "count": 0 },
            { "startOffset": 47668, "endOffset": 47680, "count": 0 },
            { "startOffset": 47682, "endOffset": 47721, "count": 0 },
            { "startOffset": 47724, "endOffset": 47775, "count": 0 },
            { "startOffset": 47781, "endOffset": 47797, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "toPathIfFileURL",
          "ranges": [
            { "startOffset": 47872, "endOffset": 48009, "count": 340 },
            { "startOffset": 47947, "endOffset": 47968, "count": 335 },
            { "startOffset": 47968, "endOffset": 48008, "count": 5 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "33",
      "url": "node:path",
      "functions": [
        {
          "functionName": "isPosixPathSeparator",
          "ranges": [
            { "startOffset": 2158, "endOffset": 2235, "count": 88993 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "normalizeString",
          "ranges": [
            { "startOffset": 2470, "endOffset": 4418, "count": 1408 },
            { "startOffset": 2687, "endOffset": 4402, "count": 88873 },
            { "startOffset": 2720, "endOffset": 2762, "count": 87465 },
            { "startOffset": 2762, "endOffset": 2853, "count": 1408 },
            { "startOffset": 2805, "endOffset": 2811, "count": 1288 },
            { "startOffset": 2811, "endOffset": 2853, "count": 120 },
            { "startOffset": 2853, "endOffset": 2886, "count": 87585 },
            { "startOffset": 2886, "endOffset": 4303, "count": 13013 },
            { "startOffset": 2918, "endOffset": 2931, "count": 11130 },
            { "startOffset": 2933, "endOffset": 2958, "count": 2033 },
            { "startOffset": 2958, "endOffset": 4260, "count": 10980 },
            { "startOffset": 2980, "endOffset": 4015, "count": 45 },
            { "startOffset": 3009, "endOffset": 3035, "count": 26 },
            { "startOffset": 3036, "endOffset": 3110, "count": 1 },
            { "startOffset": 3111, "endOffset": 3185, "count": 1 },
            { "startOffset": 3187, "endOffset": 3875, "count": 44 },
            { "startOffset": 3219, "endOffset": 3696, "count": 25 },
            { "startOffset": 3339, "endOffset": 3415, "count": 0 },
            { "startOffset": 3696, "endOffset": 3865, "count": 19 },
            { "startOffset": 3724, "endOffset": 3865, "count": 0 },
            { "startOffset": 3875, "endOffset": 4007, "count": 20 },
            { "startOffset": 3938, "endOffset": 3956, "count": 1 },
            { "startOffset": 3957, "endOffset": 3963, "count": 19 },
            { "startOffset": 4015, "endOffset": 4260, "count": 10935 },
            { "startOffset": 4061, "endOffset": 4130, "count": 9546 },
            { "startOffset": 4130, "endOffset": 4205, "count": 1389 },
            { "startOffset": 4260, "endOffset": 4303, "count": 12988 },
            { "startOffset": 4303, "endOffset": 4398, "count": 74572 },
            { "startOffset": 4331, "endOffset": 4345, "count": 1351 },
            { "startOffset": 4347, "endOffset": 4368, "count": 275 },
            { "startOffset": 4368, "endOffset": 4398, "count": 74297 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 36606, "endOffset": 36625, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "resolve",
          "ranges": [
            { "startOffset": 36750, "endOffset": 37854, "count": 1288 },
            { "startOffset": 36872, "endOffset": 36892, "count": 2230 },
            { "startOffset": 36899, "endOffset": 37204, "count": 2225 },
            { "startOffset": 37030, "endOffset": 37057, "count": 2 },
            { "startOffset": 37057, "endOffset": 37204, "count": 2223 },
            { "startOffset": 37233, "endOffset": 37408, "count": 1 },
            { "startOffset": 37793, "endOffset": 37843, "count": 0 },
            { "startOffset": 37844, "endOffset": 37849, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "normalize",
          "ranges": [
            { "startOffset": 37920, "endOffset": 38533, "count": 120 },
            { "startOffset": 38006, "endOffset": 38017, "count": 0 },
            { "startOffset": 38345, "endOffset": 38439, "count": 0 },
            { "startOffset": 38473, "endOffset": 38485, "count": 0 },
            { "startOffset": 38509, "endOffset": 38521, "count": 27 },
            { "startOffset": 38522, "endOffset": 38528, "count": 93 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "isAbsolute",
          "ranges": [
            { "startOffset": 38600, "endOffset": 38756, "count": 199 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "join",
          "ranges": [
            { "startOffset": 38825, "endOffset": 39189, "count": 27 },
            { "startOffset": 38874, "endOffset": 38885, "count": 0 },
            { "startOffset": 38950, "endOffset": 39079, "count": 58 },
            { "startOffset": 39040, "endOffset": 39073, "count": 57 },
            { "startOffset": 39114, "endOffset": 39125, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "relative",
          "ranges": [
            { "startOffset": 39279, "endOffset": 41639, "count": 5 },
            { "startOffset": 39392, "endOffset": 39402, "count": 1 },
            { "startOffset": 39402, "endOffset": 39529, "count": 4 },
            { "startOffset": 39529, "endOffset": 39539, "count": 0 },
            { "startOffset": 39539, "endOffset": 39811, "count": 4 },
            { "startOffset": 39812, "endOffset": 39819, "count": 0 },
            { "startOffset": 39893, "endOffset": 40128, "count": 38 },
            { "startOffset": 40041, "endOffset": 40047, "count": 1 },
            { "startOffset": 40047, "endOffset": 40122, "count": 37 },
            { "startOffset": 40104, "endOffset": 40122, "count": 1 },
            { "startOffset": 40128, "endOffset": 40151, "count": 4 },
            { "startOffset": 40151, "endOffset": 41113, "count": 3 },
            { "startOffset": 40460, "endOffset": 40642, "count": 0 },
            { "startOffset": 40650, "endOffset": 41107, "count": 0 },
            { "startOffset": 41113, "endOffset": 41291, "count": 1 },
            { "startOffset": 41291, "endOffset": 41452, "count": 18 },
            { "startOffset": 41317, "endOffset": 41387, "count": 17 },
            { "startOffset": 41389, "endOffset": 41446, "count": 2 },
            { "startOffset": 41423, "endOffset": 41429, "count": 1 },
            { "startOffset": 41430, "endOffset": 41437, "count": 1 },
            { "startOffset": 41452, "endOffset": 41638, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "toNamespacedPath",
          "ranges": [
            { "startOffset": 41705, "endOffset": 41781, "count": 1094 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "dirname",
          "ranges": [
            { "startOffset": 41847, "endOffset": 42523, "count": 475 },
            { "startOffset": 41930, "endOffset": 41941, "count": 0 },
            { "startOffset": 42115, "endOffset": 42368, "count": 5815 },
            { "startOffset": 42186, "endOffset": 42270, "count": 473 },
            { "startOffset": 42270, "endOffset": 42362, "count": 5342 },
            { "startOffset": 42396, "endOffset": 42423, "count": 2 },
            { "startOffset": 42417, "endOffset": 42422, "count": 0 },
            { "startOffset": 42423, "endOffset": 42452, "count": 473 },
            { "startOffset": 42460, "endOffset": 42472, "count": 0 },
            { "startOffset": 42472, "endOffset": 42522, "count": 473 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "basename",
          "ranges": [
            { "startOffset": 42619, "endOffset": 45049, "count": 158 },
            { "startOffset": 42680, "endOffset": 42713, "count": 0 },
            { "startOffset": 42845, "endOffset": 42865, "count": 0 },
            { "startOffset": 42866, "endOffset": 42897, "count": 0 },
            { "startOffset": 42899, "endOffset": 44423, "count": 0 },
            { "startOffset": 44471, "endOffset": 44956, "count": 2901 },
            { "startOffset": 44542, "endOffset": 44766, "count": 118 },
            { "startOffset": 44766, "endOffset": 44950, "count": 2783 },
            { "startOffset": 44788, "endOffset": 44950, "count": 158 },
            { "startOffset": 44984, "endOffset": 44994, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "34",
      "url": "node:querystring",
      "functions": [
        {
          "functionName": "parse",
          "ranges": [
            { "startOffset": 9392, "endOffset": 14184, "count": 1 },
            { "startOffset": 9537, "endOffset": 9577, "count": 0 },
            { "startOffset": 9578, "endOffset": 9602, "count": 0 },
            { "startOffset": 9628, "endOffset": 9640, "count": 0 },
            { "startOffset": 9641, "endOffset": 9664, "count": 0 },
            { "startOffset": 9768, "endOffset": 9806, "count": 0 },
            { "startOffset": 9808, "endOffset": 10370, "count": 0 },
            { "startOffset": 10372, "endOffset": 10662, "count": 0 },
            { "startOffset": 10663, "endOffset": 10668, "count": 0 },
            { "startOffset": 10732, "endOffset": 14183, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "35",
      "url": "node:internal/process/task_queues",
      "functions": [
        {
          "functionName": "setHasTickScheduled",
          "ranges": [
            { "startOffset": 1059, "endOffset": 1145, "count": 11 },
            { "startOffset": 1135, "endOffset": 1138, "count": 4 },
            { "startOffset": 1139, "endOffset": 1142, "count": 7 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "processTicksAndRejections",
          "ranges": [
            { "startOffset": 1445, "endOffset": 2424, "count": 8 },
            { "startOffset": 1501, "endOffset": 2304, "count": 9 },
            { "startOffset": 1547, "endOffset": 2279, "count": 4 },
            { "startOffset": 1748, "endOffset": 1781, "count": 0 },
            { "startOffset": 1914, "endOffset": 1956, "count": 0 },
            { "startOffset": 1969, "endOffset": 2020, "count": 0 },
            { "startOffset": 2033, "endOffset": 2093, "count": 0 },
            { "startOffset": 2106, "endOffset": 2133, "count": 0 },
            { "startOffset": 2164, "endOffset": 2246, "count": 3 },
            { "startOffset": 2217, "endOffset": 2238, "count": 0 },
            { "startOffset": 2246, "endOffset": 2279, "count": 3 },
            { "startOffset": 2279, "endOffset": 2304, "count": 8 },
            { "startOffset": 2304, "endOffset": 2358, "count": 7 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "nextTick",
          "ranges": [
            { "startOffset": 2568, "endOffset": 3442, "count": 4 },
            { "startOffset": 2669, "endOffset": 2676, "count": 0 },
            { "startOffset": 2724, "endOffset": 2738, "count": 0 },
            { "startOffset": 2785, "endOffset": 2836, "count": 0 },
            { "startOffset": 2841, "endOffset": 2906, "count": 0 },
            { "startOffset": 2911, "endOffset": 3054, "count": 0 },
            { "startOffset": 3354, "endOffset": 3414, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "36",
      "url": "node:internal/process/promises",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1267, "endOffset": 1379, "count": 13 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 1414, "endOffset": 1569, "count": 12 },
            { "startOffset": 1473, "endOffset": 1565, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "setHasRejectionToWarn",
          "ranges": [
            { "startOffset": 4097, "endOffset": 4187, "count": 13 },
            { "startOffset": 4177, "endOffset": 4180, "count": 6 },
            { "startOffset": 4181, "endOffset": 4184, "count": 7 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "promiseRejectHandler",
          "ranges": [
            { "startOffset": 4596, "endOffset": 5279, "count": 12 },
            { "startOffset": 4696, "endOffset": 4761, "count": 1 },
            { "startOffset": 4784, "endOffset": 4878, "count": 6 },
            { "startOffset": 4883, "endOffset": 4971, "count": 6 },
            { "startOffset": 4976, "endOffset": 5121, "count": 0 },
            { "startOffset": 5126, "endOffset": 5273, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "unhandledRejection",
          "ranges": [{ "startOffset": 6708, "endOffset": 6922, "count": 6 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "handledRejection",
          "ranges": [
            { "startOffset": 6960, "endOffset": 7541, "count": 6 },
            { "startOffset": 7109, "endOffset": 7539, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getUnhandledRejectionsMode",
          "ranges": [
            { "startOffset": 11313, "endOffset": 11864, "count": 1 },
            { "startOffset": 11469, "endOffset": 11525, "count": 0 },
            { "startOffset": 11530, "endOffset": 11590, "count": 0 },
            { "startOffset": 11595, "endOffset": 11653, "count": 0 },
            { "startOffset": 11658, "endOffset": 11714, "count": 0 },
            { "startOffset": 11719, "endOffset": 11802, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "processPromiseRejections",
          "ranges": [
            { "startOffset": 12037, "endOffset": 13386, "count": 7 },
            { "startOffset": 12197, "endOffset": 12376, "count": 0 },
            { "startOffset": 12582, "endOffset": 13292, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "37",
      "url": "node:internal/fixed_queue",
      "functions": [
        {
          "functionName": "isEmpty",
          "ranges": [{ "startOffset": 3130, "endOffset": 3182, "count": 24 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isFull",
          "ranges": [{ "startOffset": 3186, "endOffset": 3253, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "push",
          "ranges": [{ "startOffset": 3257, "endOffset": 3344, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "shift",
          "ranges": [
            { "startOffset": 3348, "endOffset": 3563, "count": 12 },
            { "startOffset": 3441, "endOffset": 3453, "count": 8 },
            { "startOffset": 3453, "endOffset": 3562, "count": 4 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "isEmpty",
          "ranges": [{ "startOffset": 3683, "endOffset": 3730, "count": 12 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "push",
          "ranges": [
            { "startOffset": 3734, "endOffset": 3998, "count": 4 },
            { "startOffset": 3775, "endOffset": 3968, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "shift",
          "ranges": [
            { "startOffset": 4002, "endOffset": 4257, "count": 12 },
            { "startOffset": 4117, "endOffset": 4236, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "39",
      "url": "node:timers",
      "functions": [
        {
          "functionName": "setTimeout",
          "ranges": [
            { "startOffset": 4093, "endOffset": 4762, "count": 1 },
            { "startOffset": 4260, "endOffset": 4267, "count": 0 },
            { "startOffset": 4297, "endOffset": 4338, "count": 0 },
            { "startOffset": 4343, "endOffset": 4390, "count": 0 },
            { "startOffset": 4395, "endOffset": 4628, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "clearTimeout",
          "ranges": [
            { "startOffset": 5082, "endOffset": 5448, "count": 1 },
            { "startOffset": 5125, "endOffset": 5144, "count": 0 },
            { "startOffset": 5146, "endOffset": 5213, "count": 0 },
            { "startOffset": 5276, "endOffset": 5446, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "40",
      "url": "node:internal/process/execution",
      "functions": [
        {
          "functionName": "tryGetCwd",
          "ranges": [
            { "startOffset": 945, "endOffset": 1275, "count": 1 },
            { "startOffset": 1006, "endOffset": 1273, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "43",
      "url": "node:internal/source_map/source_map_cache",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 344, "endOffset": 369, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 676, "endOffset": 804, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getSourceMapsEnabled",
          "ranges": [{ "startOffset": 1579, "endOffset": 1642, "count": 22 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "setSourceMapsEnabled",
          "ranges": [
            { "startOffset": 1729, "endOffset": 2313, "count": 1 },
            { "startOffset": 1837, "endOffset": 2020, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "extractSourceURLMagicComment",
          "ranges": [
            { "startOffset": 2631, "endOffset": 3231, "count": 21 },
            { "startOffset": 2933, "endOffset": 2966, "count": 0 },
            { "startOffset": 3019, "endOffset": 3155, "count": 0 },
            { "startOffset": 3157, "endOffset": 3230, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "maybeCacheSourceMap",
          "ranges": [
            { "startOffset": 4659, "endOffset": 6205, "count": 21 },
            { "startOffset": 4858, "endOffset": 4878, "count": 0 },
            { "startOffset": 4881, "endOffset": 4888, "count": 0 },
            { "startOffset": 5036, "endOffset": 5132, "count": 0 },
            { "startOffset": 5168, "endOffset": 5234, "count": 0 },
            { "startOffset": 5323, "endOffset": 5340, "count": 0 },
            { "startOffset": 5778, "endOffset": 5784, "count": 7 },
            { "startOffset": 5785, "endOffset": 5799, "count": 14 },
            { "startOffset": 5847, "endOffset": 5994, "count": 0 },
            { "startOffset": 6104, "endOffset": 6127, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "dataFromUrl",
          "ranges": [
            { "startOffset": 7259, "endOffset": 7680, "count": 21 },
            { "startOffset": 7373, "endOffset": 7581, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "lineLengths",
          "ranges": [
            { "startOffset": 7870, "endOffset": 8666, "count": 21 },
            { "startOffset": 8041, "endOffset": 8605, "count": 276737 },
            { "startOffset": 8417, "endOffset": 8440, "count": 268885 },
            { "startOffset": 8441, "endOffset": 8464, "count": 268885 },
            { "startOffset": 8466, "endOffset": 8601, "count": 7852 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "sourceMapFromFile",
          "ranges": [
            { "startOffset": 8818, "endOffset": 9098, "count": 21 },
            { "startOffset": 9046, "endOffset": 9096, "count": 14 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "sourcesToAbsolute",
          "ranges": [{ "startOffset": 10135, "endOffset": 10539, "count": 7 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 10213, "endOffset": 10396, "count": 7 },
            { "startOffset": 10302, "endOffset": 10350, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "44",
      "url": "node:internal/modules/helpers",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1182, "endOffset": 1207, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "toRealPath",
          "ranges": [{ "startOffset": 1676, "endOffset": 1808, "count": 159 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "initializeCjsConditions",
          "ranges": [
            { "startOffset": 1924, "endOffset": 2415, "count": 1 },
            { "startOffset": 2103, "endOffset": 2107, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getCjsConditions",
          "ranges": [
            { "startOffset": 2482, "endOffset": 2609, "count": 19 },
            { "startOffset": 2547, "endOffset": 2583, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "loadBuiltinModule",
          "ranges": [
            { "startOffset": 2836, "endOffset": 3216, "count": 73 },
            { "startOffset": 2925, "endOffset": 2942, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "lazyModule",
          "ranges": [
            { "startOffset": 3309, "endOffset": 3422, "count": 115 },
            { "startOffset": 3353, "endOffset": 3401, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "makeRequireFunction",
          "ranges": [
            { "startOffset": 4011, "endOffset": 6543, "count": 115 },
            { "startOffset": 4150, "endOffset": 4213, "count": 0 },
            { "startOffset": 4280, "endOffset": 5551, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "require",
          "ranges": [{ "startOffset": 4423, "endOffset": 5546, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "require",
          "ranges": [{ "startOffset": 5573, "endOffset": 5713, "count": 266 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "resolve",
          "ranges": [{ "startOffset": 5899, "endOffset": 6045, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "paths",
          "ranges": [{ "startOffset": 6190, "endOffset": 6312, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "stripBOM",
          "ranges": [
            { "startOffset": 6755, "endOffset": 6910, "count": 2 },
            { "startOffset": 6837, "endOffset": 6890, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "normalizeReferrerURL",
          "ranges": [
            { "startOffset": 9391, "endOffset": 9894, "count": 23 },
            { "startOffset": 9496, "endOffset": 9523, "count": 0 },
            { "startOffset": 9660, "endOffset": 9757, "count": 0 },
            { "startOffset": 9759, "endOffset": 9893, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "hasStartedUserCJSExecution",
          "ranges": [{ "startOffset": 11438, "endOffset": 11512, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "setHasStartedUserCJSExecution",
          "ranges": [
            { "startOffset": 11516, "endOffset": 11593, "count": 115 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "hasStartedUserESMExecution",
          "ranges": [{ "startOffset": 11597, "endOffset": 11671, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "setHasStartedUserESMExecution",
          "ranges": [{ "startOffset": 11675, "endOffset": 11752, "count": 2 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "45",
      "url": "node:fs",
      "functions": [
        {
          "functionName": "makeCallback",
          "ranges": [{ "startOffset": 4712, "endOffset": 4824, "count": 5 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4780, "endOffset": 4821, "count": 5 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "makeStatsCallback",
          "ranges": [{ "startOffset": 5005, "endOffset": 5172, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 5078, "endOffset": 5169, "count": 2 },
            { "startOffset": 5109, "endOffset": 5124, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "isFileType",
          "ranges": [
            { "startOffset": 5197, "endOffset": 5457, "count": 2064 },
            { "startOffset": 5396, "endOffset": 5416, "count": 216 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "readFileSync",
          "ranges": [
            { "startOffset": 11296, "endOffset": 12935, "count": 138 },
            { "startOffset": 11418, "endOffset": 11449, "count": 0 },
            { "startOffset": 11622, "endOffset": 11712, "count": 0 },
            { "startOffset": 11713, "endOffset": 11753, "count": 0 },
            { "startOffset": 11841, "endOffset": 11851, "count": 0 },
            { "startOffset": 11852, "endOffset": 11855, "count": 0 },
            { "startOffset": 11985, "endOffset": 12934, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "closeSync",
          "ranges": [{ "startOffset": 13453, "endOffset": 13500, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "openSync",
          "ranges": [{ "startOffset": 14492, "endOffset": 14699, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "writeSync",
          "ranges": [
            { "startOffset": 23179, "endOffset": 24312, "count": 20 },
            { "startOffset": 23410, "endOffset": 23560, "count": 0 },
            { "startOffset": 23599, "endOffset": 23615, "count": 0 },
            { "startOffset": 23640, "endOffset": 23665, "count": 0 },
            { "startOffset": 23765, "endOffset": 23801, "count": 0 },
            { "startOffset": 23992, "endOffset": 24262, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "readdir",
          "ranges": [
            { "startOffset": 37503, "endOffset": 38281, "count": 4 },
            { "startOffset": 37603, "endOffset": 37612, "count": 0 },
            { "startOffset": 37725, "endOffset": 37791, "count": 0 },
            { "startOffset": 37818, "endOffset": 37892, "count": 0 },
            { "startOffset": 37959, "endOffset": 37995, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "req.oncomplete",
          "ranges": [
            { "startOffset": 38024, "endOffset": 38154, "count": 4 },
            { "startOffset": 38058, "endOffset": 38106, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "lstat",
          "ranges": [
            { "startOffset": 39879, "endOffset": 40528, "count": 2 },
            { "startOffset": 40140, "endOffset": 40175, "count": 0 },
            { "startOffset": 40177, "endOffset": 40374, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "unlink",
          "ranges": [{ "startOffset": 49656, "endOffset": 49883, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "splitRoot",
          "ranges": [
            { "startOffset": 69496, "endOffset": 69706, "count": 124 },
            { "startOffset": 69563, "endOffset": 69686, "count": 248 },
            { "startOffset": 69641, "endOffset": 69680, "count": 124 },
            { "startOffset": 69686, "endOffset": 69705, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "encodeRealpathResult",
          "ranges": [
            { "startOffset": 69711, "endOffset": 69998, "count": 123 },
            { "startOffset": 69796, "endOffset": 69826, "count": 0 },
            { "startOffset": 69846, "endOffset": 69997, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "nextPart",
          "ranges": [
            { "startOffset": 70404, "endOffset": 70479, "count": 1140 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "realpathSync",
          "ranges": [
            { "startOffset": 70653, "endOffset": 74472, "count": 165 },
            { "startOffset": 70777, "endOffset": 70795, "count": 0 },
            { "startOffset": 70956, "endOffset": 70991, "count": 42 },
            { "startOffset": 70991, "endOffset": 71553, "count": 123 },
            { "startOffset": 71553, "endOffset": 71743, "count": 0 },
            { "startOffset": 71743, "endOffset": 71880, "count": 123 },
            { "startOffset": 71880, "endOffset": 74399, "count": 1140 },
            { "startOffset": 71992, "endOffset": 72123, "count": 124 },
            { "startOffset": 72123, "endOffset": 72281, "count": 1016 },
            { "startOffset": 72368, "endOffset": 72396, "count": 1138 },
            { "startOffset": 72398, "endOffset": 72535, "count": 924 },
            { "startOffset": 72489, "endOffset": 72513, "count": 0 },
            { "startOffset": 72535, "endOffset": 72601, "count": 216 },
            { "startOffset": 72638, "endOffset": 72687, "count": 0 },
            { "startOffset": 72687, "endOffset": 73876, "count": 216 },
            { "startOffset": 72983, "endOffset": 73008, "count": 0 },
            { "startOffset": 73049, "endOffset": 73137, "count": 215 },
            { "startOffset": 73137, "endOffset": 73558, "count": 1 },
            { "startOffset": 73497, "endOffset": 73550, "count": 0 },
            { "startOffset": 73558, "endOffset": 73796, "count": 1 },
            { "startOffset": 73840, "endOffset": 73870, "count": 1 },
            { "startOffset": 73876, "endOffset": 74168, "count": 1 },
            { "startOffset": 74168, "endOffset": 74191, "count": 0 },
            { "startOffset": 74193, "endOffset": 74395, "count": 0 },
            { "startOffset": 74399, "endOffset": 74413, "count": 123 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "lazyLoadStreams",
          "ranges": [
            { "startOffset": 82731, "endOffset": 82922, "count": 4 },
            { "startOffset": 82779, "endOffset": 82920, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get ReadStream",
          "ranges": [{ "startOffset": 85261, "endOffset": 85329, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get WriteStream",
          "ranges": [{ "startOffset": 85386, "endOffset": 85456, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 86562, "endOffset": 86658, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "47",
      "url": "node:internal/encoding",
      "functions": [
        {
          "functionName": "validateDecoder",
          "ranges": [
            { "startOffset": 1482, "endOffset": 1607, "count": 5 },
            { "startOffset": 1563, "endOffset": 1605, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getEncodingFromLabel",
          "ranges": [
            { "startOffset": 9404, "endOffset": 9583, "count": 1 },
            { "startOffset": 9515, "endOffset": 9582, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "TextDecoder",
          "ranges": [
            { "startOffset": 11141, "endOffset": 12104, "count": 1 },
            { "startOffset": 11397, "endOffset": 11444, "count": 0 },
            { "startOffset": 11528, "endOffset": 11551, "count": 0 },
            { "startOffset": 11592, "endOffset": 11620, "count": 0 },
            { "startOffset": 12028, "endOffset": 12053, "count": 0 },
            { "startOffset": 12055, "endOffset": 12098, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "decode",
          "ranges": [
            { "startOffset": 12381, "endOffset": 13076, "count": 5 },
            { "startOffset": 12550, "endOffset": 12558, "count": 0 },
            { "startOffset": 12668, "endOffset": 13075, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "52",
      "url": "node:internal/process/permission",
      "functions": [
        {
          "functionName": "isEnabled",
          "ranges": [
            { "startOffset": 332, "endOffset": 576, "count": 573 },
            { "startOffset": 392, "endOffset": 537, "count": 1 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "55",
      "url": "node:internal/console/constructor",
      "functions": [
        {
          "functionName": "value",
          "ranges": [{ "startOffset": 5763, "endOffset": 6408, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 5972, "endOffset": 6067, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 6079, "endOffset": 6109, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 6239, "endOffset": 6338, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 6350, "endOffset": 6380, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "initializeGlobalConsole",
          "ranges": [
            { "startOffset": 20356, "endOffset": 21346, "count": 1 },
            { "startOffset": 20675, "endOffset": 21345, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 21241, "endOffset": 21342, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "57",
      "url": "node:internal/event_target",
      "functions": [
        {
          "functionName": "initEventTarget",
          "ranges": [{ "startOffset": 13457, "endOffset": 13676, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "defineEventHandler",
          "ranges": [{ "startOffset": 29893, "endOffset": 31359, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 30053, "endOffset": 30189, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 30288, "endOffset": 31126, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "EventEmitterMixin",
          "ranges": [
            { "startOffset": 31387, "endOffset": 32077, "count": 1 },
            { "startOffset": 31818, "endOffset": 31980, "count": 18 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "MixedEventEmitter",
          "ranges": [{ "startOffset": 31456, "endOffset": 31597, "count": 12 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "61",
      "url": "node:internal/bootstrap/switches/is_main_thread",
      "functions": [
        {
          "functionName": "createWritableStdioStream",
          "ranges": [
            { "startOffset": 1424, "endOffset": 3026, "count": 2 },
            { "startOffset": 1576, "endOffset": 1710, "count": 0 },
            { "startOffset": 1716, "endOffset": 1910, "count": 0 },
            { "startOffset": 2217, "endOffset": 2245, "count": 0 },
            { "startOffset": 2247, "endOffset": 2468, "count": 0 },
            { "startOffset": 2651, "endOffset": 2905, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "write",
          "ranges": [{ "startOffset": 2841, "endOffset": 2888, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "addCleanup",
          "ranges": [
            { "startOffset": 3639, "endOffset": 3730, "count": 3 },
            { "startOffset": 3693, "endOffset": 3728, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getStdout",
          "ranges": [
            { "startOffset": 3732, "endOffset": 4424, "count": 4 },
            { "startOffset": 3769, "endOffset": 3783, "count": 3 },
            { "startOffset": 3783, "endOffset": 4017, "count": 1 },
            { "startOffset": 4017, "endOffset": 4075, "count": 0 },
            { "startOffset": 4075, "endOffset": 4423, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "cleanupStdout",
          "ranges": [{ "startOffset": 4090, "endOffset": 4268, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getStderr",
          "ranges": [
            { "startOffset": 4426, "endOffset": 5117, "count": 5 },
            { "startOffset": 4463, "endOffset": 4477, "count": 4 },
            { "startOffset": 4477, "endOffset": 4711, "count": 1 },
            { "startOffset": 4711, "endOffset": 4769, "count": 0 },
            { "startOffset": 4769, "endOffset": 5116, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "cleanupStderr",
          "ranges": [{ "startOffset": 4783, "endOffset": 4961, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getStdin",
          "ranges": [
            { "startOffset": 5119, "endOffset": 7610, "count": 1 },
            { "startOffset": 5154, "endOffset": 5167, "count": 0 },
            { "startOffset": 5222, "endOffset": 5326, "count": 0 },
            { "startOffset": 5332, "endOffset": 5466, "count": 0 },
            { "startOffset": 5800, "endOffset": 5828, "count": 0 },
            { "startOffset": 5830, "endOffset": 6001, "count": 0 },
            { "startOffset": 6277, "endOffset": 6501, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "read",
          "ranges": [{ "startOffset": 6458, "endOffset": 6467, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 7080, "endOffset": 7122, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onpause",
          "ranges": [{ "startOffset": 7128, "endOffset": 7368, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "cleanupStdin",
          "ranges": [{ "startOffset": 7383, "endOffset": 7456, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "62",
      "url": "node:internal/v8/startup_snapshot",
      "functions": [
        {
          "functionName": "isBuildingSnapshot",
          "ranges": [{ "startOffset": 433, "endOffset": 504, "count": 7 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "runDeserializeCallbacks",
          "ranges": [
            { "startOffset": 831, "endOffset": 1004, "count": 1 },
            { "startOffset": 910, "endOffset": 1002, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "63",
      "url": "node:internal/process/signal",
      "functions": [
        {
          "functionName": "isSignal",
          "ranges": [{ "startOffset": 238, "endOffset": 334, "count": 13 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "startListeningIfSignal",
          "ranges": [{ "startOffset": 398, "endOffset": 908, "count": 13 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "stopListeningIfSignal",
          "ranges": [
            { "startOffset": 910, "endOffset": 1105, "count": 12 },
            { "startOffset": 1012, "endOffset": 1048, "count": 2 },
            { "startOffset": 1050, "endOffset": 1103, "count": 2 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "65",
      "url": "node:internal/modules/cjs/loader",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 4692, "endOffset": 4783, "count": 1 },
            { "startOffset": 4739, "endOffset": 4775, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4832, "endOffset": 4875, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "stat",
          "ranges": [
            { "startOffset": 6287, "endOffset": 6701, "count": 622 },
            { "startOffset": 6385, "endOffset": 6483, "count": 278 },
            { "startOffset": 6461, "endOffset": 6479, "count": 70 },
            { "startOffset": 6483, "endOffset": 6556, "count": 552 },
            { "startOffset": 6556, "endOffset": 6570, "count": 208 },
            { "startOffset": 6572, "endOffset": 6682, "count": 92 },
            { "startOffset": 6682, "endOffset": 6700, "count": 552 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "updateChildren",
          "ranges": [
            { "startOffset": 7192, "endOffset": 7394, "count": 197 },
            { "startOffset": 7264, "endOffset": 7274, "count": 196 },
            { "startOffset": 7291, "endOffset": 7344, "count": 196 },
            { "startOffset": 7301, "endOffset": 7343, "count": 80 },
            { "startOffset": 7346, "endOffset": 7392, "count": 190 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "reportModuleToWatchMode",
          "ranges": [
            { "startOffset": 7511, "endOffset": 7667, "count": 383 },
            { "startOffset": 7592, "endOffset": 7607, "count": 0 },
            { "startOffset": 7609, "endOffset": 7665, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Module",
          "ranges": [
            { "startOffset": 8181, "endOffset": 8931, "count": 117 },
            { "startOffset": 8487, "endOffset": 8497, "count": 0 },
            { "startOffset": 8515, "endOffset": 8879, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 10914, "endOffset": 10939, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "initializeCJS",
          "ranges": [{ "startOffset": 11659, "endOffset": 12270, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "tryPackage",
          "ranges": [
            { "startOffset": 13154, "endOffset": 14433, "count": 35 },
            { "startOffset": 13276, "endOffset": 13357, "count": 1 },
            { "startOffset": 13357, "endOffset": 13451, "count": 34 },
            { "startOffset": 13451, "endOffset": 13495, "count": 0 },
            { "startOffset": 13496, "endOffset": 13563, "count": 0 },
            { "startOffset": 13589, "endOffset": 14414, "count": 0 },
            { "startOffset": 14414, "endOffset": 14432, "count": 34 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "tryFile",
          "ranges": [
            { "startOffset": 14794, "endOffset": 15057, "count": 195 },
            { "startOffset": 14883, "endOffset": 14894, "count": 105 },
            { "startOffset": 14894, "endOffset": 14923, "count": 90 },
            { "startOffset": 14923, "endOffset": 14951, "count": 0 },
            { "startOffset": 14952, "endOffset": 14975, "count": 90 },
            { "startOffset": 14978, "endOffset": 15021, "count": 0 },
            { "startOffset": 15021, "endOffset": 15056, "count": 90 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "tryExtensions",
          "ranges": [
            { "startOffset": 15322, "endOffset": 15542, "count": 72 },
            { "startOffset": 15411, "endOffset": 15524, "count": 142 },
            { "startOffset": 15490, "endOffset": 15520, "count": 37 },
            { "startOffset": 15524, "endOffset": 15541, "count": 35 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "findLongestRegisteredExtension",
          "ranges": [
            { "startOffset": 15726, "endOffset": 16202, "count": 117 },
            { "startOffset": 16001, "endOffset": 16014, "count": 0 },
            { "startOffset": 16184, "endOffset": 16201, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "trySelfParentPath",
          "ranges": [
            { "startOffset": 16325, "endOffset": 16618, "count": 168 },
            { "startOffset": 16377, "endOffset": 16394, "count": 1 },
            { "startOffset": 16394, "endOffset": 16452, "count": 167 },
            { "startOffset": 16452, "endOffset": 16616, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "trySelf",
          "ranges": [
            { "startOffset": 16826, "endOffset": 17754, "count": 168 },
            { "startOffset": 16885, "endOffset": 16902, "count": 1 },
            { "startOffset": 16902, "endOffset": 17024, "count": 167 },
            { "startOffset": 17025, "endOffset": 17050, "count": 56 },
            { "startOffset": 17052, "endOffset": 17075, "count": 111 },
            { "startOffset": 17075, "endOffset": 17122, "count": 56 },
            { "startOffset": 17122, "endOffset": 17148, "count": 0 },
            { "startOffset": 17148, "endOffset": 17314, "count": 56 },
            { "startOffset": 17210, "endOffset": 17285, "count": 0 },
            { "startOffset": 17314, "endOffset": 17752, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "resolveExports",
          "ranges": [
            { "startOffset": 18102, "endOffset": 18920, "count": 155 },
            { "startOffset": 18309, "endOffset": 18324, "count": 93 },
            { "startOffset": 18339, "endOffset": 18350, "count": 93 },
            { "startOffset": 18350, "endOffset": 18473, "count": 62 },
            { "startOffset": 18475, "endOffset": 18918, "count": 19 },
            { "startOffset": 18755, "endOffset": 18914, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getDefaultExtensions",
          "ranges": [
            { "startOffset": 18982, "endOffset": 19477, "count": 71 },
            { "startOffset": 19125, "endOffset": 19153, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 19401, "endOffset": 19473, "count": 284 },
            { "startOffset": 19425, "endOffset": 19473, "count": 71 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Module._findPath",
          "ranges": [
            { "startOffset": 19770, "endOffset": 23329, "count": 169 },
            { "startOffset": 19880, "endOffset": 19903, "count": 4 },
            { "startOffset": 19903, "endOffset": 19966, "count": 165 },
            { "startOffset": 19943, "endOffset": 19966, "count": 0 },
            { "startOffset": 20099, "endOffset": 20122, "count": 11 },
            { "startOffset": 20122, "endOffset": 20705, "count": 158 },
            { "startOffset": 20344, "endOffset": 20698, "count": 0 },
            { "startOffset": 20760, "endOffset": 20914, "count": 93 },
            { "startOffset": 20877, "endOffset": 20910, "count": 19 },
            { "startOffset": 20914, "endOffset": 20976, "count": 158 },
            { "startOffset": 20976, "endOffset": 23310, "count": 310 },
            { "startOffset": 21117, "endOffset": 21127, "count": 291 },
            { "startOffset": 21128, "endOffset": 21224, "count": 288 },
            { "startOffset": 21162, "endOffset": 21200, "count": 0 },
            { "startOffset": 21231, "endOffset": 21254, "count": 152 },
            { "startOffset": 21254, "endOffset": 21282, "count": 158 },
            { "startOffset": 21282, "endOffset": 21422, "count": 155 },
            { "startOffset": 21375, "endOffset": 21416, "count": 19 },
            { "startOffset": 21422, "endOffset": 22785, "count": 139 },
            { "startOffset": 21574, "endOffset": 22558, "count": 68 },
            { "startOffset": 21607, "endOffset": 21796, "count": 67 },
            { "startOffset": 21662, "endOffset": 21722, "count": 0 },
            { "startOffset": 21796, "endOffset": 22550, "count": 1 },
            { "startOffset": 21850, "endOffset": 22490, "count": 0 },
            { "startOffset": 22581, "endOffset": 22779, "count": 71 },
            { "startOffset": 22785, "endOffset": 22805, "count": 139 },
            { "startOffset": 22805, "endOffset": 22816, "count": 35 },
            { "startOffset": 22818, "endOffset": 23036, "count": 35 },
            { "startOffset": 22920, "endOffset": 22968, "count": 0 },
            { "startOffset": 23036, "endOffset": 23132, "count": 139 },
            { "startOffset": 23132, "endOffset": 23310, "count": 0 },
            { "startOffset": 23310, "endOffset": 23328, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Module._nodeModulePaths",
          "ranges": [
            { "startOffset": 25406, "endOffset": 26594, "count": 117 },
            { "startOffset": 25678, "endOffset": 25717, "count": 0 },
            { "startOffset": 26038, "endOffset": 26472, "count": 6916 },
            { "startOffset": 26134, "endOffset": 26342, "count": 962 },
            { "startOffset": 26161, "endOffset": 26301, "count": 747 },
            { "startOffset": 26342, "endOffset": 26466, "count": 5954 },
            { "startOffset": 26362, "endOffset": 26466, "count": 3391 },
            { "startOffset": 26397, "endOffset": 26423, "count": 2644 },
            { "startOffset": 26423, "endOffset": 26458, "count": 747 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Module._resolveLookupPaths",
          "ranges": [
            { "startOffset": 26729, "endOffset": 28016, "count": 168 },
            { "startOffset": 26809, "endOffset": 26875, "count": 0 },
            { "startOffset": 26960, "endOffset": 27159, "count": 98 },
            { "startOffset": 27040, "endOffset": 27090, "count": 75 },
            { "startOffset": 27091, "endOffset": 27158, "count": 0 },
            { "startOffset": 27161, "endOffset": 27488, "count": 70 },
            { "startOffset": 27221, "endOffset": 27236, "count": 69 },
            { "startOffset": 27238, "endOffset": 27348, "count": 69 },
            { "startOffset": 27348, "endOffset": 27388, "count": 1 },
            { "startOffset": 27477, "endOffset": 27483, "count": 0 },
            { "startOffset": 27488, "endOffset": 27556, "count": 98 },
            { "startOffset": 27557, "endOffset": 27576, "count": 98 },
            { "startOffset": 27578, "endOffset": 27827, "count": 0 },
            { "startOffset": 27827, "endOffset": 28015, "count": 98 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getExportsForCircularRequire",
          "ranges": [
            { "startOffset": 29472, "endOffset": 30472, "count": 1 },
            { "startOffset": 29591, "endOffset": 29632, "count": 0 },
            { "startOffset": 29634, "endOffset": 29874, "count": 0 },
            { "startOffset": 29997, "endOffset": 30290, "count": 0 },
            { "startOffset": 30292, "endOffset": 30444, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Module._load",
          "ranges": [
            { "startOffset": 31138, "endOffset": 35016, "count": 267 },
            { "startOffset": 31221, "endOffset": 32049, "count": 266 },
            { "startOffset": 31680, "endOffset": 32045, "count": 30 },
            { "startOffset": 31860, "endOffset": 31932, "count": 0 },
            { "startOffset": 31977, "endOffset": 32045, "count": 0 },
            { "startOffset": 32049, "endOffset": 32102, "count": 237 },
            { "startOffset": 32102, "endOffset": 32374, "count": 41 },
            { "startOffset": 32231, "endOffset": 32291, "count": 0 },
            { "startOffset": 32374, "endOffset": 32527, "count": 196 },
            { "startOffset": 32527, "endOffset": 33453, "count": 50 },
            { "startOffset": 32606, "endOffset": 32648, "count": 49 },
            { "startOffset": 32648, "endOffset": 32925, "count": 1 },
            { "startOffset": 32925, "endOffset": 33453, "count": 0 },
            { "startOffset": 33453, "endOffset": 33513, "count": 146 },
            { "startOffset": 33513, "endOffset": 33596, "count": 29 },
            { "startOffset": 33596, "endOffset": 33726, "count": 117 },
            { "startOffset": 33750, "endOffset": 34127, "count": 117 },
            { "startOffset": 33768, "endOffset": 33953, "count": 1 },
            { "startOffset": 33953, "endOffset": 34003, "count": 116 },
            { "startOffset": 34127, "endOffset": 34988, "count": 117 },
            { "startOffset": 34331, "endOffset": 34734, "count": 0 },
            { "startOffset": 34916, "endOffset": 34984, "count": 0 },
            { "startOffset": 34988, "endOffset": 35015, "count": 117 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Module._resolveFilename",
          "ranges": [
            { "startOffset": 35478, "endOffset": 38364, "count": 197 },
            { "startOffset": 35575, "endOffset": 35600, "count": 29 },
            { "startOffset": 35600, "endOffset": 35650, "count": 168 },
            { "startOffset": 35650, "endOffset": 35669, "count": 0 },
            { "startOffset": 35671, "endOffset": 36522, "count": 0 },
            { "startOffset": 36522, "endOffset": 36617, "count": 168 },
            { "startOffset": 36617, "endOffset": 36665, "count": 0 },
            { "startOffset": 36667, "endOffset": 37309, "count": 0 },
            { "startOffset": 37309, "endOffset": 37470, "count": 168 },
            { "startOffset": 37470, "endOffset": 37666, "count": 0 },
            { "startOffset": 37666, "endOffset": 37826, "count": 168 },
            { "startOffset": 37826, "endOffset": 38363, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "finalizeEsmResolution",
          "ranges": [
            { "startOffset": 38791, "endOffset": 39372, "count": 19 },
            { "startOffset": 38989, "endOffset": 39118, "count": 0 },
            { "startOffset": 39237, "endOffset": 39371, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Module.load",
          "ranges": [
            { "startOffset": 40021, "endOffset": 40688, "count": 117 },
            { "startOffset": 40356, "endOffset": 40386, "count": 0 },
            { "startOffset": 40388, "endOffset": 40440, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Module.require",
          "ranges": [
            { "startOffset": 40975, "endOffset": 41274, "count": 266 },
            { "startOffset": 41035, "endOffset": 41153, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "wrapSafe",
          "ranges": [
            { "startOffset": 46694, "endOffset": 48701, "count": 115 },
            { "startOffset": 46987, "endOffset": 47859, "count": 0 },
            { "startOffset": 47924, "endOffset": 48382, "count": 94 },
            { "startOffset": 47970, "endOffset": 48132, "count": 1 },
            { "startOffset": 48132, "endOffset": 48378, "count": 93 },
            { "startOffset": 48574, "endOffset": 48681, "count": 21 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Module._compile",
          "ranges": [
            { "startOffset": 49102, "endOffset": 50633, "count": 115 },
            { "startOffset": 49201, "endOffset": 49211, "count": 0 },
            { "startOffset": 49229, "endOffset": 49382, "count": 0 },
            { "startOffset": 49567, "endOffset": 49599, "count": 0 },
            { "startOffset": 49632, "endOffset": 49805, "count": 0 },
            { "startOffset": 50029, "endOffset": 50059, "count": 1 },
            { "startOffset": 50150, "endOffset": 50184, "count": 1 },
            { "startOffset": 50186, "endOffset": 50397, "count": 0 },
            { "startOffset": 50593, "endOffset": 50614, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getMaybeCachedSource",
          "ranges": [
            { "startOffset": 50887, "endOffset": 51292, "count": 115 },
            { "startOffset": 51050, "endOffset": 51125, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Module._extensions..js",
          "ranges": [
            { "startOffset": 51471, "endOffset": 53565, "count": 115 },
            { "startOffset": 51745, "endOffset": 51767, "count": 0 },
            { "startOffset": 51863, "endOffset": 53354, "count": 0 },
            { "startOffset": 53395, "endOffset": 53429, "count": 21 },
            { "startOffset": 53433, "endOffset": 53516, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Module._extensions..json",
          "ranges": [
            { "startOffset": 53747, "endOffset": 54153, "count": 2 },
            { "startOffset": 53857, "endOffset": 53867, "count": 0 },
            { "startOffset": 53885, "endOffset": 53987, "count": 0 },
            { "startOffset": 54070, "endOffset": 54151, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "isRelative",
          "ranges": [
            { "startOffset": 56411, "endOffset": 56752, "count": 158 },
            { "startOffset": 56494, "endOffset": 56511, "count": 65 },
            { "startOffset": 56511, "endOffset": 56556, "count": 93 },
            { "startOffset": 56557, "endOffset": 56599, "count": 93 },
            { "startOffset": 56600, "endOffset": 56643, "count": 19 },
            { "startOffset": 56644, "endOffset": 56749, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Module._initPaths",
          "ranges": [
            { "startOffset": 56872, "endOffset": 57837, "count": 1 },
            { "startOffset": 56913, "endOffset": 56938, "count": 0 },
            { "startOffset": 56990, "endOffset": 57013, "count": 0 },
            { "startOffset": 57221, "endOffset": 57263, "count": 0 },
            { "startOffset": 57562, "endOffset": 57704, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "66",
      "url": "node:internal/modules/package_json_reader",
      "functions": [
        {
          "functionName": "read",
          "ranges": [
            { "startOffset": 1112, "endOffset": 3862, "count": 692 },
            { "startOffset": 1208, "endOffset": 1245, "count": 622 },
            { "startOffset": 1245, "endOffset": 1922, "count": 70 },
            { "startOffset": 1922, "endOffset": 1931, "count": 0 },
            { "startOffset": 1932, "endOffset": 1946, "count": 0 },
            { "startOffset": 1947, "endOffset": 1969, "count": 70 },
            { "startOffset": 1993, "endOffset": 3812, "count": 40 },
            { "startOffset": 2061, "endOffset": 2657, "count": 0 },
            { "startOffset": 2815, "endOffset": 2849, "count": 33 },
            { "startOffset": 2851, "endOffset": 2891, "count": 33 },
            { "startOffset": 2947, "endOffset": 2981, "count": 32 },
            { "startOffset": 2983, "endOffset": 3023, "count": 32 },
            { "startOffset": 3083, "endOffset": 3129, "count": 11 },
            { "startOffset": 3189, "endOffset": 3235, "count": 1 },
            { "startOffset": 3346, "endOffset": 3405, "count": 14 },
            { "startOffset": 3377, "endOffset": 3404, "count": 7 },
            { "startOffset": 3407, "endOffset": 3447, "count": 14 },
            { "startOffset": 3481, "endOffset": 3677, "count": 1 },
            { "startOffset": 3602, "endOffset": 3655, "count": 0 },
            { "startOffset": 3705, "endOffset": 3808, "count": 0 },
            { "startOffset": 3812, "endOffset": 3861, "count": 70 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "readPackage",
          "ranges": [{ "startOffset": 3930, "endOffset": 4020, "count": 663 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "readPackageScope",
          "ranges": [
            { "startOffset": 4237, "endOffset": 5057, "count": 283 },
            { "startOffset": 4424, "endOffset": 4994, "count": 566 },
            { "startOffset": 4673, "endOffset": 4719, "count": 0 },
            { "startOffset": 4721, "endOffset": 4748, "count": 0 },
            { "startOffset": 4815, "endOffset": 4842, "count": 0 },
            { "startOffset": 4913, "endOffset": 4990, "count": 283 },
            { "startOffset": 4994, "endOffset": 5056, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "67",
      "url": "node:internal/modules/esm/utils",
      "functions": [
        {
          "functionName": "getDefaultConditions",
          "ranges": [{ "startOffset": 1284, "endOffset": 1390, "count": 7 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getDefaultConditionsSet",
          "ranges": [{ "startOffset": 1520, "endOffset": 1635, "count": 6 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "initializeDefaultConditions",
          "ranges": [
            { "startOffset": 1785, "endOffset": 2290, "count": 1 },
            { "startOffset": 1968, "endOffset": 1972, "count": 0 },
            { "startOffset": 2085, "endOffset": 2089, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getConditionsSet",
          "ranges": [
            { "startOffset": 2360, "endOffset": 2719, "count": 6 },
            { "startOffset": 2473, "endOffset": 2681, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "defaultImportModuleDynamicallyForScript",
          "ranges": [{ "startOffset": 7976, "endOffset": 8284, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "importModuleDynamicallyCallback",
          "ranges": [
            { "startOffset": 8917, "endOffset": 10394, "count": 2 },
            { "startOffset": 9212, "endOffset": 9373, "count": 0 },
            { "startOffset": 9692, "endOffset": 10393, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "initializeESM",
          "ranges": [{ "startOffset": 10706, "endOffset": 11092, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "forceDefaultLoader",
          "ranges": [{ "startOffset": 11220, "endOffset": 11283, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "compileSourceTextModule",
          "ranges": [
            { "startOffset": 12924, "endOffset": 13385, "count": 5 },
            { "startOffset": 13064, "endOffset": 13075, "count": 0 },
            { "startOffset": 13181, "endOffset": 13203, "count": 0 },
            { "startOffset": 13282, "endOffset": 13368, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "68",
      "url": "node:internal/process/pre_execution",
      "functions": [
        {
          "functionName": "prepareMainThreadExecution",
          "ranges": [{ "startOffset": 1060, "endOffset": 1244, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "prepareExecution",
          "ranges": [
            { "startOffset": 2474, "endOffset": 4718, "count": 1 },
            { "startOffset": 3485, "endOffset": 3589, "count": 0 },
            { "startOffset": 4477, "endOffset": 4639, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "setupSymbolDisposePolyfill",
          "ranges": [{ "startOffset": 4720, "endOffset": 5455, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "setupUserModules",
          "ranges": [
            { "startOffset": 5457, "endOffset": 6205, "count": 1 },
            { "startOffset": 5827, "endOffset": 5858, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "refreshRuntimeOptions",
          "ranges": [{ "startOffset": 6207, "endOffset": 6263, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "patchProcessObject",
          "ranges": [
            { "startOffset": 6690, "endOffset": 9027, "count": 1 },
            { "startOffset": 7675, "endOffset": 7727, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "addReadOnlyProcessAlias",
          "ranges": [
            { "startOffset": 9029, "endOffset": 9310, "count": 13 },
            { "startOffset": 9150, "endOffset": 9308, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "setupWarningHandler",
          "ranges": [
            { "startOffset": 9312, "endOffset": 9832, "count": 1 },
            { "startOffset": 9687, "endOffset": 9826, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 9716, "endOffset": 9818, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setupUndici",
          "ranges": [
            { "startOffset": 9907, "endOffset": 10326, "count": 1 },
            { "startOffset": 9981, "endOffset": 10141, "count": 0 },
            { "startOffset": 10235, "endOffset": 10324, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "setupEventsource",
          "ranges": [{ "startOffset": 10394, "endOffset": 10519, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "setupWebCrypto",
          "ranges": [
            { "startOffset": 10623, "endOffset": 11575, "count": 1 },
            { "startOffset": 10758, "endOffset": 10775, "count": 0 },
            { "startOffset": 11264, "endOffset": 11573, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "cryptoThisCheck",
          "ranges": [{ "startOffset": 10949, "endOffset": 11125, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get crypto",
          "ranges": [{ "startOffset": 11426, "endOffset": 11525, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setupCodeCoverage",
          "ranges": [{ "startOffset": 11577, "endOffset": 12098, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "setupCustomEvent",
          "ranges": [
            { "startOffset": 12204, "endOffset": 12481, "count": 1 },
            { "startOffset": 12343, "endOffset": 12360, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "setupStacktracePrinterOnSigint",
          "ranges": [
            { "startOffset": 12483, "endOffset": 12708, "count": 1 },
            { "startOffset": 12585, "endOffset": 12707, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "initializeReport",
          "ranges": [{ "startOffset": 12710, "endOffset": 12959, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 12855, "endOffset": 12950, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "setupDebugEnv",
          "ranges": [
            { "startOffset": 12961, "endOffset": 13192, "count": 1 },
            { "startOffset": 13112, "endOffset": 13190, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "initializeReportSignalHandlers",
          "ranges": [
            { "startOffset": 13254, "endOffset": 13442, "count": 1 },
            { "startOffset": 13342, "endOffset": 13440, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "initializeHeapSnapshotSignalHandlers",
          "ranges": [
            { "startOffset": 13444, "endOffset": 14178, "count": 1 },
            { "startOffset": 13639, "endOffset": 14176, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "doWriteHeapSnapshot",
          "ranges": [{ "startOffset": 13752, "endOffset": 13906, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 14098, "endOffset": 14170, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setupTraceCategoryState",
          "ranges": [{ "startOffset": 14180, "endOffset": 14439, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "setupInspectorHooks",
          "ranges": [{ "startOffset": 14441, "endOffset": 15023, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "setupNetworkInspection",
          "ranges": [
            { "startOffset": 15025, "endOffset": 15338, "count": 1 },
            { "startOffset": 15162, "endOffset": 15336, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "initializeDeprecations",
          "ranges": [
            { "startOffset": 15533, "endOffset": 17485, "count": 1 },
            { "startOffset": 16245, "endOffset": 16547, "count": 16 },
            { "startOffset": 16290, "endOffset": 16522, "count": 0 },
            { "startOffset": 16864, "endOffset": 17061, "count": 0 },
            { "startOffset": 17089, "endOffset": 17483, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "setupChildProcessIpcChannel",
          "ranges": [
            { "startOffset": 17487, "endOffset": 18052, "count": 1 },
            { "startOffset": 17563, "endOffset": 18050, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "initializeClusterIPC",
          "ranges": [
            { "startOffset": 18054, "endOffset": 18324, "count": 1 },
            { "startOffset": 18141, "endOffset": 18322, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "initializePermission",
          "ranges": [
            { "startOffset": 18326, "endOffset": 20323, "count": 1 },
            { "startOffset": 18468, "endOffset": 19897, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "binding",
          "ranges": [{ "startOffset": 18492, "endOffset": 18579, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 20155, "endOffset": 20315, "count": 6 },
            { "startOffset": 20233, "endOffset": 20309, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "readPolicyFromDisk",
          "ranges": [
            { "startOffset": 20325, "endOffset": 22144, "count": 1 },
            { "startOffset": 20453, "endOffset": 22142, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "initializeCJSLoader",
          "ranges": [{ "startOffset": 22146, "endOffset": 22267, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "initializeESMLoader",
          "ranges": [
            { "startOffset": 22269, "endOffset": 22852, "count": 1 },
            { "startOffset": 22605, "endOffset": 22850, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "initializeSourceMapsHandlers",
          "ranges": [{ "startOffset": 22854, "endOffset": 23052, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "initializeFrozenIntrinsics",
          "ranges": [
            { "startOffset": 23054, "endOffset": 23241, "count": 1 },
            { "startOffset": 23139, "endOffset": 23239, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "loadPreloadModules",
          "ranges": [
            { "startOffset": 23348, "endOffset": 23696, "count": 1 },
            { "startOffset": 23542, "endOffset": 23694, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "markBootstrapComplete",
          "ranges": [{ "startOffset": 23698, "endOffset": 23792, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "70",
      "url": "node:internal/modules/run_main",
      "functions": [
        {
          "functionName": "resolveMainPath",
          "ranges": [
            { "startOffset": 569, "endOffset": 1672, "count": 1 },
            { "startOffset": 743, "endOffset": 847, "count": 0 },
            { "startOffset": 1140, "endOffset": 1151, "count": 0 },
            { "startOffset": 1378, "endOffset": 1646, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "shouldUseESMLoader",
          "ranges": [
            { "startOffset": 1833, "endOffset": 3041, "count": 1 },
            { "startOffset": 1939, "endOffset": 1955, "count": 0 },
            { "startOffset": 2429, "endOffset": 2445, "count": 0 },
            { "startOffset": 2561, "endOffset": 2577, "count": 0 },
            { "startOffset": 2640, "endOffset": 2657, "count": 0 },
            { "startOffset": 2881, "endOffset": 2914, "count": 0 },
            { "startOffset": 2919, "endOffset": 2955, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "executeUserEntryPoint",
          "ranges": [
            { "startOffset": 5520, "endOffset": 6505, "count": 1 },
            { "startOffset": 6089, "endOffset": 6503, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 6257, "endOffset": 6497, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "71",
      "url": "node:internal/dns/utils",
      "functions": [
        {
          "functionName": "initializeDns",
          "ranges": [
            { "startOffset": 5468, "endOffset": 5949, "count": 1 },
            { "startOffset": 5611, "endOffset": 5816, "count": 0 },
            { "startOffset": 5864, "endOffset": 5948, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 5889, "endOffset": 5945, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "73",
      "url": "node:internal/bootstrap/switches/does_own_process_state",
      "functions": [
        {
          "functionName": "wrappedCwd",
          "ranges": [
            { "startOffset": 3781, "endOffset": 3884, "count": 2 },
            { "startOffset": 3833, "endOffset": 3862, "count": 1 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "80",
      "url": "node:internal/main/run_main_module",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1182, "count": 1 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "81",
      "url": "file:///usr/local/lib/node_modules/npm/bin/npm-cli.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 54, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "82",
      "url": "file:///usr/local/lib/node_modules/npm/lib/cli.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 215, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "module.exports",
          "ranges": [{ "startOffset": 152, "endOffset": 214, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 190, "endOffset": 213, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "83",
      "url": "file:///usr/local/lib/node_modules/npm/lib/cli/validate-engines.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2012, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "module.exports",
          "ranges": [{ "startOffset": 549, "endOffset": 2011, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "syntaxErrorHandler",
          "ranges": [{ "startOffset": 1322, "endOffset": 1588, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "off",
          "ranges": [{ "startOffset": 1871, "endOffset": 2003, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "84",
      "url": "file:///usr/local/lib/node_modules/npm/lib/cli/entry.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 3199, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "module.exports",
          "ranges": [
            { "startOffset": 88, "endOffset": 3198, "count": 1 },
            { "startOffset": 399, "endOffset": 447, "count": 0 },
            { "startOffset": 1814, "endOffset": 1875, "count": 0 },
            { "startOffset": 2051, "endOffset": 2090, "count": 0 },
            { "startOffset": 2110, "endOffset": 2209, "count": 0 },
            { "startOffset": 2452, "endOffset": 2641, "count": 0 },
            { "startOffset": 3146, "endOffset": 3196, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2367, "endOffset": 2422, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3048, "endOffset": 3087, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "85",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 12680, "count": 1 },
            { "startOffset": 529, "endOffset": 624, "count": 0 },
            { "startOffset": 859, "endOffset": 1061, "count": 0 },
            { "startOffset": 2292, "endOffset": 2430, "count": 0 },
            { "startOffset": 2590, "endOffset": 2606, "count": 0 },
            { "startOffset": 2608, "endOffset": 2667, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "noop",
          "ranges": [{ "startOffset": 626, "endOffset": 645, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "publishQueue",
          "ranges": [{ "startOffset": 647, "endOffset": 790, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 746, "endOffset": 783, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "debug",
          "ranges": [{ "startOffset": 927, "endOffset": 1061, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1492, "endOffset": 1899, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "close",
          "ranges": [{ "startOffset": 1518, "endOffset": 1797, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1930, "endOffset": 2221, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "closeSync",
          "ranges": [{ "startOffset": 1960, "endOffset": 2107, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2317, "endOffset": 2425, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "patch",
          "ranges": [
            { "startOffset": 2669, "endOffset": 10035, "count": 2 },
            { "startOffset": 6760, "endOffset": 6877, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "readFile",
          "ranges": [{ "startOffset": 2948, "endOffset": 3507, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "writeFile",
          "ranges": [{ "startOffset": 3572, "endOffset": 4166, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "appendFile",
          "ranges": [{ "startOffset": 4258, "endOffset": 4857, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "copyFile",
          "ranges": [{ "startOffset": 4939, "endOffset": 5516, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readdir",
          "ranges": [
            { "startOffset": 5617, "endOffset": 6711, "count": 4 },
            { "startOffset": 5701, "endOffset": 5729, "count": 0 },
            { "startOffset": 5804, "endOffset": 5968, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "go$readdir",
          "ranges": [{ "startOffset": 5806, "endOffset": 5968, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "go$readdir",
          "ranges": [{ "startOffset": 5977, "endOffset": 6148, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "fs$readdirCallback",
          "ranges": [{ "startOffset": 6196, "endOffset": 6707, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 6270, "endOffset": 6701, "count": 4 },
            { "startOffset": 6310, "endOffset": 6361, "count": 0 },
            { "startOffset": 6373, "endOffset": 6529, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 7295, "endOffset": 7338, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 7349, "endOffset": 7394, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 7500, "endOffset": 7544, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 7555, "endOffset": 7601, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 7763, "endOffset": 7810, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 7821, "endOffset": 7870, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 8016, "endOffset": 8064, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 8075, "endOffset": 8125, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ReadStream",
          "ranges": [{ "startOffset": 8180, "endOffset": 8400, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ReadStream$open",
          "ranges": [{ "startOffset": 8404, "endOffset": 8725, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "WriteStream",
          "ranges": [{ "startOffset": 8729, "endOffset": 8954, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "WriteStream$open",
          "ranges": [{ "startOffset": 8958, "endOffset": 9229, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createReadStream",
          "ranges": [{ "startOffset": 9233, "endOffset": 9324, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createWriteStream",
          "ranges": [{ "startOffset": 9328, "endOffset": 9421, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "open",
          "ranges": [{ "startOffset": 9466, "endOffset": 10020, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "enqueue",
          "ranges": [{ "startOffset": 10037, "endOffset": 10147, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "resetQueue",
          "ranges": [
            { "startOffset": 10396, "endOffset": 10864, "count": 1 },
            { "startOffset": 10497, "endOffset": 10787, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "retry",
          "ranges": [
            { "startOffset": 10866, "endOffset": 12679, "count": 1 },
            { "startOffset": 11061, "endOffset": 12677, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "86",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/graceful-fs/polyfills.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 10141, "count": 1 },
            { "startOffset": 259, "endOffset": 272, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "process.cwd",
          "ranges": [
            { "startOffset": 163, "endOffset": 234, "count": 7 },
            { "startOffset": 192, "endOffset": 219, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "process.chdir",
          "ranges": [{ "startOffset": 416, "endOffset": 476, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "patch",
          "ranges": [
            { "startOffset": 577, "endOffset": 10140, "count": 2 },
            { "startOffset": 774, "endOffset": 830, "count": 0 },
            { "startOffset": 832, "endOffset": 857, "count": 0 },
            { "startOffset": 916, "endOffset": 942, "count": 0 },
            { "startOffset": 2119, "endOffset": 2248, "count": 0 },
            { "startOffset": 2875, "endOffset": 3782, "count": 0 },
            { "startOffset": 3881, "endOffset": 3890, "count": 0 },
            { "startOffset": 4689, "endOffset": 4702, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "fs.lchmod",
          "ranges": [{ "startOffset": 1981, "endOffset": 2049, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fs.lchmodSync",
          "ranges": [{ "startOffset": 2070, "endOffset": 2084, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fs.lchown",
          "ranges": [{ "startOffset": 2137, "endOffset": 2209, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fs.lchownSync",
          "ranges": [{ "startOffset": 2230, "endOffset": 2244, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2944, "endOffset": 3766, "count": 0 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3896, "endOffset": 4627, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "read",
          "ranges": [{ "startOffset": 3921, "endOffset": 4462, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4708, "endOffset": 5082, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "fs.readSync",
          "ranges": [{ "startOffset": 4740, "endOffset": 5081, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "patchLchmod",
          "ranges": [{ "startOffset": 5100, "endOffset": 6268, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "patchLutimes",
          "ranges": [{ "startOffset": 6272, "endOffset": 7328, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "chmodFix",
          "ranges": [
            { "startOffset": 7332, "endOffset": 7581, "count": 6 },
            { "startOffset": 7374, "endOffset": 7385, "count": 2 },
            { "startOffset": 7385, "endOffset": 7580, "count": 4 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 7397, "endOffset": 7577, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "chmodFixSync",
          "ranges": [
            { "startOffset": 7585, "endOffset": 7810, "count": 6 },
            { "startOffset": 7631, "endOffset": 7642, "count": 2 },
            { "startOffset": 7642, "endOffset": 7809, "count": 4 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 7654, "endOffset": 7806, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "chownFix",
          "ranges": [
            { "startOffset": 7815, "endOffset": 8072, "count": 6 },
            { "startOffset": 7857, "endOffset": 7868, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 7880, "endOffset": 8068, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "chownFixSync",
          "ranges": [
            { "startOffset": 8076, "endOffset": 8309, "count": 6 },
            { "startOffset": 8122, "endOffset": 8133, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 8145, "endOffset": 8305, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "statFix",
          "ranges": [
            { "startOffset": 8313, "endOffset": 8936, "count": 6 },
            { "startOffset": 8354, "endOffset": 8365, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 8466, "endOffset": 8932, "count": 2 },
            { "startOffset": 8842, "endOffset": 8884, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "callback",
          "ranges": [
            { "startOffset": 8600, "endOffset": 8820, "count": 2 },
            { "startOffset": 8682, "endOffset": 8706, "count": 0 },
            { "startOffset": 8736, "endOffset": 8760, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "statFixSync",
          "ranges": [
            { "startOffset": 8940, "endOffset": 9377, "count": 6 },
            { "startOffset": 8985, "endOffset": 8996, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 9097, "endOffset": 9373, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "chownErOk",
          "ranges": [{ "startOffset": 9850, "endOffset": 10138, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "87",
      "url": "node:constants",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1713, "count": 1 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "88",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/graceful-fs/legacy-streams.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2655, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "legacy",
          "ranges": [{ "startOffset": 64, "endOffset": 2654, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "89",
      "url": "node:stream",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 5095, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fn",
          "ranges": [{ "startOffset": 2552, "endOffset": 2712, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fn",
          "ranges": [{ "startOffset": 3214, "endOffset": 3352, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 4400, "endOffset": 4432, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 4530, "endOffset": 4571, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 4664, "endOffset": 4705, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "_uint8ArrayToBuffer",
          "ranges": [{ "startOffset": 4886, "endOffset": 5093, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "90",
      "url": "node:internal/streams/operators",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 10772, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "compose",
          "ranges": [{ "startOffset": 1019, "endOffset": 1599, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "map",
          "ranges": [{ "startOffset": 1601, "endOffset": 4704, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "asIndexedPairs",
          "ranges": [{ "startOffset": 4706, "endOffset": 5179, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "some",
          "ranges": [{ "startOffset": 5181, "endOffset": 5329, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "every",
          "ranges": [{ "startOffset": 5331, "endOffset": 5659, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "find",
          "ranges": [{ "startOffset": 5661, "endOffset": 5803, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "forEach",
          "ranges": [{ "startOffset": 5805, "endOffset": 6175, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "filter",
          "ranges": [{ "startOffset": 6177, "endOffset": 6504, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ReduceAwareErrMissingArgs",
          "ranges": [{ "startOffset": 6720, "endOffset": 6834, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "reduce",
          "ranges": [{ "startOffset": 6838, "endOffset": 8280, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "toArray",
          "ranges": [{ "startOffset": 8282, "endOffset": 8711, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "flatMap",
          "ranges": [{ "startOffset": 8713, "endOffset": 8907, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "toIntegerOrInfinity",
          "ranges": [{ "startOffset": 8909, "endOffset": 9231, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "drop",
          "ranges": [{ "startOffset": 9233, "endOffset": 9781, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "take",
          "ranges": [{ "startOffset": 9783, "endOffset": 10453, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "91",
      "url": "node:internal/abort_controller",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 12429, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lazyMessageChannel",
          "ranges": [{ "startOffset": 1609, "endOffset": 1742, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lazyMakeTransferable",
          "ranges": [{ "startOffset": 1744, "endOffset": 1902, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "customInspect",
          "ranges": [{ "startOffset": 2372, "endOffset": 2631, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "validateThisAbortSignal",
          "ranges": [{ "startOffset": 2633, "endOffset": 2758, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setWeakAbortSignalTimeout",
          "ranges": [{ "startOffset": 3340, "endOffset": 3740, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "AbortSignal",
          "ranges": [{ "startOffset": 3784, "endOffset": 3844, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get aborted",
          "ranges": [{ "startOffset": 3881, "endOffset": 3964, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get reason",
          "ranges": [{ "startOffset": 3997, "endOffset": 4076, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "throwIfAborted",
          "ranges": [{ "startOffset": 4080, "endOffset": 4196, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4200, "endOffset": 4329, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "abort",
          "ranges": [{ "startOffset": 4407, "endOffset": 4551, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "timeout",
          "ranges": [{ "startOffset": 4629, "endOffset": 4895, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "any",
          "ranges": [{ "startOffset": 4982, "endOffset": 6325, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 6329, "endOffset": 7097, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 7101, "endOffset": 7455, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 7459, "endOffset": 8066, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 8070, "endOffset": 8322, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 8326, "endOffset": 8774, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ClonedAbortSignal",
          "ranges": [{ "startOffset": 8778, "endOffset": 8862, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ClonedAbortSignal.<computed>",
          "ranges": [{ "startOffset": 8907, "endOffset": 8915, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createAbortSignal",
          "ranges": [{ "startOffset": 9393, "endOffset": 9806, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "abortSignal",
          "ranges": [{ "startOffset": 9808, "endOffset": 10170, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 10172, "endOffset": 10828, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "transferableAbortSignal",
          "ranges": [{ "startOffset": 10976, "endOffset": 11168, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "transferableAbortController",
          "ranges": [{ "startOffset": 11240, "endOffset": 11329, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "aborted",
          "ranges": [{ "startOffset": 11423, "endOffset": 11980, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "92",
      "url": "node:internal/streams/end-of-stream",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 8492, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isRequest",
          "ranges": [{ "startOffset": 891, "endOffset": 986, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "nop",
          "ranges": [{ "startOffset": 1000, "endOffset": 1008, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "eos",
          "ranges": [{ "startOffset": 1011, "endOffset": 7061, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "eosWeb",
          "ranges": [{ "startOffset": 7063, "endOffset": 7972, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "finished",
          "ranges": [{ "startOffset": 7974, "endOffset": 8432, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "93",
      "url": "node:internal/streams/compose",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 5511, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "compose",
          "ranges": [{ "startOffset": 592, "endOffset": 5509, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "94",
      "url": "node:internal/streams/pipeline",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 12389, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "destroyer",
          "ranges": [{ "startOffset": 1056, "endOffset": 1485, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "popCallback",
          "ranges": [{ "startOffset": 1487, "endOffset": 1815, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "makeAsyncIterable",
          "ranges": [{ "startOffset": 1817, "endOffset": 2103, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fromReadable",
          "ranges": [{ "startOffset": 2105, "endOffset": 2279, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "pumpToNode",
          "ranges": [{ "startOffset": 2281, "endOffset": 3325, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "pumpToWeb",
          "ranges": [{ "startOffset": 3327, "endOffset": 3925, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "pipeline",
          "ranges": [{ "startOffset": 3927, "endOffset": 4020, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "pipelineImpl",
          "ranges": [{ "startOffset": 4022, "endOffset": 10539, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "pipe",
          "ranges": [{ "startOffset": 10541, "endOffset": 12342, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "95",
      "url": "node:internal/streams/destroy",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 7354, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "checkError",
          "ranges": [{ "startOffset": 487, "endOffset": 798, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "destroy",
          "ranges": [{ "startOffset": 908, "endOffset": 1785, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "_destroy",
          "ranges": [{ "startOffset": 1787, "endOffset": 2411, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emitErrorCloseNT",
          "ranges": [{ "startOffset": 2413, "endOffset": 2500, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emitCloseNT",
          "ranges": [{ "startOffset": 2502, "endOffset": 2822, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emitErrorNT",
          "ranges": [{ "startOffset": 2824, "endOffset": 3171, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "undestroy",
          "ranges": [{ "startOffset": 3173, "endOffset": 3863, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "errorOrDestroy",
          "ranges": [{ "startOffset": 3865, "endOffset": 5004, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "construct",
          "ranges": [{ "startOffset": 5006, "endOffset": 5422, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "constructNT",
          "ranges": [{ "startOffset": 5424, "endOffset": 6163, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isRequest",
          "ranges": [{ "startOffset": 6165, "endOffset": 6261, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emitCloseLegacy",
          "ranges": [{ "startOffset": 6263, "endOffset": 6323, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emitErrorCloseLegacy",
          "ranges": [{ "startOffset": 6325, "endOffset": 6445, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "destroyer",
          "ranges": [{ "startOffset": 6480, "endOffset": 7262, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "96",
      "url": "node:internal/streams/duplex",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 6588, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Duplex",
          "ranges": [
            { "startOffset": 2350, "endOffset": 4313, "count": 3 },
            { "startOffset": 2414, "endOffset": 2441, "count": 0 },
            { "startOffset": 3128, "endOffset": 3264, "count": 2 },
            { "startOffset": 3302, "endOffset": 3477, "count": 1 },
            { "startOffset": 3529, "endOffset": 3555, "count": 0 },
            { "startOffset": 3608, "endOffset": 3636, "count": 0 },
            { "startOffset": 3690, "endOffset": 3720, "count": 0 },
            { "startOffset": 3775, "endOffset": 3807, "count": 0 },
            { "startOffset": 3860, "endOffset": 3888, "count": 0 },
            { "startOffset": 3945, "endOffset": 3981, "count": 0 },
            { "startOffset": 4013, "endOffset": 4050, "count": 0 },
            { "startOffset": 4054, "endOffset": 4096, "count": 0 },
            { "startOffset": 4160, "endOffset": 4311, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4194, "endOffset": 4305, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 5461, "endOffset": 5673, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 5679, "endOffset": 5940, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lazyWebStreams",
          "ranges": [{ "startOffset": 6014, "endOffset": 6178, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Duplex.fromWeb",
          "ranges": [{ "startOffset": 6197, "endOffset": 6315, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Duplex.toWeb",
          "ranges": [{ "startOffset": 6333, "endOffset": 6422, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Duplex.from",
          "ranges": [{ "startOffset": 6455, "endOffset": 6586, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "97",
      "url": "node:internal/streams/legacy",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 3251, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Stream",
          "ranges": [{ "startOffset": 130, "endOffset": 178, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "Stream.pipe",
          "ranges": [{ "startOffset": 292, "endOffset": 2094, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "eventNames",
          "ranges": [{ "startOffset": 2127, "endOffset": 2393, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "prependListener",
          "ranges": [{ "startOffset": 2396, "endOffset": 3203, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "98",
      "url": "node:internal/streams/readable",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 51364, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1880, "endOffset": 1905, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "nop",
          "ranges": [{ "startOffset": 2867, "endOffset": 2875, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "makeBitMapDescriptor",
          "ranges": [{ "startOffset": 3771, "endOffset": 3993, "count": 19 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 3846, "endOffset": 3890, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "set",
          "ranges": [
            { "startOffset": 3896, "endOffset": 3985, "count": 29 },
            { "startOffset": 3926, "endOffset": 3946, "count": 11 },
            { "startOffset": 3946, "endOffset": 3979, "count": 18 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 6167, "endOffset": 6255, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [
            { "startOffset": 6261, "endOffset": 6427, "count": 3 },
            { "startOffset": 6291, "endOffset": 6371, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 6504, "endOffset": 6604, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 6610, "endOffset": 6840, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 6909, "endOffset": 6997, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 7003, "endOffset": 7169, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 7239, "endOffset": 7329, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 7335, "endOffset": 7504, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 7573, "endOffset": 7676, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 7682, "endOffset": 7949, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ReadableState",
          "ranges": [
            { "startOffset": 7962, "endOffset": 9958, "count": 3 },
            { "startOffset": 8362, "endOffset": 8390, "count": 0 },
            { "startOffset": 8453, "endOffset": 8481, "count": 0 },
            { "startOffset": 8729, "endOffset": 8765, "count": 0 },
            { "startOffset": 9107, "endOffset": 9137, "count": 0 },
            { "startOffset": 9416, "endOffset": 9445, "count": 0 },
            { "startOffset": 9446, "endOffset": 9476, "count": 0 },
            { "startOffset": 9525, "endOffset": 9684, "count": 0 },
            { "startOffset": 9857, "endOffset": 9956, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "onConstructed",
          "ranges": [{ "startOffset": 10002, "endOffset": 10119, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable",
          "ranges": [{ "startOffset": 10122, "endOffset": 11156, "count": 0 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "Readable._destroy",
          "ranges": [{ "startOffset": 11293, "endOffset": 11325, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.<computed>",
          "ranges": [{ "startOffset": 11376, "endOffset": 11414, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.<computed>",
          "ranges": [{ "startOffset": 11458, "endOffset": 11714, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.push",
          "ranges": [{ "startOffset": 11943, "endOffset": 12212, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.unshift",
          "ranges": [{ "startOffset": 12308, "endOffset": 12575, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readableAddChunkUnshiftByteMode",
          "ranges": [{ "startOffset": 12579, "endOffset": 13645, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readableAddChunkUnshiftObjectMode",
          "ranges": [{ "startOffset": 13647, "endOffset": 13887, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readableAddChunkUnshiftValue",
          "ranges": [{ "startOffset": 13889, "endOffset": 14222, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readableAddChunkPushByteMode",
          "ranges": [{ "startOffset": 14224, "endOffset": 15616, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readableAddChunkPushObjectMode",
          "ranges": [{ "startOffset": 15618, "endOffset": 16215, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "canPushMore",
          "ranges": [{ "startOffset": 16217, "endOffset": 16547, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "addChunk",
          "ranges": [{ "startOffset": 16549, "endOffset": 17493, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.isPaused",
          "ranges": [{ "startOffset": 17525, "endOffset": 17680, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.setEncoding",
          "ranges": [{ "startOffset": 17744, "endOffset": 18314, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "computeNewHighWaterMark",
          "ranges": [{ "startOffset": 18375, "endOffset": 18726, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "howMuchToRead",
          "ranges": [{ "startOffset": 18839, "endOffset": 19320, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.read",
          "ranges": [{ "startOffset": 19417, "endOffset": 24092, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onEofChunk",
          "ranges": [{ "startOffset": 24095, "endOffset": 25057, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emitReadable",
          "ranges": [{ "startOffset": 25258, "endOffset": 25589, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emitReadable_",
          "ranges": [{ "startOffset": 25591, "endOffset": 26263, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "maybeReadMore",
          "ranges": [{ "startOffset": 26613, "endOffset": 26820, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "maybeReadMore_",
          "ranges": [{ "startOffset": 26822, "endOffset": 28651, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable._read",
          "ranges": [{ "startOffset": 28922, "endOffset": 28988, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.pipe",
          "ranges": [{ "startOffset": 29017, "endOffset": 33527, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "pipeOnDrain",
          "ranges": [{ "startOffset": 33530, "endOffset": 34207, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.unpipe",
          "ranges": [{ "startOffset": 34238, "endOffset": 34939, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.on",
          "ranges": [
            { "startOffset": 35065, "endOffset": 36074, "count": 4 },
            { "startOffset": 35197, "endOffset": 35626, "count": 0 },
            { "startOffset": 35655, "endOffset": 36057, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Readable.removeListener",
          "ranges": [{ "startOffset": 36169, "endOffset": 36876, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.removeAllListeners",
          "ranges": [{ "startOffset": 36979, "endOffset": 37573, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "updateReadableListening",
          "ranges": [{ "startOffset": 37576, "endOffset": 38278, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "nReadingNextTick",
          "ranges": [{ "startOffset": 38280, "endOffset": 38368, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.resume",
          "ranges": [{ "startOffset": 38522, "endOffset": 39027, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "resume",
          "ranges": [{ "startOffset": 39030, "endOffset": 39203, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "resume_",
          "ranges": [{ "startOffset": 39205, "endOffset": 39519, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.pause",
          "ranges": [{ "startOffset": 39548, "endOffset": 39860, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "flow",
          "ranges": [{ "startOffset": 39863, "endOffset": 40014, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.wrap",
          "ranges": [{ "startOffset": 40198, "endOffset": 41219, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.<computed>",
          "ranges": [{ "startOffset": 41264, "endOffset": 41316, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.iterator",
          "ranges": [{ "startOffset": 41349, "endOffset": 41492, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "streamToAsyncIterator",
          "ranges": [{ "startOffset": 41495, "endOffset": 41744, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createAsyncIterator",
          "ranges": [{ "startOffset": 41746, "endOffset": 42822, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 43041, "endOffset": 43430, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 43436, "endOffset": 43566, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 43648, "endOffset": 43712, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 43794, "endOffset": 44002, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 44090, "endOffset": 44156, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 44237, "endOffset": 44319, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 44401, "endOffset": 44461, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 44472, "endOffset": 44581, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 44657, "endOffset": 44711, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 44791, "endOffset": 44879, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 44957, "endOffset": 45042, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 45111, "endOffset": 45195, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 45240, "endOffset": 45324, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 45395, "endOffset": 45482, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 45488, "endOffset": 45777, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 45852, "endOffset": 45940, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 46081, "endOffset": 46126, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 46206, "endOffset": 46264, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 46270, "endOffset": 46431, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fromList",
          "ranges": [{ "startOffset": 46737, "endOffset": 49189, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "endReadable",
          "ranges": [{ "startOffset": 49191, "endOffset": 49417, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "endReadableNT",
          "ranges": [{ "startOffset": 49419, "endOffset": 50312, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "endWritableNT",
          "ranges": [{ "startOffset": 50314, "endOffset": 50474, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.from",
          "ranges": [{ "startOffset": 50492, "endOffset": 50561, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lazyWebStreams",
          "ranges": [{ "startOffset": 50626, "endOffset": 50790, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.fromWeb",
          "ranges": [{ "startOffset": 50811, "endOffset": 50945, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.toWeb",
          "ranges": [{ "startOffset": 50965, "endOffset": 51099, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Readable.wrap",
          "ranges": [{ "startOffset": 51118, "endOffset": 51362, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "99",
      "url": "node:internal/streams/add-abort-signal",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1741, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "validateAbortSignal",
          "ranges": [{ "startOffset": 570, "endOffset": 729, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "addAbortSignal",
          "ranges": [{ "startOffset": 764, "endOffset": 1075, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "module.exports.addAbortSignalNoValidate",
          "ranges": [{ "startOffset": 1120, "endOffset": 1739, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "100",
      "url": "node:internal/streams/state",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1332, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "highWaterMarkFrom",
          "ranges": [
            { "startOffset": 287, "endOffset": 454, "count": 6 },
            { "startOffset": 385, "endOffset": 408, "count": 0 },
            { "startOffset": 445, "endOffset": 451, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getDefaultHighWaterMark",
          "ranges": [
            { "startOffset": 456, "endOffset": 586, "count": 6 },
            { "startOffset": 523, "endOffset": 555, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "setDefaultHighWaterMark",
          "ranges": [{ "startOffset": 588, "endOffset": 799, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getHighWaterMark",
          "ranges": [
            { "startOffset": 801, "endOffset": 1234, "count": 6 },
            { "startOffset": 948, "endOffset": 1160, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "101",
      "url": "node:string_decoder",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 5141, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "normalizeEncoding",
          "ranges": [
            { "startOffset": 2172, "endOffset": 2422, "count": 7 },
            { "startOffset": 2272, "endOffset": 2405, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "StringDecoder",
          "ranges": [{ "startOffset": 2633, "endOffset": 2832, "count": 7 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "write",
          "ranges": [{ "startOffset": 3155, "endOffset": 3540, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "end",
          "ranges": [{ "startOffset": 3817, "endOffset": 4008, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "text",
          "ranges": [{ "startOffset": 4219, "endOffset": 4376, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 4514, "endOffset": 4727, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 4819, "endOffset": 4882, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 4975, "endOffset": 5090, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "102",
      "url": "node:internal/streams/from",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 4341, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "from",
          "ranges": [{ "startOffset": 241, "endOffset": 4316, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "103",
      "url": "node:internal/streams/writable",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 33628, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "nop",
          "ranges": [{ "startOffset": 2779, "endOffset": 2796, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "makeBitMapDescriptor",
          "ranges": [{ "startOffset": 3852, "endOffset": 4074, "count": 20 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 3927, "endOffset": 3971, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "set",
          "ranges": [
            { "startOffset": 3977, "endOffset": 4066, "count": 34 },
            { "startOffset": 4007, "endOffset": 4027, "count": 10 },
            { "startOffset": 4027, "endOffset": 4060, "count": 24 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 7038, "endOffset": 7116, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [
            { "startOffset": 7122, "endOffset": 7288, "count": 3 },
            { "startOffset": 7152, "endOffset": 7232, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [
            { "startOffset": 7358, "endOffset": 7458, "count": 9 },
            { "startOffset": 7409, "endOffset": 7443, "count": 3 },
            { "startOffset": 7444, "endOffset": 7455, "count": 6 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "set",
          "ranges": [
            { "startOffset": 7464, "endOffset": 7737, "count": 1 },
            { "startOffset": 7502, "endOffset": 7564, "count": 0 },
            { "startOffset": 7581, "endOffset": 7642, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 7814, "endOffset": 7914, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 7920, "endOffset": 8150, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 8291, "endOffset": 8368, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [
            { "startOffset": 8374, "endOffset": 8538, "count": 5 },
            { "startOffset": 8439, "endOffset": 8482, "count": 2 },
            { "startOffset": 8482, "endOffset": 8532, "count": 3 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 8725, "endOffset": 8825, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 8831, "endOffset": 9028, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 9098, "endOffset": 9176, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 9182, "endOffset": 9349, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "WritableState",
          "ranges": [
            { "startOffset": 9362, "endOffset": 11664, "count": 3 },
            { "startOffset": 9640, "endOffset": 9668, "count": 0 },
            { "startOffset": 9731, "endOffset": 9759, "count": 0 },
            { "startOffset": 10050, "endOffset": 10086, "count": 0 },
            { "startOffset": 10140, "endOffset": 10171, "count": 0 },
            { "startOffset": 10429, "endOffset": 10459, "count": 0 },
            { "startOffset": 10716, "endOffset": 10722, "count": 0 },
            { "startOffset": 10754, "endOffset": 10783, "count": 0 },
            { "startOffset": 10784, "endOffset": 10814, "count": 0 },
            { "startOffset": 10863, "endOffset": 11072, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "resetBuffer",
          "ranges": [{ "startOffset": 11666, "endOffset": 11830, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getBuffer",
          "ranges": [{ "startOffset": 11868, "endOffset": 11997, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 12093, "endOffset": 12204, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onConstructed",
          "ranges": [{ "startOffset": 12253, "endOffset": 12439, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Writable",
          "ranges": [{ "startOffset": 12442, "endOffset": 13548, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "value",
          "ranges": [{ "startOffset": 13630, "endOffset": 13834, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Writable.pipe",
          "ranges": [{ "startOffset": 13935, "endOffset": 14003, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "_write",
          "ranges": [
            { "startOffset": 14006, "endOffset": 15404, "count": 3 },
            { "startOffset": 14110, "endOffset": 14137, "count": 2 },
            { "startOffset": 14139, "endOffset": 14158, "count": 1 },
            { "startOffset": 14182, "endOffset": 14227, "count": 0 },
            { "startOffset": 14366, "endOffset": 14389, "count": 0 },
            { "startOffset": 14396, "endOffset": 14516, "count": 0 },
            { "startOffset": 14605, "endOffset": 14689, "count": 0 },
            { "startOffset": 14695, "endOffset": 15015, "count": 0 },
            { "startOffset": 15071, "endOffset": 15120, "count": 0 },
            { "startOffset": 15166, "endOffset": 15216, "count": 0 },
            { "startOffset": 15229, "endOffset": 15320, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Writable.write",
          "ranges": [
            { "startOffset": 15433, "endOffset": 15624, "count": 3 },
            { "startOffset": 15488, "endOffset": 15521, "count": 2 },
            { "startOffset": 15523, "endOffset": 15568, "count": 2 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Writable.cork",
          "ranges": [{ "startOffset": 15653, "endOffset": 15751, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Writable.uncork",
          "ranges": [{ "startOffset": 15782, "endOffset": 16020, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setDefaultEncoding",
          "ranges": [{ "startOffset": 16063, "endOffset": 16388, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "writeOrBuffer",
          "ranges": [
            { "startOffset": 16578, "endOffset": 17782, "count": 3 },
            { "startOffset": 16695, "endOffset": 16698, "count": 0 },
            { "startOffset": 16829, "endOffset": 17236, "count": 0 },
            { "startOffset": 17296, "endOffset": 17335, "count": 2 },
            { "startOffset": 17526, "endOffset": 17547, "count": 0 },
            { "startOffset": 17562, "endOffset": 17600, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "doWrite",
          "ranges": [{ "startOffset": 17784, "endOffset": 18221, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onwriteError",
          "ranges": [{ "startOffset": 18223, "endOffset": 18608, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onwrite",
          "ranges": [
            { "startOffset": 18610, "endOffset": 21216, "count": 3 },
            { "startOffset": 18727, "endOffset": 18801, "count": 0 },
            { "startOffset": 18895, "endOffset": 18917, "count": 2 },
            { "startOffset": 18918, "endOffset": 18923, "count": 1 },
            { "startOffset": 19066, "endOffset": 19680, "count": 0 },
            { "startOffset": 19731, "endOffset": 19772, "count": 0 },
            { "startOffset": 19849, "endOffset": 19870, "count": 0 },
            { "startOffset": 20234, "endOffset": 20585, "count": 1 },
            { "startOffset": 20304, "endOffset": 20424, "count": 0 },
            { "startOffset": 20508, "endOffset": 20567, "count": 0 },
            { "startOffset": 20585, "endOffset": 21151, "count": 2 },
            { "startOffset": 20639, "endOffset": 20700, "count": 0 },
            { "startOffset": 20702, "endOffset": 20760, "count": 0 },
            { "startOffset": 21008, "endOffset": 21151, "count": 0 },
            { "startOffset": 21157, "endOffset": 21210, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "afterWriteTick",
          "ranges": [{ "startOffset": 21218, "endOffset": 21405, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "afterWrite",
          "ranges": [
            { "startOffset": 21407, "endOffset": 21915, "count": 2 },
            { "startOffset": 21585, "endOffset": 21606, "count": 0 },
            { "startOffset": 21625, "endOffset": 21690, "count": 0 },
            { "startOffset": 21756, "endOffset": 21800, "count": 1 },
            { "startOffset": 21800, "endOffset": 21829, "count": 0 },
            { "startOffset": 21829, "endOffset": 21870, "count": 1 },
            { "startOffset": 21870, "endOffset": 21913, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "errorBuffer",
          "ranges": [{ "startOffset": 21987, "endOffset": 22538, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "clearBuffer",
          "ranges": [{ "startOffset": 22604, "endOffset": 24274, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Writable._write",
          "ranges": [{ "startOffset": 24304, "endOffset": 24473, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Writable.end",
          "ranges": [{ "startOffset": 24537, "endOffset": 26177, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "needFinish",
          "ranges": [{ "startOffset": 26180, "endOffset": 26609, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onFinish",
          "ranges": [{ "startOffset": 26611, "endOffset": 27243, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "prefinish",
          "ranges": [{ "startOffset": 27245, "endOffset": 27769, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "finishMaybe",
          "ranges": [{ "startOffset": 27771, "endOffset": 28270, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "finish",
          "ranges": [{ "startOffset": 28272, "endOffset": 28915, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "callFinishedCallbacks",
          "ranges": [{ "startOffset": 28917, "endOffset": 29235, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 29319, "endOffset": 29422, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 29470, "endOffset": 29576, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 29582, "endOffset": 29832, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 29879, "endOffset": 30282, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 30288, "endOffset": 30422, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 30477, "endOffset": 30595, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 30652, "endOffset": 30772, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 30825, "endOffset": 30920, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 30972, "endOffset": 31088, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 31144, "endOffset": 31297, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 31357, "endOffset": 31454, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 31507, "endOffset": 31600, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 31653, "endOffset": 31743, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 31812, "endOffset": 31909, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 31968, "endOffset": 32225, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Writable.destroy",
          "ranges": [{ "startOffset": 32303, "endOffset": 32583, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Writable._destroy",
          "ranges": [{ "startOffset": 32671, "endOffset": 32703, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Writable.<computed>",
          "ranges": [{ "startOffset": 32754, "endOffset": 32792, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lazyWebStreams",
          "ranges": [{ "startOffset": 32857, "endOffset": 33021, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Writable.fromWeb",
          "ranges": [{ "startOffset": 33042, "endOffset": 33176, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Writable.toWeb",
          "ranges": [{ "startOffset": 33196, "endOffset": 33303, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Writable.<computed>",
          "ranges": [{ "startOffset": 33347, "endOffset": 33626, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "104",
      "url": "node:stream/promises",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 917, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "pipeline",
          "ranges": [{ "startOffset": 318, "endOffset": 869, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "105",
      "url": "node:internal/streams/transform",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 7123, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Transform",
          "ranges": [{ "startOffset": 3920, "endOffset": 5500, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "final",
          "ranges": [{ "startOffset": 5502, "endOffset": 5946, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "prefinish",
          "ranges": [{ "startOffset": 5948, "endOffset": 6029, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Transform._transform",
          "ranges": [{ "startOffset": 6101, "endOffset": 6196, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Transform._write",
          "ranges": [{ "startOffset": 6228, "endOffset": 6965, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Transform._read",
          "ranges": [{ "startOffset": 6996, "endOffset": 7121, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "106",
      "url": "node:internal/streams/passthrough",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1762, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "PassThrough",
          "ranges": [{ "startOffset": 1529, "endOffset": 1671, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "PassThrough._transform",
          "ranges": [{ "startOffset": 1708, "endOffset": 1760, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "107",
      "url": "node:internal/streams/duplexpair",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1373, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 219, "endOffset": 1136, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "duplexPair",
          "ranges": [{ "startOffset": 1138, "endOffset": 1343, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "108",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/graceful-fs/clone.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 496, "count": 1 },
            { "startOffset": 81, "endOffset": 125, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getPrototypeOf",
          "ranges": [{ "startOffset": 84, "endOffset": 125, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "clone",
          "ranges": [
            { "startOffset": 127, "endOffset": 495, "count": 1 },
            { "startOffset": 201, "endOffset": 211, "count": 0 },
            { "startOffset": 291, "endOffset": 333, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 377, "endOffset": 477, "count": 104 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "109",
      "url": "node:internal/fs/streams",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 15271, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "_construct",
          "ranges": [{ "startOffset": 1082, "endOffset": 1985, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "FileHandleOperations",
          "ranges": [{ "startOffset": 2078, "endOffset": 3168, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "close",
          "ranges": [{ "startOffset": 3171, "endOffset": 3412, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "_close",
          "ranges": [{ "startOffset": 3414, "endOffset": 3536, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "importFd",
          "ranges": [{ "startOffset": 3538, "endOffset": 4543, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ReadStream",
          "ranges": [{ "startOffset": 4545, "endOffset": 6288, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 6477, "endOffset": 6532, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 6536, "endOffset": 6593, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 6629, "endOffset": 6654, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ReadStream._read",
          "ranges": [{ "startOffset": 6830, "endOffset": 7961, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ReadStream._destroy",
          "ranges": [{ "startOffset": 7996, "endOffset": 8557, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ReadStream.close",
          "ranges": [{ "startOffset": 8589, "endOffset": 8675, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 8755, "endOffset": 8789, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "WriteStream",
          "ranges": [{ "startOffset": 8818, "endOffset": 10816, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 11008, "endOffset": 11063, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 11067, "endOffset": 11124, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 11161, "endOffset": 11186, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "writeAll",
          "ranges": [{ "startOffset": 11337, "endOffset": 12130, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "writevAll",
          "ranges": [{ "startOffset": 12132, "endOffset": 12949, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "WriteStream._write",
          "ranges": [{ "startOffset": 12982, "endOffset": 13366, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "WriteStream._writev",
          "ranges": [{ "startOffset": 13401, "endOffset": 13963, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "WriteStream._destroy",
          "ranges": [{ "startOffset": 13999, "endOffset": 14560, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "WriteStream.close",
          "ranges": [{ "startOffset": 14593, "endOffset": 14975, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 15157, "endOffset": 15191, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "110",
      "url": "node:internal/fs/promises",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 34493, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lazyLoadCpPromises",
          "ranges": [{ "startOffset": 3287, "endOffset": 3379, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lazyFsStreams",
          "ranges": [{ "startOffset": 3441, "endOffset": 3524, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3553, "endOffset": 3603, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "handleErrorFromBinding",
          "ranges": [{ "startOffset": 3888, "endOffset": 4018, "count": 6 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 4020, "endOffset": 10138, "count": 12 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "FileHandle",
          "ranges": [
            { "startOffset": 4161, "endOffset": 4338, "count": 12 },
            { "startOffset": 4275, "endOffset": 4279, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getAsyncId",
          "ranges": [{ "startOffset": 4342, "endOffset": 4399, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get fd",
          "ranges": [{ "startOffset": 4403, "endOffset": 4439, "count": 24 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "appendFile",
          "ranges": [{ "startOffset": 4443, "endOffset": 4525, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "chmod",
          "ranges": [{ "startOffset": 4529, "endOffset": 4585, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "chown",
          "ranges": [{ "startOffset": 4589, "endOffset": 4653, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "datasync",
          "ranges": [{ "startOffset": 4657, "endOffset": 4709, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "sync",
          "ranges": [{ "startOffset": 4713, "endOffset": 4757, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "read",
          "ranges": [{ "startOffset": 4761, "endOffset": 4870, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readv",
          "ranges": [{ "startOffset": 4874, "endOffset": 4955, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readFile",
          "ranges": [{ "startOffset": 4959, "endOffset": 5026, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readLines",
          "ranges": [{ "startOffset": 5030, "endOffset": 5173, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "stat",
          "ranges": [{ "startOffset": 5177, "endOffset": 5237, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "truncate",
          "ranges": [{ "startOffset": 5241, "endOffset": 5305, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "utimes",
          "ranges": [{ "startOffset": 5309, "endOffset": 5383, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "write",
          "ranges": [{ "startOffset": 5387, "endOffset": 5498, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "writev",
          "ranges": [{ "startOffset": 5502, "endOffset": 5585, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "writeFile",
          "ranges": [{ "startOffset": 5589, "endOffset": 5670, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "close",
          "ranges": [
            { "startOffset": 5682, "endOffset": 6474, "count": 12 },
            { "startOffset": 5716, "endOffset": 5754, "count": 0 },
            { "startOffset": 5785, "endOffset": 5826, "count": 0 },
            { "startOffset": 6052, "endOffset": 6413, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 5994, "endOffset": 6036, "count": 12 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<computed>.SafePromisePrototypeFinally.<computed>",
          "ranges": [{ "startOffset": 6137, "endOffset": 6249, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 6252, "endOffset": 6397, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 6479, "endOffset": 6538, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readableWebStream",
          "ranges": [{ "startOffset": 6733, "endOffset": 8419, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createReadStream",
          "ranges": [{ "startOffset": 8717, "endOffset": 8868, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createWriteStream",
          "ranges": [{ "startOffset": 9172, "endOffset": 9326, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 9330, "endOffset": 9730, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 9734, "endOffset": 9787, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 9791, "endOffset": 9878, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 9882, "endOffset": 9915, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 9919, "endOffset": 10136, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "handleFdClose",
          "ranges": [{ "startOffset": 10140, "endOffset": 10511, "count": 12 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 10251, "endOffset": 10310, "count": 12 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 10297, "endOffset": 10309, "count": 12 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 10316, "endOffset": 10503, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "handleFdSync",
          "ranges": [{ "startOffset": 10513, "endOffset": 10796, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fsCall",
          "ranges": [{ "startOffset": 10798, "endOffset": 11258, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "checkAborted",
          "ranges": [
            { "startOffset": 11260, "endOffset": 11380, "count": 52 },
            { "startOffset": 11304, "endOffset": 11313, "count": 0 },
            { "startOffset": 11319, "endOffset": 11378, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "writeFileHandle",
          "ranges": [{ "startOffset": 11382, "endOffset": 12524, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readFileHandle",
          "ranges": [
            { "startOffset": 12526, "endOffset": 14927, "count": 12 },
            { "startOffset": 12678, "endOffset": 12708, "count": 7 },
            { "startOffset": 13062, "endOffset": 13100, "count": 7 },
            { "startOffset": 13101, "endOffset": 13107, "count": 5 },
            { "startOffset": 13133, "endOffset": 13181, "count": 0 },
            { "startOffset": 13214, "endOffset": 13252, "count": 0 },
            { "startOffset": 13523, "endOffset": 13595, "count": 0 },
            { "startOffset": 13779, "endOffset": 13783, "count": 0 },
            { "startOffset": 13868, "endOffset": 13935, "count": 0 },
            { "startOffset": 14029, "endOffset": 14040, "count": 0 },
            { "startOffset": 14097, "endOffset": 14157, "count": 0 },
            { "startOffset": 14180, "endOffset": 14358, "count": 5 },
            { "startOffset": 14201, "endOffset": 14215, "count": 0 },
            { "startOffset": 14217, "endOffset": 14327, "count": 0 },
            { "startOffset": 14358, "endOffset": 14433, "count": 7 },
            { "startOffset": 14433, "endOffset": 14586, "count": 0 },
            { "startOffset": 14587, "endOffset": 14601, "count": 0 },
            { "startOffset": 14621, "endOffset": 14921, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "access",
          "ranges": [{ "startOffset": 15080, "endOffset": 15318, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "cp",
          "ranges": [{ "startOffset": 15320, "endOffset": 15589, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "copyFile",
          "ranges": [{ "startOffset": 15591, "endOffset": 15973, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "open",
          "ranges": [
            { "startOffset": 16093, "endOffset": 16481, "count": 16 },
            { "startOffset": 16477, "endOffset": 16480, "count": 12 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "read",
          "ranges": [{ "startOffset": 16483, "endOffset": 17924, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readv",
          "ranges": [{ "startOffset": 17926, "endOffset": 18290, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "write",
          "ranges": [{ "startOffset": 18292, "endOffset": 19650, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "writev",
          "ranges": [{ "startOffset": 19652, "endOffset": 20117, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "rename",
          "ranges": [{ "startOffset": 20119, "endOffset": 20495, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "truncate",
          "ranges": [{ "startOffset": 20497, "endOffset": 20630, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ftruncate",
          "ranges": [{ "startOffset": 20632, "endOffset": 20871, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "rm",
          "ranges": [{ "startOffset": 20873, "endOffset": 21075, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "rmdir",
          "ranges": [{ "startOffset": 21077, "endOffset": 21526, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fdatasync",
          "ranges": [{ "startOffset": 21528, "endOffset": 21697, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fsync",
          "ranges": [{ "startOffset": 21699, "endOffset": 21860, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "mkdir",
          "ranges": [
            { "startOffset": 21862, "endOffset": 22409, "count": 2 },
            { "startOffset": 21966, "endOffset": 22004, "count": 0 },
            { "startOffset": 22070, "endOffset": 22085, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "readdirRecursive",
          "ranges": [{ "startOffset": 22411, "endOffset": 24433, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readdir",
          "ranges": [
            { "startOffset": 24435, "endOffset": 25055, "count": 1 },
            { "startOffset": 24675, "endOffset": 24724, "count": 0 },
            { "startOffset": 25040, "endOffset": 25052, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "readlink",
          "ranges": [{ "startOffset": 25057, "endOffset": 25371, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "symlink",
          "ranges": [{ "startOffset": 25373, "endOffset": 26673, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fstat",
          "ranges": [{ "startOffset": 26675, "endOffset": 26927, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lstat",
          "ranges": [{ "startOffset": 26929, "endOffset": 27254, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "stat",
          "ranges": [
            { "startOffset": 27256, "endOffset": 27578, "count": 6 },
            { "startOffset": 27538, "endOffset": 27577, "count": 4 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "statfs",
          "ranges": [{ "startOffset": 27580, "endOffset": 27909, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "link",
          "ranges": [{ "startOffset": 27911, "endOffset": 28304, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "unlink",
          "ranges": [{ "startOffset": 28306, "endOffset": 28524, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fchmod",
          "ranges": [{ "startOffset": 28526, "endOffset": 28739, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "chmod",
          "ranges": [{ "startOffset": 28741, "endOffset": 29007, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lchmod",
          "ranges": [{ "startOffset": 29009, "endOffset": 29237, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lchown",
          "ranges": [{ "startOffset": 29239, "endOffset": 29571, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fchown",
          "ranges": [{ "startOffset": 29573, "endOffset": 29850, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "chown",
          "ranges": [{ "startOffset": 29852, "endOffset": 30182, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "utimes",
          "ranges": [{ "startOffset": 30184, "endOffset": 30521, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "futimes",
          "ranges": [{ "startOffset": 30523, "endOffset": 30802, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lutimes",
          "ranges": [{ "startOffset": 30804, "endOffset": 31146, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "realpath",
          "ranges": [{ "startOffset": 31148, "endOffset": 31430, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "mkdtemp",
          "ranges": [{ "startOffset": 31432, "endOffset": 31740, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "writeFile",
          "ranges": [{ "startOffset": 31742, "endOffset": 32616, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isCustomIterable",
          "ranges": [{ "startOffset": 32618, "endOffset": 32732, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "appendFile",
          "ranges": [{ "startOffset": 32734, "endOffset": 32975, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readFile",
          "ranges": [
            { "startOffset": 32977, "endOffset": 33321, "count": 16 },
            { "startOffset": 33094, "endOffset": 33100, "count": 0 },
            { "startOffset": 33141, "endOffset": 33178, "count": 0 },
            { "startOffset": 33256, "endOffset": 33320, "count": 12 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "_watch",
          "ranges": [{ "startOffset": 33323, "endOffset": 33982, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "111",
      "url": "node:internal/fs/dir",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 8077, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Dir",
          "ranges": [{ "startOffset": 1177, "endOffset": 1993, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get path",
          "ranges": [{ "startOffset": 1997, "endOffset": 2040, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "read",
          "ranges": [{ "startOffset": 2044, "endOffset": 2111, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2115, "endOffset": 3841, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "processReadResult",
          "ranges": [{ "startOffset": 3845, "endOffset": 4099, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readSyncRecursive",
          "ranges": [{ "startOffset": 4103, "endOffset": 4682, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readSync",
          "ranges": [{ "startOffset": 4686, "endOffset": 5662, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "close",
          "ranges": [{ "startOffset": 5666, "endOffset": 6355, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "closeSync",
          "ranges": [{ "startOffset": 6359, "endOffset": 6736, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "entries",
          "ranges": [{ "startOffset": 6740, "endOffset": 7003, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "opendir",
          "ranges": [{ "startOffset": 7183, "endOffset": 7763, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "opendirSync",
          "ranges": [{ "startOffset": 7765, "endOffset": 8020, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "112",
      "url": "node:internal/fs/watchers",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 11262, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emitStop",
          "ranges": [{ "startOffset": 1420, "endOffset": 1468, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "StatWatcher",
          "ranges": [{ "startOffset": 1470, "endOffset": 1700, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onchange",
          "ranges": [{ "startOffset": 1820, "endOffset": 2177, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "StatWatcher.<computed>",
          "ranges": [{ "startOffset": 2565, "endOffset": 3403, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "StatWatcher.start",
          "ranges": [{ "startOffset": 3624, "endOffset": 3632, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "StatWatcher.stop",
          "ranges": [{ "startOffset": 3878, "endOffset": 4159, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "StatWatcher.<computed>",
          "ranges": [{ "startOffset": 4248, "endOffset": 4675, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "StatWatcher.ref",
          "ranges": [{ "startOffset": 4706, "endOffset": 4988, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "StatWatcher.unref",
          "ranges": [{ "startOffset": 5021, "endOffset": 5271, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "FSWatcher",
          "ranges": [{ "startOffset": 5275, "endOffset": 6247, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "FSWatcher.<computed>",
          "ranges": [{ "startOffset": 6784, "endOffset": 7698, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "FSWatcher.start",
          "ranges": [{ "startOffset": 7915, "endOffset": 7923, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "FSWatcher.close",
          "ranges": [{ "startOffset": 8046, "endOffset": 8383, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "FSWatcher.ref",
          "ranges": [{ "startOffset": 8412, "endOffset": 8481, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "FSWatcher.unref",
          "ranges": [{ "startOffset": 8512, "endOffset": 8583, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emitCloseNT",
          "ranges": [{ "startOffset": 8586, "endOffset": 8638, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 8862, "endOffset": 8898, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 8902, "endOffset": 8943, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "watch",
          "ranges": [{ "startOffset": 8979, "endOffset": 11130, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "113",
      "url": "node:internal/fs/recursive_watch",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 7216, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lazyLoadFsSync",
          "ranges": [{ "startOffset": 716, "endOffset": 802, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 833, "endOffset": 7162, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "114",
      "url": "node:internal/readline/interface",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 39087, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "InterfaceConstructor",
          "ranges": [{ "startOffset": 3851, "endOffset": 9343, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Interface",
          "ranges": [{ "startOffset": 9584, "endOffset": 9684, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get columns",
          "ranges": [{ "startOffset": 9687, "endOffset": 9799, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setPrompt",
          "ranges": [{ "startOffset": 9908, "endOffset": 9959, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getPrompt",
          "ranges": [{ "startOffset": 10053, "endOffset": 10096, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 10100, "endOffset": 10291, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "prompt",
          "ranges": [{ "startOffset": 10430, "endOffset": 10684, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 10688, "endOffset": 10995, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 10999, "endOffset": 11241, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 11245, "endOffset": 11332, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 11336, "endOffset": 11504, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 11508, "endOffset": 11705, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 11709, "endOffset": 12887, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 12891, "endOffset": 13896, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "close",
          "ranges": [{ "startOffset": 13980, "endOffset": 14151, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "pause",
          "ranges": [{ "startOffset": 14232, "endOffset": 14363, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "resume",
          "ranges": [{ "startOffset": 14455, "endOffset": 14591, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "write",
          "ranges": [{ "startOffset": 14862, "endOffset": 15021, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 15025, "endOffset": 16759, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 16763, "endOffset": 17432, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 17436, "endOffset": 17835, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 17839, "endOffset": 20048, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 20052, "endOffset": 20513, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 20517, "endOffset": 20775, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 20779, "endOffset": 21261, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 21265, "endOffset": 21746, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 21750, "endOffset": 22510, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 22514, "endOffset": 22941, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 22945, "endOffset": 23223, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 23227, "endOffset": 23485, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 23489, "endOffset": 23749, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 23753, "endOffset": 23908, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 23912, "endOffset": 24587, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "clearLine",
          "ranges": [{ "startOffset": 24591, "endOffset": 24740, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 24744, "endOffset": 24898, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 24902, "endOffset": 25089, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 25093, "endOffset": 25401, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 25405, "endOffset": 25713, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 26148, "endOffset": 26782, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 26786, "endOffset": 27494, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 27569, "endOffset": 28509, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getCursorPos",
          "ranges": [{ "startOffset": 28686, "endOffset": 28855, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 28974, "endOffset": 29531, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 29568, "endOffset": 37818, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 38126, "endOffset": 38506, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "115",
      "url": "node:internal/readline/utils",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 12396, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "CSI",
          "ranges": [
            { "startOffset": 385, "endOffset": 579, "count": 4 },
            { "startOffset": 544, "endOffset": 559, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "charLengthLeft",
          "ranges": [{ "startOffset": 958, "endOffset": 1220, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "charLengthAt",
          "ranges": [{ "startOffset": 1222, "endOffset": 1484, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emitKeys",
          "ranges": [{ "startOffset": 2213, "endOffset": 11840, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "commonPrefix",
          "ranges": [{ "startOffset": 11870, "endOffset": 12283, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "116",
      "url": "node:internal/readline/callbacks",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2754, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "cursorTo",
          "ranges": [{ "startOffset": 460, "endOffset": 1146, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "moveCursor",
          "ranges": [{ "startOffset": 1210, "endOffset": 1722, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "clearLine",
          "ranges": [{ "startOffset": 1869, "endOffset": 2272, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "clearScreenDown",
          "ranges": [{ "startOffset": 2349, "endOffset": 2672, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "117",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/functions/satisfies.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 233, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "satisfies",
          "ranges": [
            { "startOffset": 60, "endOffset": 205, "count": 1 },
            { "startOffset": 141, "endOffset": 174, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "118",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/classes/range.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 14523, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "Range",
          "ranges": [
            { "startOffset": 55, "endOffset": 2052, "count": 1 },
            { "startOffset": 155, "endOffset": 379, "count": 0 },
            { "startOffset": 418, "endOffset": 562, "count": 0 },
            { "startOffset": 1381, "endOffset": 1451, "count": 0 },
            { "startOffset": 1734, "endOffset": 1770, "count": 0 },
            { "startOffset": 1900, "endOffset": 2015, "count": 2 },
            { "startOffset": 1931, "endOffset": 1945, "count": 1 },
            { "startOffset": 1947, "endOffset": 2005, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1084, "endOffset": 1114, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1339, "endOffset": 1352, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1678, "endOffset": 1699, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "format",
          "ranges": [{ "startOffset": 2056, "endOffset": 2197, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2105, "endOffset": 2138, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "toString",
          "ranges": [{ "startOffset": 2201, "endOffset": 2240, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "parseRange",
          "ranges": [
            { "startOffset": 2244, "endOffset": 4527, "count": 2 },
            { "startOffset": 2427, "endOffset": 2453, "count": 0 },
            { "startOffset": 2483, "endOffset": 2496, "count": 0 },
            { "startOffset": 2595, "endOffset": 2622, "count": 0 },
            { "startOffset": 2726, "endOffset": 2750, "count": 0 },
            { "startOffset": 3623, "endOffset": 3862, "count": 0 },
            { "startOffset": 4247, "endOffset": 4350, "count": 3 },
            { "startOffset": 4276, "endOffset": 4307, "count": 0 },
            { "startOffset": 4377, "endOffset": 4396, "count": 1 },
            { "startOffset": 4398, "endOffset": 4431, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3437, "endOffset": 3480, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3566, "endOffset": 3605, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3729, "endOffset": 3855, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4167, "endOffset": 4209, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "intersects",
          "ranges": [{ "startOffset": 4531, "endOffset": 5161, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "test",
          "ranges": [
            { "startOffset": 5229, "endOffset": 5611, "count": 1 },
            { "startOffset": 5264, "endOffset": 5290, "count": 0 },
            { "startOffset": 5403, "endOffset": 5444, "count": 0 },
            { "startOffset": 5498, "endOffset": 5590, "count": 2 },
            { "startOffset": 5555, "endOffset": 5584, "count": 1 },
            { "startOffset": 5590, "endOffset": 5610, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "isNullSet",
          "ranges": [{ "startOffset": 6109, "endOffset": 6136, "count": 5 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isAny",
          "ranges": [{ "startOffset": 6151, "endOffset": 6170, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isSatisfiable",
          "ranges": [{ "startOffset": 6292, "endOffset": 6698, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "parseComparator",
          "ranges": [{ "startOffset": 6868, "endOffset": 7181, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isX",
          "ranges": [{ "startOffset": 7195, "endOffset": 7246, "count": 12 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "replaceTildes",
          "ranges": [{ "startOffset": 7582, "endOffset": 7705, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 7656, "endOffset": 7687, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "replaceTilde",
          "ranges": [
            { "startOffset": 7728, "endOffset": 8402, "count": 3 },
            { "startOffset": 7775, "endOffset": 7793, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 7833, "endOffset": 8399, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "replaceCarets",
          "ranges": [{ "startOffset": 8695, "endOffset": 8818, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 8769, "endOffset": 8800, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "replaceCaret",
          "ranges": [
            { "startOffset": 8841, "endOffset": 10143, "count": 2 },
            { "startOffset": 8920, "endOffset": 8938, "count": 0 },
            { "startOffset": 8991, "endOffset": 8997, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 9028, "endOffset": 10140, "count": 1 },
            { "startOffset": 9120, "endOffset": 9142, "count": 0 },
            { "startOffset": 9160, "endOffset": 9213, "count": 0 },
            { "startOffset": 9231, "endOffset": 9389, "count": 0 },
            { "startOffset": 9403, "endOffset": 9755, "count": 0 },
            { "startOffset": 9805, "endOffset": 10009, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "replaceXRanges",
          "ranges": [{ "startOffset": 10168, "endOffset": 10321, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 10271, "endOffset": 10303, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "replaceXRange",
          "ranges": [
            { "startOffset": 10345, "endOffset": 12045, "count": 3 },
            { "startOffset": 10413, "endOffset": 10432, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 10473, "endOffset": 12042, "count": 3 },
            { "startOffset": 10673, "endOffset": 10680, "count": 0 },
            { "startOffset": 10682, "endOffset": 10705, "count": 0 },
            { "startOffset": 10870, "endOffset": 10876, "count": 0 },
            { "startOffset": 10895, "endOffset": 11072, "count": 0 },
            { "startOffset": 11096, "endOffset": 11840, "count": 0 },
            { "startOffset": 11854, "endOffset": 11908, "count": 0 },
            { "startOffset": 11922, "endOffset": 11989, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "replaceStars",
          "ranges": [{ "startOffset": 12191, "endOffset": 12376, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "replaceGTE0",
          "ranges": [
            { "startOffset": 12398, "endOffset": 12553, "count": 3 },
            { "startOffset": 12525, "endOffset": 12536, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "hyphenReplace",
          "ranges": [{ "startOffset": 12810, "endOffset": 13480, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 12819, "endOffset": 13480, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "testSet",
          "ranges": [
            { "startOffset": 13498, "endOffset": 14522, "count": 2 },
            { "startOffset": 13566, "endOffset": 13629, "count": 3 },
            { "startOffset": 13599, "endOffset": 13625, "count": 1 },
            { "startOffset": 13629, "endOffset": 13663, "count": 1 },
            { "startOffset": 13663, "endOffset": 13692, "count": 0 },
            { "startOffset": 13694, "endOffset": 14505, "count": 0 },
            { "startOffset": 14505, "endOffset": 14521, "count": 1 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "119",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/internal/lrucache.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 788, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "LRUCache",
          "ranges": [{ "startOffset": 19, "endOffset": 84, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [
            { "startOffset": 88, "endOffset": 348, "count": 2 },
            { "startOffset": 195, "endOffset": 344, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "delete",
          "ranges": [{ "startOffset": 352, "endOffset": 402, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "set",
          "ranges": [
            { "startOffset": 406, "endOffset": 758, "count": 2 },
            { "startOffset": 606, "endOffset": 699, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "120",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/internal/parse-options.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 324, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "parseOptions",
          "ranges": [
            { "startOffset": 153, "endOffset": 293, "count": 15 },
            { "startOffset": 182, "endOffset": 208, "count": 5 },
            { "startOffset": 208, "endOffset": 245, "count": 10 },
            { "startOffset": 245, "endOffset": 273, "count": 0 },
            { "startOffset": 273, "endOffset": 292, "count": 10 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "121",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/classes/comparator.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 3617, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get ANY",
          "ranges": [{ "startOffset": 100, "endOffset": 131, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Comparator",
          "ranges": [
            { "startOffset": 135, "endOffset": 682, "count": 3 },
            { "startOffset": 238, "endOffset": 358, "count": 0 },
            { "startOffset": 556, "endOffset": 585, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "parse",
          "ranges": [
            { "startOffset": 686, "endOffset": 1182, "count": 3 },
            { "startOffset": 734, "endOffset": 757, "count": 0 },
            { "startOffset": 818, "endOffset": 882, "count": 0 },
            { "startOffset": 930, "endOffset": 934, "count": 0 },
            { "startOffset": 966, "endOffset": 998, "count": 0 },
            { "startOffset": 1077, "endOffset": 1108, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "toString",
          "ranges": [{ "startOffset": 1186, "endOffset": 1225, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "test",
          "ranges": [
            { "startOffset": 1229, "endOffset": 1609, "count": 3 },
            { "startOffset": 1353, "endOffset": 1378, "count": 0 },
            { "startOffset": 1417, "endOffset": 1538, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "intersects",
          "ranges": [{ "startOffset": 1613, "endOffset": 3323, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "122",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/internal/re.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 7937, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "makeSafeRegex",
          "ranges": [
            { "startOffset": 950, "endOffset": 1161, "count": 43 },
            { "startOffset": 1015, "endOffset": 1144, "count": 129 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "createToken",
          "ranges": [
            { "startOffset": 1183, "endOffset": 1459, "count": 43 },
            { "startOffset": 1376, "endOffset": 1381, "count": 5 },
            { "startOffset": 1382, "endOffset": 1393, "count": 38 },
            { "startOffset": 1439, "endOffset": 1444, "count": 5 },
            { "startOffset": 1445, "endOffset": 1456, "count": 38 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "123",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/internal/constants.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 859, "count": 1 },
            { "startOffset": 233, "endOffset": 279, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "124",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/internal/debug.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 226, "count": 1 },
            { "startOffset": 91, "endOffset": 138, "count": 0 },
            { "startOffset": 141, "endOffset": 188, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "debug",
          "ranges": [{ "startOffset": 143, "endOffset": 188, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "debug",
          "ranges": [{ "startOffset": 193, "endOffset": 201, "count": 98 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "125",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/functions/cmp.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 947, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "cmp",
          "ranges": [
            { "startOffset": 181, "endOffset": 925, "count": 3 },
            { "startOffset": 224, "endOffset": 386, "count": 0 },
            { "startOffset": 392, "endOffset": 554, "count": 0 },
            { "startOffset": 560, "endOffset": 568, "count": 0 },
            { "startOffset": 573, "endOffset": 582, "count": 0 },
            { "startOffset": 587, "endOffset": 626, "count": 0 },
            { "startOffset": 632, "endOffset": 672, "count": 0 },
            { "startOffset": 678, "endOffset": 716, "count": 0 },
            { "startOffset": 722, "endOffset": 762, "count": 2 },
            { "startOffset": 768, "endOffset": 806, "count": 1 },
            { "startOffset": 812, "endOffset": 852, "count": 0 },
            { "startOffset": 858, "endOffset": 919, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "126",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/functions/eq.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 112, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "eq",
          "ranges": [{ "startOffset": 48, "endOffset": 91, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "127",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/functions/compare.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 156, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "compare",
          "ranges": [{ "startOffset": 60, "endOffset": 129, "count": 3 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "128",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/classes/semver.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 8751, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "SemVer",
          "ranges": [
            { "startOffset": 311, "endOffset": 2238, "count": 11 },
            { "startOffset": 416, "endOffset": 621, "count": 6 },
            { "startOffset": 566, "endOffset": 615, "count": 0 },
            { "startOffset": 621, "endOffset": 761, "count": 5 },
            { "startOffset": 660, "endOffset": 761, "count": 0 },
            { "startOffset": 761, "endOffset": 800, "count": 5 },
            { "startOffset": 800, "endOffset": 900, "count": 0 },
            { "startOffset": 900, "endOffset": 1239, "count": 5 },
            { "startOffset": 1239, "endOffset": 1252, "count": 0 },
            { "startOffset": 1253, "endOffset": 1265, "count": 5 },
            { "startOffset": 1280, "endOffset": 1344, "count": 0 },
            { "startOffset": 1344, "endOffset": 1529, "count": 5 },
            { "startOffset": 1531, "endOffset": 1589, "count": 0 },
            { "startOffset": 1589, "endOffset": 1646, "count": 5 },
            { "startOffset": 1648, "endOffset": 1706, "count": 0 },
            { "startOffset": 1706, "endOffset": 1763, "count": 5 },
            { "startOffset": 1765, "endOffset": 1823, "count": 0 },
            { "startOffset": 1823, "endOffset": 1884, "count": 5 },
            { "startOffset": 1884, "endOffset": 1918, "count": 4 },
            { "startOffset": 1918, "endOffset": 2170, "count": 1 },
            { "startOffset": 2170, "endOffset": 2194, "count": 5 },
            { "startOffset": 2194, "endOffset": 2211, "count": 0 },
            { "startOffset": 2212, "endOffset": 2216, "count": 5 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 1970, "endOffset": 2163, "count": 1 },
            { "startOffset": 2137, "endOffset": 2162, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "format",
          "ranges": [
            { "startOffset": 2242, "endOffset": 2438, "count": 5 },
            { "startOffset": 2349, "endOffset": 2410, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "toString",
          "ranges": [{ "startOffset": 2442, "endOffset": 2483, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "compare",
          "ranges": [
            { "startOffset": 2487, "endOffset": 2877, "count": 3 },
            { "startOffset": 2604, "endOffset": 2747, "count": 0 },
            { "startOffset": 2789, "endOffset": 2811, "count": 0 },
            { "startOffset": 2848, "endOffset": 2873, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "compareMain",
          "ranges": [
            { "startOffset": 2881, "endOffset": 3172, "count": 3 },
            { "startOffset": 2939, "endOffset": 2992, "count": 0 },
            { "startOffset": 3057, "endOffset": 3109, "count": 1 },
            { "startOffset": 3110, "endOffset": 3162, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "comparePre",
          "ranges": [{ "startOffset": 3176, "endOffset": 4027, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "compareBuild",
          "ranges": [{ "startOffset": 4031, "endOffset": 4568, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "inc",
          "ranges": [{ "startOffset": 4721, "endOffset": 8723, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "129",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/internal/identifiers.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 410, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "compareIdentifiers",
          "ranges": [
            { "startOffset": 54, "endOffset": 278, "count": 4 },
            { "startOffset": 195, "endOffset": 198, "count": 1 },
            { "startOffset": 203, "endOffset": 276, "count": 3 },
            { "startOffset": 221, "endOffset": 225, "count": 0 },
            { "startOffset": 248, "endOffset": 251, "count": 0 },
            { "startOffset": 264, "endOffset": 268, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "rcompareIdentifiers",
          "ranges": [{ "startOffset": 308, "endOffset": 342, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "130",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/functions/neq.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 114, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "neq",
          "ranges": [{ "startOffset": 49, "endOffset": 92, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "131",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/functions/gt.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 110, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "gt",
          "ranges": [{ "startOffset": 48, "endOffset": 89, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "132",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/functions/gte.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 113, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "gte",
          "ranges": [{ "startOffset": 49, "endOffset": 91, "count": 2 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "133",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/functions/lt.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 110, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "lt",
          "ranges": [{ "startOffset": 48, "endOffset": 89, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "134",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/functions/lte.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 113, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "lte",
          "ranges": [{ "startOffset": 49, "endOffset": 91, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "135",
      "url": "file:///usr/local/lib/node_modules/npm/lib/cli/exit-handler.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 5238, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 135, "endOffset": 5207, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get #hasNpm",
          "ranges": [{ "startOffset": 259, "endOffset": 302, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get #loaded",
          "ranges": [{ "startOffset": 306, "endOffset": 357, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get #showExitErrorMessage",
          "ranges": [
            { "startOffset": 361, "endOffset": 528, "count": 1 },
            { "startOffset": 415, "endOffset": 441, "count": 0 },
            { "startOffset": 465, "endOffset": 490, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get #notLoadedOrExited",
          "ranges": [
            { "startOffset": 532, "endOffset": 605, "count": 1 },
            { "startOffset": 585, "endOffset": 601, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "setNpm",
          "ranges": [{ "startOffset": 609, "endOffset": 647, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "ExitHandler",
          "ranges": [{ "startOffset": 651, "endOffset": 771, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "registerUncaughtHandlers",
          "ranges": [{ "startOffset": 775, "endOffset": 929, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "exit",
          "ranges": [{ "startOffset": 933, "endOffset": 975, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "#handleProcesExitAndReset",
          "ranges": [{ "startOffset": 1007, "endOffset": 1492, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "#handleProcessExit",
          "ranges": [
            { "startOffset": 1496, "endOffset": 2936, "count": 1 },
            { "startOffset": 1635, "endOffset": 1659, "count": 0 },
            { "startOffset": 1732, "endOffset": 1933, "count": 0 },
            { "startOffset": 1966, "endOffset": 1986, "count": 0 },
            { "startOffset": 2324, "endOffset": 2413, "count": 0 },
            { "startOffset": 2438, "endOffset": 2705, "count": 0 },
            { "startOffset": 2760, "endOffset": 2803, "count": 0 },
            { "startOffset": 2875, "endOffset": 2932, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#logConsoleError",
          "ranges": [{ "startOffset": 2940, "endOffset": 3533, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#logNoNpmError",
          "ranges": [
            { "startOffset": 3537, "endOffset": 3865, "count": 2 },
            { "startOffset": 3608, "endOffset": 3864, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#handleExit",
          "ranges": [
            { "startOffset": 3883, "endOffset": 5205, "count": 1 },
            { "startOffset": 3974, "endOffset": 4071, "count": 0 },
            { "startOffset": 4304, "endOffset": 4495, "count": 0 },
            { "startOffset": 4529, "endOffset": 4544, "count": 0 },
            { "startOffset": 4554, "endOffset": 4561, "count": 0 },
            { "startOffset": 4822, "endOffset": 4832, "count": 0 },
            { "startOffset": 4867, "endOffset": 4870, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 5114, "endOffset": 5200, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 5151, "endOffset": 5199, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "136",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/proc-log/lib/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 3380, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "standard",
          "ranges": [{ "startOffset": 296, "endOffset": 379, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "error",
          "ranges": [{ "startOffset": 392, "endOffset": 472, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "buffer",
          "ranges": [{ "startOffset": 486, "endOffset": 567, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "flush",
          "ranges": [{ "startOffset": 580, "endOffset": 660, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "error",
          "ranges": [{ "startOffset": 1103, "endOffset": 1180, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "notice",
          "ranges": [{ "startOffset": 1194, "endOffset": 1272, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "warn",
          "ranges": [{ "startOffset": 1284, "endOffset": 1360, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "info",
          "ranges": [{ "startOffset": 1372, "endOffset": 1448, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "verbose",
          "ranges": [{ "startOffset": 1463, "endOffset": 1542, "count": 10 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "http",
          "ranges": [{ "startOffset": 1554, "endOffset": 1630, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "silly",
          "ranges": [{ "startOffset": 1643, "endOffset": 1720, "count": 6 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "timing",
          "ranges": [{ "startOffset": 1734, "endOffset": 1812, "count": 10 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "pause",
          "ranges": [{ "startOffset": 1825, "endOffset": 1886, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "resume",
          "ranges": [{ "startOffset": 1900, "endOffset": 1962, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "start",
          "ranges": [
            { "startOffset": 2098, "endOffset": 2447, "count": 10 },
            { "startOffset": 2279, "endOffset": 2424, "count": 8 },
            { "startOffset": 2322, "endOffset": 2336, "count": 7 },
            { "startOffset": 2338, "endOffset": 2383, "count": 7 },
            { "startOffset": 2383, "endOffset": 2424, "count": 1 },
            { "startOffset": 2424, "endOffset": 2446, "count": 2 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "end",
          "ranges": [{ "startOffset": 2168, "endOffset": 2242, "count": 9 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "end",
          "ranges": [{ "startOffset": 2458, "endOffset": 2528, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "start",
          "ranges": [
            { "startOffset": 2699, "endOffset": 3032, "count": 1 },
            { "startOffset": 2864, "endOffset": 3009, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "end",
          "ranges": [{ "startOffset": 2758, "endOffset": 2827, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "end",
          "ranges": [{ "startOffset": 3043, "endOffset": 3104, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "read",
          "ranges": [{ "startOffset": 3116, "endOffset": 3371, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "137",
      "url": "file:///usr/local/lib/node_modules/npm/lib/utils/error-message.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 14951, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "errorMessage",
          "ranges": [{ "startOffset": 200, "endOffset": 12706, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getExitCodeFromError",
          "ranges": [{ "startOffset": 12737, "endOffset": 12880, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getError",
          "ranges": [{ "startOffset": 12899, "endOffset": 14876, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "138",
      "url": "node:internal/modules/esm/resolve",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 46464, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emitTrailingSlashPatternDeprecation",
          "ranges": [{ "startOffset": 2799, "endOffset": 3432, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emitInvalidSegmentDeprecation",
          "ranges": [{ "startOffset": 3945, "endOffset": 4687, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emitLegacyIndexDeprecation",
          "ranges": [{ "startOffset": 5124, "endOffset": 6304, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "legacyMainResolve",
          "ranges": [{ "startOffset": 7395, "endOffset": 8155, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "finalizeResolution",
          "ranges": [
            { "startOffset": 8939, "endOffset": 10695, "count": 6 },
            { "startOffset": 9075, "endOffset": 9326, "count": 0 },
            { "startOffset": 9388, "endOffset": 9572, "count": 0 },
            { "startOffset": 9661, "endOffset": 9697, "count": 0 },
            { "startOffset": 9763, "endOffset": 9953, "count": 0 },
            { "startOffset": 9976, "endOffset": 10354, "count": 0 },
            { "startOffset": 10600, "endOffset": 10605, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "importNotDefined",
          "ranges": [{ "startOffset": 11109, "endOffset": 11320, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "exportsNotFound",
          "ranges": [{ "startOffset": 11716, "endOffset": 11911, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "throwInvalidSubpath",
          "ranges": [{ "startOffset": 12549, "endOffset": 12932, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "invalidPackageTarget",
          "ranges": [{ "startOffset": 13388, "endOffset": 13766, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "resolvePackageTargetString",
          "ranges": [
            { "startOffset": 15122, "endOffset": 17861, "count": 23 },
            { "startOffset": 15291, "endOffset": 15302, "count": 0 },
            { "startOffset": 15303, "endOffset": 15339, "count": 0 },
            { "startOffset": 15341, "endOffset": 15425, "count": 0 },
            { "startOffset": 15475, "endOffset": 16018, "count": 0 },
            { "startOffset": 16110, "endOffset": 16720, "count": 0 },
            { "startOffset": 16939, "endOffset": 17023, "count": 0 },
            { "startOffset": 17067, "endOffset": 17860, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 15793, "endOffset": 15806, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 16319, "endOffset": 16332, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 16465, "endOffset": 16478, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 17202, "endOffset": 17215, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 17442, "endOffset": 17455, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 17795, "endOffset": 17808, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isArrayIndex",
          "ranges": [
            { "startOffset": 18053, "endOffset": 18197, "count": 72 },
            { "startOffset": 18149, "endOffset": 18194, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "resolvePackageTarget",
          "ranges": [
            { "startOffset": 18992, "endOffset": 21242, "count": 59 },
            { "startOffset": 19185, "endOffset": 19339, "count": 23 },
            { "startOffset": 19339, "endOffset": 21125, "count": 36 },
            { "startOffset": 19371, "endOffset": 20217, "count": 0 },
            { "startOffset": 20370, "endOffset": 20598, "count": 72 },
            { "startOffset": 20428, "endOffset": 20592, "count": 0 },
            { "startOffset": 20641, "endOffset": 21050, "count": 69 },
            { "startOffset": 20698, "endOffset": 20720, "count": 52 },
            { "startOffset": 20722, "endOffset": 21044, "count": 36 },
            { "startOffset": 20993, "endOffset": 21006, "count": 0 },
            { "startOffset": 21050, "endOffset": 21125, "count": 0 },
            { "startOffset": 21125, "endOffset": 21241, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "isConditionalExportsMainSugar",
          "ranges": [
            { "startOffset": 21526, "endOffset": 22469, "count": 21 },
            { "startOffset": 21632, "endOffset": 21656, "count": 20 },
            { "startOffset": 21658, "endOffset": 21674, "count": 1 },
            { "startOffset": 21674, "endOffset": 21728, "count": 20 },
            { "startOffset": 21730, "endOffset": 21747, "count": 0 },
            { "startOffset": 21747, "endOffset": 21887, "count": 20 },
            { "startOffset": 21887, "endOffset": 22438, "count": 43 },
            { "startOffset": 21997, "endOffset": 22054, "count": 20 },
            { "startOffset": 22054, "endOffset": 22434, "count": 23 },
            { "startOffset": 22110, "endOffset": 22434, "count": 0 },
            { "startOffset": 22438, "endOffset": 22468, "count": 20 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "packageExportsResolve",
          "ranges": [
            { "startOffset": 22966, "endOffset": 25541, "count": 21 },
            { "startOffset": 23174, "endOffset": 23211, "count": 2 },
            { "startOffset": 23613, "endOffset": 23687, "count": 0 },
            { "startOffset": 23718, "endOffset": 25540, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "patternKeyCompare",
          "ranges": [{ "startOffset": 25915, "endOffset": 26470, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "packageImportsResolve",
          "ranges": [
            { "startOffset": 26957, "endOffset": 29414, "count": 2 },
            { "startOffset": 27119, "endOffset": 27272, "count": 0 },
            { "startOffset": 27856, "endOffset": 29348, "count": 0 },
            { "startOffset": 29358, "endOffset": 29413, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getPackageType",
          "ranges": [{ "startOffset": 29528, "endOffset": 29641, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "parsePackageName",
          "ranges": [
            { "startOffset": 29806, "endOffset": 30864, "count": 2 },
            { "startOffset": 29997, "endOffset": 30225, "count": 0 },
            { "startOffset": 30287, "endOffset": 30339, "count": 0 },
            { "startOffset": 30512, "endOffset": 30547, "count": 0 },
            { "startOffset": 30574, "endOffset": 30693, "count": 0 },
            { "startOffset": 30754, "endOffset": 30807, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "packageResolve",
          "ranges": [
            { "startOffset": 31188, "endOffset": 33260, "count": 2 },
            { "startOffset": 31302, "endOffset": 31348, "count": 0 },
            { "startOffset": 31686, "endOffset": 31803, "count": 0 },
            { "startOffset": 31978, "endOffset": 33045, "count": 6 },
            { "startOffset": 32237, "endOffset": 32514, "count": 4 },
            { "startOffset": 32314, "endOffset": 32351, "count": 0 },
            { "startOffset": 32514, "endOffset": 32812, "count": 2 },
            { "startOffset": 32812, "endOffset": 33045, "count": 0 },
            { "startOffset": 33045, "endOffset": 33259, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "isBareSpecifier",
          "ranges": [{ "startOffset": 33371, "endOffset": 33481, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isRelativeSpecifier",
          "ranges": [
            { "startOffset": 33600, "endOffset": 33879, "count": 18 },
            { "startOffset": 33670, "endOffset": 33861, "count": 4 },
            { "startOffset": 33744, "endOffset": 33857, "count": 0 },
            { "startOffset": 33861, "endOffset": 33878, "count": 14 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "shouldBeTreatedAsRelativeOrAbsolutePath",
          "ranges": [
            { "startOffset": 34028, "endOffset": 34219, "count": 18 },
            { "startOffset": 34114, "endOffset": 34131, "count": 0 },
            { "startOffset": 34160, "endOffset": 34176, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "moduleResolve",
          "ranges": [
            { "startOffset": 34582, "endOffset": 35954, "count": 6 },
            { "startOffset": 34773, "endOffset": 34792, "count": 0 },
            { "startOffset": 35095, "endOffset": 35319, "count": 2 },
            { "startOffset": 35156, "endOffset": 35315, "count": 0 },
            { "startOffset": 35319, "endOffset": 35825, "count": 4 },
            { "startOffset": 35375, "endOffset": 35825, "count": 2 },
            { "startOffset": 35543, "endOffset": 35598, "count": 0 },
            { "startOffset": 35600, "endOffset": 35753, "count": 0 },
            { "startOffset": 35863, "endOffset": 35889, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "resolveAsCommonJS",
          "ranges": [{ "startOffset": 36154, "endOffset": 37980, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "checkIfDisallowedImport",
          "ranges": [
            { "startOffset": 38360, "endOffset": 39732, "count": 12 },
            { "startOffset": 38666, "endOffset": 39726, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "throwIfInvalidParentURL",
          "ranges": [
            { "startOffset": 39872, "endOffset": 40145, "count": 12 },
            { "startOffset": 39949, "endOffset": 40000, "count": 0 },
            { "startOffset": 40037, "endOffset": 40057, "count": 0 },
            { "startOffset": 40059, "endOffset": 40143, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "defaultResolve",
          "ranges": [
            { "startOffset": 40769, "endOffset": 44767, "count": 12 },
            { "startOffset": 40926, "endOffset": 40936, "count": 0 },
            { "startOffset": 40938, "endOffset": 41747, "count": 0 },
            { "startOffset": 41851, "endOffset": 41890, "count": 0 },
            { "startOffset": 41988, "endOffset": 42047, "count": 2 },
            { "startOffset": 42047, "endOffset": 42095, "count": 10 },
            { "startOffset": 42095, "endOffset": 42230, "count": 8 },
            { "startOffset": 42230, "endOffset": 42275, "count": 0 },
            { "startOffset": 42276, "endOffset": 42311, "count": 0 },
            { "startOffset": 42313, "endOffset": 42476, "count": 0 },
            { "startOffset": 42476, "endOffset": 42639, "count": 8 },
            { "startOffset": 42543, "endOffset": 42631, "count": 0 },
            { "startOffset": 42646, "endOffset": 42705, "count": 0 },
            { "startOffset": 42710, "endOffset": 42825, "count": 4 },
            { "startOffset": 42775, "endOffset": 42797, "count": 0 },
            { "startOffset": 43159, "endOffset": 43182, "count": 0 },
            { "startOffset": 43255, "endOffset": 43265, "count": 0 },
            { "startOffset": 43295, "endOffset": 43401, "count": 6 },
            { "startOffset": 43401, "endOffset": 43908, "count": 0 },
            { "startOffset": 43908, "endOffset": 44064, "count": 6 },
            { "startOffset": 44064, "endOffset": 44086, "count": 0 },
            { "startOffset": 44087, "endOffset": 44105, "count": 6 },
            { "startOffset": 44118, "endOffset": 44541, "count": 0 },
            { "startOffset": 44541, "endOffset": 44766, "count": 6 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "decorateErrorWithCommonJSHints",
          "ranges": [{ "startOffset": 45030, "endOffset": 45643, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "defaultResolve",
          "ranges": [{ "startOffset": 46069, "endOffset": 46460, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "139",
      "url": "node:internal/modules/esm/package_config",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2215, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getPackageScopeConfig",
          "ranges": [
            { "startOffset": 1072, "endOffset": 2165, "count": 10 },
            { "startOffset": 1190, "endOffset": 1910, "count": 27 },
            { "startOffset": 1324, "endOffset": 1344, "count": 0 },
            { "startOffset": 1534, "endOffset": 1569, "count": 10 },
            { "startOffset": 1569, "endOffset": 1886, "count": 17 },
            { "startOffset": 1886, "endOffset": 1906, "count": 0 },
            { "startOffset": 1910, "endOffset": 2164, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "140",
      "url": "node:internal/modules/esm/get_format",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 8075, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "node:",
          "ranges": [{ "startOffset": 1056, "endOffset": 1087, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "detectModuleFormat",
          "ranges": [{ "startOffset": 1255, "endOffset": 1496, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getDataProtocolModuleFormat",
          "ranges": [{ "startOffset": 1557, "endOffset": 1773, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "extname",
          "ranges": [
            { "startOffset": 2048, "endOffset": 2407, "count": 6 },
            { "startOffset": 2148, "endOffset": 2392, "count": 18 },
            { "startOffset": 2210, "endOffset": 2245, "count": 0 },
            { "startOffset": 2253, "endOffset": 2382, "count": 6 },
            { "startOffset": 2341, "endOffset": 2345, "count": 0 },
            { "startOffset": 2392, "endOffset": 2406, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "underNodeModules",
          "ranges": [{ "startOffset": 2637, "endOffset": 2858, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "warnTypelessPackageJsonFile",
          "ranges": [{ "startOffset": 2901, "endOffset": 3528, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getFileProtocolModuleFormat",
          "ranges": [
            { "startOffset": 3669, "endOffset": 6736, "count": 6 },
            { "startOffset": 4004, "endOffset": 4496, "count": 0 },
            { "startOffset": 4503, "endOffset": 4626, "count": 0 },
            { "startOffset": 4633, "endOffset": 5411, "count": 0 },
            { "startOffset": 5421, "endOffset": 6735, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getHttpProtocolModuleFormat",
          "ranges": [{ "startOffset": 6872, "endOffset": 7217, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "defaultGetFormatWithoutErrors",
          "ranges": [
            { "startOffset": 7362, "endOffset": 7597, "count": 6 },
            { "startOffset": 7516, "endOffset": 7538, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "defaultGetFormat",
          "ranges": [{ "startOffset": 7742, "endOffset": 7965, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "141",
      "url": "node:internal/modules/esm/formats",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1798, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "mimeToFormat",
          "ranges": [{ "startOffset": 660, "endOffset": 998, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getFormatOfExtensionlessFile",
          "ranges": [{ "startOffset": 1368, "endOffset": 1704, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "142",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/redact/lib/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1093, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "redact",
          "ranges": [
            { "startOffset": 127, "endOffset": 355, "count": 5 },
            { "startOffset": 183, "endOffset": 205, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "splitAndRedact",
          "ranges": [
            { "startOffset": 432, "endOffset": 763, "count": 5 },
            { "startOffset": 616, "endOffset": 717, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "redactLog",
          "ranges": [
            { "startOffset": 846, "endOffset": 1047, "count": 2 },
            { "startOffset": 888, "endOffset": 924, "count": 0 },
            { "startOffset": 1032, "endOffset": 1046, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 975, "endOffset": 1027, "count": 5 },
            { "startOffset": 1024, "endOffset": 1027, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "143",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/redact/lib/matchers.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1833, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "predicate",
          "ranges": [{ "startOffset": 879, "endOffset": 932, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "predicate",
          "ranges": [{ "startOffset": 1052, "endOffset": 1102, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "predicate",
          "ranges": [{ "startOffset": 1212, "endOffset": 1251, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "replacement",
          "ranges": [{ "startOffset": 1268, "endOffset": 1386, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "predicate",
          "ranges": [{ "startOffset": 1450, "endOffset": 1490, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "replacement",
          "ranges": [{ "startOffset": 1507, "endOffset": 1604, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "144",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/redact/lib/utils.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 5744, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "asterisk",
          "ranges": [{ "startOffset": 204, "endOffset": 363, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "escapeRegExp",
          "ranges": [{ "startOffset": 529, "endOffset": 600, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "urlEncodeRegexGroup",
          "ranges": [{ "startOffset": 695, "endOffset": 896, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "urlEncodeRegexTag",
          "ranges": [{ "startOffset": 1016, "endOffset": 1246, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "redactUrlHostnameMatcher",
          "ranges": [{ "startOffset": 1337, "endOffset": 1615, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "redactUrlSearchParamsMatcher",
          "ranges": [{ "startOffset": 1733, "endOffset": 1979, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "redactUrlPasswordMatcher",
          "ranges": [
            { "startOffset": 2070, "endOffset": 2304, "count": 5 },
            { "startOffset": 2285, "endOffset": 2298, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "predicate",
          "ranges": [{ "startOffset": 2130, "endOffset": 2155, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "pattern",
          "ranges": [{ "startOffset": 2168, "endOffset": 2251, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "redactUrlReplacement",
          "ranges": [{ "startOffset": 2335, "endOffset": 2511, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "redactUrlMatcher",
          "ranges": [{ "startOffset": 3066, "endOffset": 3173, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "matcherFunctions",
          "ranges": [{ "startOffset": 3218, "endOffset": 3373, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "matcherFunctions",
          "ranges": [{ "startOffset": 3389, "endOffset": 3800, "count": 5 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 3402, "endOffset": 3800, "count": 5 },
            { "startOffset": 3492, "endOffset": 3497, "count": 0 },
            { "startOffset": 3641, "endOffset": 3723, "count": 0 },
            { "startOffset": 3779, "endOffset": 3799, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "matcherFunctions",
          "ranges": [{ "startOffset": 3817, "endOffset": 4208, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "redactMatcher",
          "ranges": [{ "startOffset": 4275, "endOffset": 4340, "count": 5 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "redactMatchers",
          "ranges": [{ "startOffset": 4416, "endOffset": 4664, "count": 5 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4433, "endOffset": 4664, "count": 5 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 4519, "endOffset": 4654, "count": 5 },
            { "startOffset": 4589, "endOffset": 4598, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "redactDynamicReplacement",
          "ranges": [{ "startOffset": 4839, "endOffset": 4996, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "redactFixedReplacement",
          "ranges": [{ "startOffset": 5160, "endOffset": 5295, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "redactUrlPassword",
          "ranges": [{ "startOffset": 5323, "endOffset": 5424, "count": 5 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "145",
      "url": "file:///usr/local/lib/node_modules/npm/lib/npm.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 14095, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 713, "endOffset": 14072, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get version",
          "ranges": [{ "startOffset": 734, "endOffset": 777, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "cmd",
          "ranges": [
            { "startOffset": 788, "endOffset": 1028, "count": 2 },
            { "startOffset": 845, "endOffset": 977, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Npm",
          "ranges": [{ "startOffset": 2148, "endOffset": 2573, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "load",
          "ranges": [
            { "startOffset": 2577, "endOffset": 2752, "count": 1 },
            { "startOffset": 2683, "endOffset": 2751, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2657, "endOffset": 2675, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "#load",
          "ranges": [
            { "startOffset": 2756, "endOffset": 7526, "count": 1 },
            { "startOffset": 3268, "endOffset": 3350, "count": 0 },
            { "startOffset": 4262, "endOffset": 4267, "count": 0 },
            { "startOffset": 4411, "endOffset": 4483, "count": 0 },
            { "startOffset": 7233, "endOffset": 7259, "count": 0 },
            { "startOffset": 7261, "endOffset": 7345, "count": 0 },
            { "startOffset": 7381, "endOffset": 7457, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 2816, "endOffset": 3128, "count": 1 },
            { "startOffset": 3003, "endOffset": 3122, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2920, "endOffset": 2928, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3175, "endOffset": 3199, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4788, "endOffset": 4917, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4857, "endOffset": 4916, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 5128, "endOffset": 5269, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 5204, "endOffset": 5268, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 5620, "endOffset": 6499, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "exec",
          "ranges": [
            { "startOffset": 7530, "endOffset": 7792, "count": 2 },
            { "startOffset": 7591, "endOffset": 7740, "count": 1 },
            { "startOffset": 7663, "endOffset": 7698, "count": 0 },
            { "startOffset": 7740, "endOffset": 7788, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#exec",
          "ranges": [
            { "startOffset": 7821, "endOffset": 9145, "count": 2 },
            { "startOffset": 8103, "endOffset": 8185, "count": 1 },
            { "startOffset": 8221, "endOffset": 8272, "count": 0 },
            { "startOffset": 8734, "endOffset": 8815, "count": 0 },
            { "startOffset": 8847, "endOffset": 8986, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 9062, "endOffset": 9140, "count": 2 },
            { "startOffset": 9120, "endOffset": 9140, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "unload",
          "ranges": [{ "startOffset": 9306, "endOffset": 9392, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "finish",
          "ranges": [{ "startOffset": 9396, "endOffset": 9899, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "exitErrorMessage",
          "ranges": [{ "startOffset": 9903, "endOffset": 10484, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#handleError",
          "ranges": [
            { "startOffset": 10488, "endOffset": 10896, "count": 1 },
            { "startOffset": 10528, "endOffset": 10832, "count": 0 },
            { "startOffset": 10869, "endOffset": 10892, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 10719, "endOffset": 10733, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 10750, "endOffset": 10760, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#getError",
          "ranges": [{ "startOffset": 10900, "endOffset": 11621, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get title",
          "ranges": [{ "startOffset": 11625, "endOffset": 11666, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get loaded",
          "ranges": [{ "startOffset": 11670, "endOffset": 11719, "count": 5 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get version",
          "ranges": [{ "startOffset": 11723, "endOffset": 11779, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get command",
          "ranges": [
            { "startOffset": 11783, "endOffset": 11834, "count": 9 },
            { "startOffset": 11824, "endOffset": 11830, "count": 5 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get flatOptions",
          "ranges": [
            { "startOffset": 11838, "endOffset": 12051, "count": 6 },
            { "startOffset": 11987, "endOffset": 12031, "count": 2 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get color",
          "ranges": [{ "startOffset": 12257, "endOffset": 12309, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get logColor",
          "ranges": [{ "startOffset": 12313, "endOffset": 12371, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get noColorChalk",
          "ranges": [{ "startOffset": 12375, "endOffset": 12439, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get chalk",
          "ranges": [{ "startOffset": 12443, "endOffset": 12499, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get logChalk",
          "ranges": [{ "startOffset": 12503, "endOffset": 12562, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get global",
          "ranges": [{ "startOffset": 12566, "endOffset": 12666, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get silent",
          "ranges": [{ "startOffset": 12670, "endOffset": 12724, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get lockfileVersion",
          "ranges": [{ "startOffset": 12728, "endOffset": 12769, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get started",
          "ranges": [{ "startOffset": 12773, "endOffset": 12825, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get logFiles",
          "ranges": [{ "startOffset": 12829, "endOffset": 12881, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get #logsDir",
          "ranges": [{ "startOffset": 12885, "endOffset": 12974, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get logPath",
          "ranges": [{ "startOffset": 12978, "endOffset": 13051, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get npmRoot",
          "ranges": [{ "startOffset": 13055, "endOffset": 13100, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get cache",
          "ranges": [{ "startOffset": 13104, "endOffset": 13158, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get globalPrefix",
          "ranges": [{ "startOffset": 13162, "endOffset": 13223, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get localPrefix",
          "ranges": [{ "startOffset": 13227, "endOffset": 13286, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get localPackage",
          "ranges": [{ "startOffset": 13290, "endOffset": 13351, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get globalDir",
          "ranges": [{ "startOffset": 13355, "endOffset": 13526, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get localDir",
          "ranges": [{ "startOffset": 13530, "endOffset": 13604, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get dir",
          "ranges": [{ "startOffset": 13608, "endOffset": 13680, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get globalBin",
          "ranges": [{ "startOffset": 13684, "endOffset": 13802, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get localBin",
          "ranges": [{ "startOffset": 13806, "endOffset": 13864, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get bin",
          "ranges": [{ "startOffset": 13868, "endOffset": 13940, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get prefix",
          "ranges": [{ "startOffset": 13944, "endOffset": 14025, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get usage",
          "ranges": [{ "startOffset": 14029, "endOffset": 14070, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "146",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/config/lib/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 28888, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "fileExists",
          "ranges": [{ "startOffset": 429, "endOffset": 509, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 467, "endOffset": 486, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 497, "endOffset": 508, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "dirExists",
          "ranges": [{ "startOffset": 529, "endOffset": 614, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "hasOwnProperty",
          "ranges": [{ "startOffset": 639, "endOffset": 701, "count": 42 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 1127, "endOffset": 27872, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get typeDefs",
          "ranges": [{ "startOffset": 1255, "endOffset": 1296, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Config",
          "ranges": [
            { "startOffset": 1300, "endOffset": 3191, "count": 1 },
            { "startOffset": 1814, "endOffset": 1994, "count": 155 },
            { "startOffset": 1904, "endOffset": 1988, "count": 18 },
            { "startOffset": 2716, "endOffset": 2783, "count": 7 },
            { "startOffset": 3095, "endOffset": 3132, "count": 7 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Config.data.set",
          "ranges": [{ "startOffset": 2805, "endOffset": 2888, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Config.data.delete",
          "ranges": [{ "startOffset": 2912, "endOffset": 2995, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get loaded",
          "ranges": [{ "startOffset": 3195, "endOffset": 3238, "count": 89 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get prefix",
          "ranges": [{ "startOffset": 3242, "endOffset": 3331, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "find",
          "ranges": [{ "startOffset": 3380, "endOffset": 3760, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [
            { "startOffset": 3764, "endOffset": 3915, "count": 83 },
            { "startOffset": 3805, "endOffset": 3878, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#get",
          "ranges": [
            { "startOffset": 4029, "endOffset": 4311, "count": 97 },
            { "startOffset": 4079, "endOffset": 4103, "count": 42 },
            { "startOffset": 4105, "endOffset": 4177, "count": 0 },
            { "startOffset": 4219, "endOffset": 4227, "count": 55 },
            { "startOffset": 4255, "endOffset": 4283, "count": 42 },
            { "startOffset": 4284, "endOffset": 4295, "count": 57 },
            { "startOffset": 4296, "endOffset": 4307, "count": 40 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 4315, "endOffset": 4956, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get flat",
          "ranges": [
            { "startOffset": 4960, "endOffset": 5458, "count": 6 },
            { "startOffset": 5001, "endOffset": 5039, "count": 5 },
            { "startOffset": 5039, "endOffset": 5269, "count": 1 },
            { "startOffset": 5269, "endOffset": 5321, "count": 7 },
            { "startOffset": 5321, "endOffset": 5457, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "delete",
          "ranges": [{ "startOffset": 5462, "endOffset": 5849, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "load",
          "ranges": [
            { "startOffset": 5853, "endOffset": 6861, "count": 1 },
            { "startOffset": 5890, "endOffset": 5967, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "loadDefaults",
          "ranges": [
            { "startOffset": 6865, "endOffset": 8253, "count": 1 },
            { "startOffset": 7131, "endOffset": 7346, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 7949, "endOffset": 7996, "count": 5 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 8004, "endOffset": 8191, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "loadHome",
          "ranges": [
            { "startOffset": 8257, "endOffset": 8317, "count": 1 },
            { "startOffset": 8301, "endOffset": 8313, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "loadGlobalPrefix",
          "ranges": [
            { "startOffset": 8321, "endOffset": 8944, "count": 1 },
            { "startOffset": 8370, "endOffset": 8451, "count": 0 },
            { "startOffset": 8478, "endOffset": 8527, "count": 0 },
            { "startOffset": 8564, "endOffset": 8666, "count": 0 },
            { "startOffset": 8855, "endOffset": 8934, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "loadEnv",
          "ranges": [
            { "startOffset": 8948, "endOffset": 9469, "count": 1 },
            { "startOffset": 9059, "endOffset": 9416, "count": 52 },
            { "startOffset": 9101, "endOffset": 9117, "count": 1 },
            { "startOffset": 9119, "endOffset": 9145, "count": 51 },
            { "startOffset": 9145, "endOffset": 9416, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "loadCLI",
          "ranges": [{ "startOffset": 9473, "endOffset": 9808, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "nopt.invalidHandler",
          "ranges": [{ "startOffset": 9512, "endOffset": 9600, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get valid",
          "ranges": [{ "startOffset": 9812, "endOffset": 10013, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "validate",
          "ranges": [
            { "startOffset": 10017, "endOffset": 12726, "count": 10 },
            { "startOffset": 10052, "endOffset": 12428, "count": 2 },
            { "startOffset": 10157, "endOffset": 12255, "count": 14 },
            { "startOffset": 10326, "endOffset": 10353, "count": 12 },
            { "startOffset": 10354, "endOffset": 10377, "count": 10 },
            { "startOffset": 10379, "endOffset": 10409, "count": 6 },
            { "startOffset": 10409, "endOffset": 10484, "count": 8 },
            { "startOffset": 10550, "endOffset": 12247, "count": 6 },
            { "startOffset": 10906, "endOffset": 11056, "count": 12 },
            { "startOffset": 10951, "endOffset": 11044, "count": 0 },
            { "startOffset": 11501, "endOffset": 12237, "count": 24 },
            { "startOffset": 11546, "endOffset": 12225, "count": 0 },
            { "startOffset": 12288, "endOffset": 12402, "count": 0 },
            { "startOffset": 12428, "endOffset": 12722, "count": 8 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "nopt.invalidHandler",
          "ranges": [{ "startOffset": 12529, "endOffset": 12607, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "repair",
          "ranges": [{ "startOffset": 12884, "endOffset": 13857, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isDefault",
          "ranges": [{ "startOffset": 14066, "endOffset": 14375, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "invalidHandler",
          "ranges": [{ "startOffset": 14379, "endOffset": 15415, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#getOneOfKeywords",
          "ranges": [{ "startOffset": 15419, "endOffset": 15786, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#loadObject",
          "ranges": [
            { "startOffset": 15790, "endOffset": 17108, "count": 7 },
            { "startOffset": 15941, "endOffset": 16092, "count": 0 },
            { "startOffset": 16128, "endOffset": 16291, "count": 0 },
            { "startOffset": 16366, "endOffset": 16508, "count": 4 },
            { "startOffset": 16426, "endOffset": 16502, "count": 0 },
            { "startOffset": 16508, "endOffset": 17104, "count": 3 },
            { "startOffset": 16591, "endOffset": 17098, "count": 157 },
            { "startOffset": 16714, "endOffset": 17065, "count": 1 },
            { "startOffset": 16799, "endOffset": 17055, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#checkDeprecated",
          "ranges": [
            { "startOffset": 17112, "endOffset": 17273, "count": 1 },
            { "startOffset": 17210, "endOffset": 17269, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "parseField",
          "ranges": [
            { "startOffset": 17337, "endOffset": 17432, "count": 157 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#loadFile",
          "ranges": [{ "startOffset": 17436, "endOffset": 18079, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 17629, "endOffset": 18017, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 18025, "endOffset": 18069, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "loadBuiltinConfig",
          "ranges": [{ "startOffset": 18083, "endOffset": 18178, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "loadProjectConfig",
          "ranges": [
            { "startOffset": 18182, "endOffset": 19569, "count": 1 },
            { "startOffset": 18573, "endOffset": 18657, "count": 0 },
            { "startOffset": 18735, "endOffset": 18895, "count": 0 },
            { "startOffset": 19410, "endOffset": 19565, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "loadLocalPrefix",
          "ranges": [
            { "startOffset": 19573, "endOffset": 22052, "count": 1 },
            { "startOffset": 19668, "endOffset": 19723, "count": 0 },
            { "startOffset": 19900, "endOffset": 21978, "count": 3 },
            { "startOffset": 20072, "endOffset": 20093, "count": 0 },
            { "startOffset": 20095, "endOffset": 20118, "count": 0 },
            { "startOffset": 20214, "endOffset": 20271, "count": 1 },
            { "startOffset": 20233, "endOffset": 20271, "count": 0 },
            { "startOffset": 20273, "endOffset": 20566, "count": 1 },
            { "startOffset": 20472, "endOffset": 20500, "count": 0 },
            { "startOffset": 20566, "endOffset": 20612, "count": 2 },
            { "startOffset": 20614, "endOffset": 21972, "count": 1 },
            { "startOffset": 21020, "endOffset": 21050, "count": 0 },
            { "startOffset": 21411, "endOffset": 21518, "count": 0 },
            { "startOffset": 21964, "endOffset": 21972, "count": 0 },
            { "startOffset": 21978, "endOffset": 22048, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 20965, "endOffset": 20988, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "loadUserConfig",
          "ranges": [{ "startOffset": 22056, "endOffset": 22138, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "loadGlobalConfig",
          "ranges": [{ "startOffset": 22142, "endOffset": 22230, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "save",
          "ranges": [{ "startOffset": 22234, "endOffset": 23389, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "clearCredentialsByURI",
          "ranges": [{ "startOffset": 23393, "endOffset": 24275, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setCredentialsByURI",
          "ranges": [{ "startOffset": 24279, "endOffset": 25762, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getCredentialsByURI",
          "ranges": [{ "startOffset": 25845, "endOffset": 27665, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setEnvs",
          "ranges": [{ "startOffset": 27836, "endOffset": 27870, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 27945, "endOffset": 28862, "count": 7 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "ConfigData",
          "ranges": [
            { "startOffset": 28005, "endOffset": 28128, "count": 7 },
            { "startOffset": 28066, "endOffset": 28080, "count": 6 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get data",
          "ranges": [
            { "startOffset": 28132, "endOffset": 28171, "count": 284 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get valid",
          "ranges": [{ "startOffset": 28175, "endOffset": 28217, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set source",
          "ranges": [
            { "startOffset": 28221, "endOffset": 28361, "count": 7 },
            { "startOffset": 28260, "endOffset": 28336, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get source",
          "ranges": [{ "startOffset": 28365, "endOffset": 28408, "count": 7 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "set loadError",
          "ranges": [
            { "startOffset": 28412, "endOffset": 28597, "count": 4 },
            { "startOffset": 28493, "endOffset": 28568, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get loadError",
          "ranges": [{ "startOffset": 28601, "endOffset": 28651, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set raw",
          "ranges": [
            { "startOffset": 28655, "endOffset": 28819, "count": 3 },
            { "startOffset": 28728, "endOffset": 28797, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get raw",
          "ranges": [{ "startOffset": 28823, "endOffset": 28860, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "147",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/walk-up-path/dist/cjs/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 457, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "walkUp",
          "ranges": [
            { "startOffset": 149, "endOffset": 397, "count": 1 },
            { "startOffset": 218, "endOffset": 395, "count": 3 },
            { "startOffset": 239, "endOffset": 311, "count": 2 },
            { "startOffset": 311, "endOffset": 341, "count": 0 },
            { "startOffset": 341, "endOffset": 389, "count": 2 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "148",
      "url": "node:internal/source_map/source_map_cache_map",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 3653, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 915, "endOffset": 3564, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#cleanup",
          "ranges": [{ "startOffset": 1366, "endOffset": 1740, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 2181, "endOffset": 2496, "count": 21 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2309, "endOffset": 2355, "count": 21 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 2598, "endOffset": 2826, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get size",
          "ranges": [{ "startOffset": 2979, "endOffset": 3032, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3036, "endOffset": 3562, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "149",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/ini/lib/ini.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 7123, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "encode",
          "ranges": [{ "startOffset": 60, "endOffset": 2372, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "splitSections",
          "ranges": [{ "startOffset": 2374, "endOffset": 2960, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "decode",
          "ranges": [{ "startOffset": 2977, "endOffset": 5746, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isQuoted",
          "ranges": [{ "startOffset": 5765, "endOffset": 5877, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "safe",
          "ranges": [{ "startOffset": 5892, "endOffset": 6156, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "unsafe",
          "ranges": [{ "startOffset": 6173, "endOffset": 7024, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "150",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/nopt/lib/nopt.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 955, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "nopt",
          "ranges": [
            { "startOffset": 530, "endOffset": 777, "count": 1 },
            { "startOffset": 654, "endOffset": 659, "count": 0 },
            { "startOffset": 688, "endOffset": 693, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "clean",
          "ranges": [
            { "startOffset": 779, "endOffset": 954, "count": 8 },
            { "startOffset": 883, "endOffset": 888, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "151",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/nopt/lib/nopt-lib.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 12818, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "hasOwn",
          "ranges": [{ "startOffset": 129, "endOffset": 181, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getType",
          "ranges": [
            { "startOffset": 199, "endOffset": 503, "count": 2 },
            { "startOffset": 303, "endOffset": 340, "count": 0 },
            { "startOffset": 342, "endOffset": 476, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "isTypeDef",
          "ranges": [{ "startOffset": 523, "endOffset": 557, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "hasTypeDef",
          "ranges": [{ "startOffset": 577, "endOffset": 623, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "doesNotHaveTypeDef",
          "ranges": [{ "startOffset": 651, "endOffset": 695, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "nopt",
          "ranges": [{ "startOffset": 697, "endOffset": 1344, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "value",
          "ranges": [{ "startOffset": 1222, "endOffset": 1298, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "clean",
          "ranges": [{ "startOffset": 1346, "endOffset": 4815, "count": 9 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 1973, "endOffset": 4812, "count": 2 },
            { "startOffset": 2004, "endOffset": 2024, "count": 0 },
            { "startOffset": 2258, "endOffset": 2290, "count": 0 },
            { "startOffset": 2327, "endOffset": 2377, "count": 0 },
            { "startOffset": 4503, "endOffset": 4541, "count": 0 },
            { "startOffset": 4543, "endOffset": 4648, "count": 0 },
            { "startOffset": 4667, "endOffset": 4729, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 2506, "endOffset": 4330, "count": 2 },
            { "startOffset": 2703, "endOffset": 2725, "count": 0 },
            { "startOffset": 2756, "endOffset": 2828, "count": 0 },
            { "startOffset": 2860, "endOffset": 2933, "count": 0 },
            { "startOffset": 2936, "endOffset": 3009, "count": 0 },
            { "startOffset": 3048, "endOffset": 3060, "count": 0 },
            { "startOffset": 3062, "endOffset": 3130, "count": 0 },
            { "startOffset": 3167, "endOffset": 3191, "count": 0 },
            { "startOffset": 3193, "endOffset": 3268, "count": 0 },
            { "startOffset": 3298, "endOffset": 3700, "count": 0 },
            { "startOffset": 3792, "endOffset": 3814, "count": 0 },
            { "startOffset": 3815, "endOffset": 3884, "count": 0 },
            { "startOffset": 3886, "endOffset": 3912, "count": 0 },
            { "startOffset": 4048, "endOffset": 4264, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4339, "endOffset": 4358, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "validate",
          "ranges": [
            { "startOffset": 4817, "endOffset": 6608, "count": 2 },
            { "startOffset": 4978, "endOffset": 5231, "count": 0 },
            { "startOffset": 5294, "endOffset": 5315, "count": 0 },
            { "startOffset": 5734, "endOffset": 5813, "count": 0 },
            { "startOffset": 5864, "endOffset": 5943, "count": 0 },
            { "startOffset": 6117, "endOffset": 6491, "count": 10 },
            { "startOffset": 6242, "endOffset": 6251, "count": 0 },
            { "startOffset": 6252, "endOffset": 6266, "count": 0 },
            { "startOffset": 6268, "endOffset": 6305, "count": 0 },
            { "startOffset": 6341, "endOffset": 6487, "count": 2 },
            { "startOffset": 6570, "endOffset": 6594, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "parse",
          "ranges": [
            { "startOffset": 6610, "endOffset": 10743, "count": 1 },
            { "startOffset": 7104, "endOffset": 10741, "count": 2 },
            { "startOffset": 7181, "endOffset": 7378, "count": 1 },
            { "startOffset": 7378, "endOffset": 7395, "count": 0 },
            { "startOffset": 7397, "endOffset": 10716, "count": 0 },
            { "startOffset": 10716, "endOffset": 10741, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "singleCharacters",
          "ranges": [{ "startOffset": 10804, "endOffset": 11191, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "resolveShort",
          "ranges": [{ "startOffset": 11193, "endOffset": 12712, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "152",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/abbrev/lib/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1315, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "abbrev",
          "ranges": [
            { "startOffset": 25, "endOffset": 1247, "count": 2 },
            { "startOffset": 84, "endOffset": 109, "count": 0 },
            { "startOffset": 120, "endOffset": 126, "count": 0 },
            { "startOffset": 175, "endOffset": 250, "count": 195 },
            { "startOffset": 229, "endOffset": 246, "count": 0 },
            { "startOffset": 530, "endOffset": 1228, "count": 195 },
            { "startOffset": 591, "endOffset": 596, "count": 2 },
            { "startOffset": 677, "endOffset": 699, "count": 0 },
            { "startOffset": 768, "endOffset": 1015, "count": 909 },
            { "startOffset": 842, "endOffset": 871, "count": 699 },
            { "startOffset": 904, "endOffset": 933, "count": 726 },
            { "startOffset": 957, "endOffset": 972, "count": 378 },
            { "startOffset": 974, "endOffset": 1009, "count": 168 },
            { "startOffset": 1053, "endOffset": 1108, "count": 51 },
            { "startOffset": 1108, "endOffset": 1161, "count": 144 },
            { "startOffset": 1161, "endOffset": 1224, "count": 912 },
            { "startOffset": 1224, "endOffset": 1228, "count": 144 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "lexSort",
          "ranges": [
            { "startOffset": 1249, "endOffset": 1314, "count": 532 },
            { "startOffset": 1292, "endOffset": 1295, "count": 0 },
            { "startOffset": 1304, "endOffset": 1307, "count": 431 },
            { "startOffset": 1308, "endOffset": 1312, "count": 101 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "153",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/nopt/lib/debug.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 181, "count": 1 },
            { "startOffset": 136, "endOffset": 167, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "module.exports",
          "ranges": [{ "startOffset": 138, "endOffset": 167, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "module.exports",
          "ranges": [{ "startOffset": 172, "endOffset": 180, "count": 31 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "154",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/nopt/lib/type-defs.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2030, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "validateString",
          "ranges": [{ "startOffset": 155, "endOffset": 221, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "validatePath",
          "ranges": [
            { "startOffset": 223, "endOffset": 643, "count": 2 },
            { "startOffset": 282, "endOffset": 304, "count": 0 },
            { "startOffset": 325, "endOffset": 346, "count": 0 },
            { "startOffset": 442, "endOffset": 455, "count": 0 },
            { "startOffset": 532, "endOffset": 584, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "validateNumber",
          "ranges": [{ "startOffset": 645, "endOffset": 801, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "validateDate",
          "ranges": [{ "startOffset": 803, "endOffset": 981, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "validateBoolean",
          "ranges": [{ "startOffset": 983, "endOffset": 1256, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "validateUrl",
          "ranges": [{ "startOffset": 1258, "endOffset": 1506, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "validateStream",
          "ranges": [{ "startOffset": 1508, "endOffset": 1621, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "155",
      "url": "node:os",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 8453, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getCheckedFunction",
          "ranges": [{ "startOffset": 2054, "endOffset": 2300, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "checkError",
          "ranges": [
            { "startOffset": 2113, "endOffset": 2296, "count": 3 },
            { "startOffset": 2209, "endOffset": 2276, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getOSRelease",
          "ranges": [{ "startOffset": 2682, "endOffset": 2695, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getOSType",
          "ranges": [{ "startOffset": 2744, "endOffset": 2754, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getOSVersion",
          "ranges": [{ "startOffset": 2806, "endOffset": 2819, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getMachine",
          "ranges": [{ "startOffset": 2869, "endOffset": 2882, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getAvailableParallelism.<computed>",
          "ranges": [{ "startOffset": 2930, "endOffset": 2961, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getFreeMem.<computed>",
          "ranges": [{ "startOffset": 2995, "endOffset": 3013, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getHostname.<computed>",
          "ranges": [{ "startOffset": 3048, "endOffset": 3067, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getOSVersion.<computed>",
          "ranges": [{ "startOffset": 3103, "endOffset": 3123, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getOSType.<computed>",
          "ranges": [{ "startOffset": 3156, "endOffset": 3173, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getOSRelease.<computed>",
          "ranges": [{ "startOffset": 3209, "endOffset": 3229, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getMachine.<computed>",
          "ranges": [{ "startOffset": 3263, "endOffset": 3281, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getHomeDirectory.<computed>",
          "ranges": [{ "startOffset": 3321, "endOffset": 3345, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getTotalMem.<computed>",
          "ranges": [{ "startOffset": 3380, "endOffset": 3399, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getUptime.<computed>",
          "ranges": [{ "startOffset": 3432, "endOffset": 3449, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "loadavg",
          "ranges": [{ "startOffset": 3587, "endOffset": 3687, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "cpus",
          "ranges": [{ "startOffset": 3967, "endOffset": 4396, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "arch",
          "ranges": [{ "startOffset": 4427, "endOffset": 4469, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "arch.<computed>",
          "ranges": [{ "startOffset": 4496, "endOffset": 4514, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "platform",
          "ranges": [{ "startOffset": 4546, "endOffset": 4596, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "platform.<computed>",
          "ranges": [{ "startOffset": 4627, "endOffset": 4649, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "tmpdir",
          "ranges": [{ "startOffset": 4681, "endOffset": 5286, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "tmpdir.<computed>",
          "ranges": [{ "startOffset": 5315, "endOffset": 5329, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "endianness",
          "ranges": [{ "startOffset": 5366, "endOffset": 5413, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "endianness.<computed>",
          "ranges": [{ "startOffset": 5446, "endOffset": 5463, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "networkInterfaces",
          "ranges": [
            { "startOffset": 5675, "endOffset": 6368, "count": 1 },
            { "startOffset": 5798, "endOffset": 5812, "count": 0 },
            { "startOffset": 5856, "endOffset": 6348, "count": 2 },
            { "startOffset": 6170, "endOffset": 6194, "count": 0 },
            { "startOffset": 6269, "endOffset": 6305, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "setPriority",
          "ranges": [{ "startOffset": 6452, "endOffset": 6741, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getPriority",
          "ranges": [{ "startOffset": 6799, "endOffset": 7054, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "userInfo",
          "ranges": [{ "startOffset": 7358, "endOffset": 7584, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "156",
      "url": "node:fs/promises",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 73, "count": 1 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "157",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/config/lib/type-defs.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1388, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "validateSemver",
          "ranges": [{ "startOffset": 197, "endOffset": 306, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "validatePath",
          "ranges": [
            { "startOffset": 382, "endOffset": 497, "count": 2 },
            { "startOffset": 433, "endOffset": 455, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "158",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/config/lib/umask.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 914, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "parse",
          "ranges": [{ "startOffset": 14, "endOffset": 748, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "validate",
          "ranges": [{ "startOffset": 767, "endOffset": 875, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "159",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/functions/valid.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 162, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "valid",
          "ranges": [{ "startOffset": 47, "endOffset": 138, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "160",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/functions/parse.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 317, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "parse",
          "ranges": [
            { "startOffset": 58, "endOffset": 292, "count": 1 },
            { "startOffset": 136, "endOffset": 160, "count": 0 },
            { "startOffset": 213, "endOffset": 290, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "161",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/config/lib/nerf-dart.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 455, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "module.exports",
          "ranges": [{ "startOffset": 251, "endOffset": 454, "count": 6 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "162",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/config/lib/env-replace.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 414, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "module.exports",
          "ranges": [{ "startOffset": 125, "endOffset": 413, "count": 201 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 156, "endOffset": 412, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "163",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/config/lib/parse-field.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2229, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "parseField",
          "ranges": [
            { "startOffset": 262, "endOffset": 2199, "count": 159 },
            { "startOffset": 331, "endOffset": 351, "count": 114 },
            { "startOffset": 353, "endOffset": 371, "count": 108 },
            { "startOffset": 371, "endOffset": 659, "count": 51 },
            { "startOffset": 659, "endOffset": 696, "count": 44 },
            { "startOffset": 833, "endOffset": 855, "count": 50 },
            { "startOffset": 931, "endOffset": 1012, "count": 6 },
            { "startOffset": 952, "endOffset": 955, "count": 0 },
            { "startOffset": 1012, "endOffset": 1252, "count": 45 },
            { "startOffset": 1252, "endOffset": 1307, "count": 1 },
            { "startOffset": 1307, "endOffset": 1370, "count": 44 },
            { "startOffset": 1370, "endOffset": 1382, "count": 0 },
            { "startOffset": 1383, "endOffset": 1394, "count": 0 },
            { "startOffset": 1396, "endOffset": 1417, "count": 0 },
            { "startOffset": 1417, "endOffset": 1532, "count": 44 },
            { "startOffset": 1532, "endOffset": 1542, "count": 11 },
            { "startOffset": 1543, "endOffset": 1555, "count": 11 },
            { "startOffset": 1557, "endOffset": 1721, "count": 11 },
            { "startOffset": 1582, "endOffset": 1606, "count": 0 },
            { "startOffset": 1613, "endOffset": 1639, "count": 0 },
            { "startOffset": 1646, "endOffset": 1670, "count": 0 },
            { "startOffset": 1677, "endOffset": 1711, "count": 0 },
            { "startOffset": 1721, "endOffset": 1763, "count": 44 },
            { "startOffset": 1763, "endOffset": 1791, "count": 0 },
            { "startOffset": 1791, "endOffset": 1807, "count": 44 },
            { "startOffset": 1807, "endOffset": 1995, "count": 7 },
            { "startOffset": 1854, "endOffset": 1867, "count": 0 },
            { "startOffset": 1905, "endOffset": 1912, "count": 4 },
            { "startOffset": 1914, "endOffset": 1957, "count": 4 },
            { "startOffset": 1957, "endOffset": 1991, "count": 3 },
            { "startOffset": 1995, "endOffset": 2012, "count": 44 },
            { "startOffset": 2012, "endOffset": 2138, "count": 0 },
            { "startOffset": 2138, "endOffset": 2155, "count": 44 },
            { "startOffset": 2155, "endOffset": 2167, "count": 0 },
            { "startOffset": 2169, "endOffset": 2185, "count": 0 },
            { "startOffset": 2185, "endOffset": 2198, "count": 44 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 964, "endOffset": 1007, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "164",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/config/lib/set-envs.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 3465, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "envKey",
          "ranges": [{ "startOffset": 374, "endOffset": 523, "count": 6 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "envVal",
          "ranges": [
            { "startOffset": 540, "endOffset": 715, "count": 13 },
            { "startOffset": 566, "endOffset": 604, "count": 1 },
            { "startOffset": 607, "endOffset": 715, "count": 12 },
            { "startOffset": 660, "endOffset": 664, "count": 0 },
            { "startOffset": 693, "endOffset": 699, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 576, "endOffset": 590, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "sameConfigValue",
          "ranges": [
            { "startOffset": 741, "endOffset": 842, "count": 261 },
            { "startOffset": 777, "endOffset": 799, "count": 9 },
            { "startOffset": 800, "endOffset": 813, "count": 253 },
            { "startOffset": 816, "endOffset": 842, "count": 8 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "sameArrayValue",
          "ranges": [
            { "startOffset": 867, "endOffset": 1265, "count": 8 },
            { "startOffset": 916, "endOffset": 938, "count": 0 },
            { "startOffset": 979, "endOffset": 1249, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "setEnv",
          "ranges": [{ "startOffset": 1282, "endOffset": 1425, "count": 6 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "setEnvs",
          "ranges": [
            { "startOffset": 1443, "endOffset": 3438, "count": 1 },
            { "startOffset": 2176, "endOffset": 2855, "count": 156 },
            { "startOffset": 2240, "endOffset": 2245, "count": 1 },
            { "startOffset": 2265, "endOffset": 2287, "count": 138 },
            { "startOffset": 2289, "endOffset": 2311, "count": 22 },
            { "startOffset": 2311, "endOffset": 2367, "count": 134 },
            { "startOffset": 2367, "endOffset": 2613, "count": 127 },
            { "startOffset": 2559, "endOffset": 2607, "count": 0 },
            { "startOffset": 2613, "endOffset": 2851, "count": 7 },
            { "startOffset": 2775, "endOffset": 2794, "count": 1 },
            { "startOffset": 2797, "endOffset": 2845, "count": 6 },
            { "startOffset": 3296, "endOffset": 3348, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "165",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/which/lib/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 3129, "count": 1 },
            { "startOffset": 608, "endOffset": 613, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getNotFoundError",
          "ranges": [{ "startOffset": 717, "endOffset": 793, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getPathInfo",
          "ranges": [
            { "startOffset": 815, "endOffset": 1669, "count": 1 },
            { "startOffset": 1110, "endOffset": 1288, "count": 0 },
            { "startOffset": 1307, "endOffset": 1630, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1463, "endOffset": 1499, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getPathPart",
          "ranges": [
            { "startOffset": 1691, "endOffset": 1877, "count": 1 },
            { "startOffset": 1745, "endOffset": 1763, "count": 0 },
            { "startOffset": 1815, "endOffset": 1832, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "which",
          "ranges": [
            { "startOffset": 1893, "endOffset": 2477, "count": 1 },
            { "startOffset": 2301, "endOffset": 2337, "count": 0 },
            { "startOffset": 2343, "endOffset": 2378, "count": 0 },
            { "startOffset": 2380, "endOffset": 2476, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "whichSync",
          "ranges": [{ "startOffset": 2497, "endOffset": 3081, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "166",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/which/node_modules/isexe/dist/cjs/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 1951, "count": 1 },
            { "startOffset": 407, "endOffset": 488, "count": 0 },
            { "startOffset": 664, "endOffset": 706, "count": 0 },
            { "startOffset": 1680, "endOffset": 1687, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 88, "endOffset": 405, "count": 0 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 410, "endOffset": 487, "count": 0 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 571, "endOffset": 662, "count": 0 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "__setModuleDefault",
          "ranges": [{ "startOffset": 666, "endOffset": 706, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "__importStar",
          "ranges": [
            { "startOffset": 759, "endOffset": 1039, "count": 2 },
            { "startOffset": 818, "endOffset": 1038, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "__exportStar",
          "ranges": [
            { "startOffset": 1091, "endOffset": 1242, "count": 1 },
            { "startOffset": 1135, "endOffset": 1240, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "167",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/which/node_modules/isexe/dist/cjs/posix.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2072, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isexe",
          "ranges": [
            { "startOffset": 439, "endOffset": 741, "count": 1 },
            { "startOffset": 606, "endOffset": 739, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "sync",
          "ranges": [{ "startOffset": 915, "endOffset": 1203, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "checkStat",
          "ranges": [{ "startOffset": 1244, "endOffset": 1304, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "checkMode",
          "ranges": [
            { "startOffset": 1324, "endOffset": 2037, "count": 1 },
            { "startOffset": 1459, "endOffset": 1464, "count": 0 },
            { "startOffset": 1518, "endOffset": 1532, "count": 0 },
            { "startOffset": 1586, "endOffset": 1643, "count": 0 },
            { "startOffset": 1919, "endOffset": 1958, "count": 0 },
            { "startOffset": 1959, "endOffset": 1996, "count": 0 },
            { "startOffset": 1997, "endOffset": 2033, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "168",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/which/node_modules/isexe/dist/cjs/win32.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1877, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isexe",
          "ranges": [{ "startOffset": 469, "endOffset": 777, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "sync",
          "ranges": [{ "startOffset": 973, "endOffset": 1267, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "checkPathExt",
          "ranges": [{ "startOffset": 1311, "endOffset": 1753, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "checkStat",
          "ranges": [{ "startOffset": 1773, "endOffset": 1842, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "169",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/which/node_modules/isexe/dist/cjs/options.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 112, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "170",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/config/lib/definitions/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2082, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 507, "endOffset": 789, "count": 7 },
            { "startOffset": 577, "endOffset": 773, "count": 157 },
            { "startOffset": 624, "endOffset": 638, "count": 156 },
            { "startOffset": 640, "endOffset": 681, "count": 126 },
            { "startOffset": 681, "endOffset": 769, "count": 31 },
            { "startOffset": 740, "endOffset": 769, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Object.entries.reduce.shorthands",
          "ranges": [
            { "startOffset": 853, "endOffset": 1066, "count": 155 },
            { "startOffset": 975, "endOffset": 1021, "count": 22 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "171",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/config/lib/definitions/definitions.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 73793, "count": 1 },
            { "startOffset": 1268, "endOffset": 1310, "count": 0 },
            { "startOffset": 1344, "endOffset": 1374, "count": 0 },
            { "startOffset": 1397, "endOffset": 1404, "count": 0 },
            { "startOffset": 1746, "endOffset": 1771, "count": 0 },
            { "startOffset": 1772, "endOffset": 1793, "count": 0 },
            { "startOffset": 1904, "endOffset": 1931, "count": 0 },
            { "startOffset": 1969, "endOffset": 1982, "count": 0 },
            { "startOffset": 13509, "endOffset": 13540, "count": 0 },
            { "startOffset": 42241, "endOffset": 42250, "count": 0 },
            { "startOffset": 70529, "endOffset": 70540, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "maybeReadFile",
          "ranges": [{ "startOffset": 329, "endOffset": 476, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "buildOmitList",
          "ranges": [
            { "startOffset": 500, "endOffset": 1192, "count": 7 },
            { "startOffset": 539, "endOffset": 544, "count": 0 },
            { "startOffset": 569, "endOffset": 574, "count": 0 },
            { "startOffset": 654, "endOffset": 680, "count": 0 },
            { "startOffset": 716, "endOffset": 745, "count": 0 },
            { "startOffset": 776, "endOffset": 805, "count": 0 },
            { "startOffset": 822, "endOffset": 851, "count": 0 },
            { "startOffset": 883, "endOffset": 914, "count": 0 },
            { "startOffset": 947, "endOffset": 981, "count": 0 },
            { "startOffset": 1126, "endOffset": 1171, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1022, "endOffset": 1053, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getLocalAddresses",
          "ranges": [
            { "startOffset": 1481, "endOffset": 1690, "count": 1 },
            { "startOffset": 1655, "endOffset": 1688, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1554, "endOffset": 1594, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1569, "endOffset": 1593, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1608, "endOffset": 1641, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 2428, "endOffset": 2561, "count": 83 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2498, "endOffset": 2526, "count": 64 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 6316, "endOffset": 6412, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 9932, "endOffset": 10131, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 10410, "endOffset": 10524, "count": 1 },
            { "startOffset": 10469, "endOffset": 10518, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 10815, "endOffset": 10933, "count": 1 },
            { "startOffset": 10877, "endOffset": 10927, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 11276, "endOffset": 11696, "count": 1 },
            { "startOffset": 11397, "endOffset": 11695, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 11612, "endOffset": 11637, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 11652, "endOffset": 11689, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 13907, "endOffset": 14185, "count": 1 },
            { "startOffset": 13978, "endOffset": 13985, "count": 0 },
            { "startOffset": 14019, "endOffset": 14025, "count": 0 },
            { "startOffset": 14099, "endOffset": 14106, "count": 0 },
            { "startOffset": 14140, "endOffset": 14146, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 15327, "endOffset": 15470, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 15666, "endOffset": 15762, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 19716, "endOffset": 19848, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 20072, "endOffset": 20203, "count": 1 },
            { "startOffset": 20150, "endOffset": 20155, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 20486, "endOffset": 20621, "count": 1 },
            { "startOffset": 20564, "endOffset": 20569, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 20906, "endOffset": 21041, "count": 1 },
            { "startOffset": 20984, "endOffset": 20989, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 21306, "endOffset": 21382, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 25083, "endOffset": 25234, "count": 1 },
            { "startOffset": 25179, "endOffset": 25228, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 26005, "endOffset": 26166, "count": 1 },
            { "startOffset": 26059, "endOffset": 26160, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 28277, "endOffset": 28438, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 34996, "endOffset": 35155, "count": 1 },
            { "startOffset": 35050, "endOffset": 35149, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 37587, "endOffset": 37819, "count": 1 },
            { "startOffset": 37683, "endOffset": 37732, "count": 0 },
            { "startOffset": 37770, "endOffset": 37813, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 38987, "endOffset": 39092, "count": 1 },
            { "startOffset": 39061, "endOffset": 39086, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 39630, "endOffset": 39718, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 40672, "endOffset": 40751, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 41684, "endOffset": 41871, "count": 1 },
            { "startOffset": 41811, "endOffset": 41865, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 43004, "endOffset": 43087, "count": 7 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 43826, "endOffset": 43922, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 44313, "endOffset": 44409, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 45098, "endOffset": 45286, "count": 1 },
            { "startOffset": 45188, "endOffset": 45280, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 45826, "endOffset": 45985, "count": 2 },
            { "startOffset": 45931, "endOffset": 45979, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 46564, "endOffset": 46723, "count": 1 },
            { "startOffset": 46669, "endOffset": 46717, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 49060, "endOffset": 49156, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 49575, "endOffset": 50013, "count": 1 },
            { "startOffset": 49652, "endOffset": 49659, "count": 0 },
            { "startOffset": 49951, "endOffset": 49976, "count": 0 },
            { "startOffset": 49977, "endOffset": 50007, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 53303, "endOffset": 53657, "count": 1 },
            { "startOffset": 53631, "endOffset": 53651, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 53870, "endOffset": 54085, "count": 1 },
            { "startOffset": 53971, "endOffset": 54020, "count": 0 },
            { "startOffset": 54043, "endOffset": 54084, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 54368, "endOffset": 54559, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 54793, "endOffset": 55313, "count": 1 },
            { "startOffset": 54899, "endOffset": 54948, "count": 0 },
            { "startOffset": 54999, "endOffset": 55050, "count": 0 },
            { "startOffset": 55073, "endOffset": 55307, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 55512, "endOffset": 56032, "count": 1 },
            { "startOffset": 55614, "endOffset": 55663, "count": 0 },
            { "startOffset": 55714, "endOffset": 55769, "count": 0 },
            { "startOffset": 55792, "endOffset": 56026, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 56554, "endOffset": 56718, "count": 2 },
            { "startOffset": 56637, "endOffset": 56641, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 57228, "endOffset": 57445, "count": 1 },
            { "startOffset": 57330, "endOffset": 57379, "count": 0 },
            { "startOffset": 57402, "endOffset": 57444, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 59045, "endOffset": 59325, "count": 1 },
            { "startOffset": 59134, "endOffset": 59154, "count": 0 },
            { "startOffset": 59155, "endOffset": 59168, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 59669, "endOffset": 59762, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 59952, "endOffset": 60112, "count": 1 },
            { "startOffset": 60032, "endOffset": 60048, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 60330, "endOffset": 60463, "count": 1 },
            { "startOffset": 60410, "endOffset": 60415, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 60645, "endOffset": 60807, "count": 1 },
            { "startOffset": 60725, "endOffset": 60741, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 61059, "endOffset": 61207, "count": 1 },
            { "startOffset": 61139, "endOffset": 61155, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 61715, "endOffset": 61873, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 63808, "endOffset": 63886, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 64533, "endOffset": 64612, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [
            { "startOffset": 68317, "endOffset": 69436, "count": 3 },
            { "startOffset": 68412, "endOffset": 68425, "count": 0 },
            { "startOffset": 68937, "endOffset": 68953, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 71869, "endOffset": 71975, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "flatten",
          "ranges": [{ "startOffset": 72729, "endOffset": 73230, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "172",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/config/lib/definitions/definition.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 6672, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "Definition",
          "ranges": [
            { "startOffset": 714, "endOffset": 1369, "count": 155 },
            { "startOffset": 938, "endOffset": 1005, "count": 131 },
            { "startOffset": 1037, "endOffset": 1097, "count": 154 },
            { "startOffset": 1166, "endOffset": 1297, "count": 138 },
            { "startOffset": 1200, "endOffset": 1240, "count": 12 },
            { "startOffset": 1240, "endOffset": 1291, "count": 126 },
            { "startOffset": 1319, "endOffset": 1365, "count": 152 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "validate",
          "ranges": [
            { "startOffset": 1373, "endOffset": 1817, "count": 155 },
            { "startOffset": 1419, "endOffset": 1556, "count": 620 },
            { "startOffset": 1481, "endOffset": 1550, "count": 0 },
            { "startOffset": 1576, "endOffset": 1638, "count": 0 },
            { "startOffset": 1682, "endOffset": 1813, "count": 988 },
            { "startOffset": 1720, "endOffset": 1807, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "describe",
          "ranges": [{ "startOffset": 1889, "endOffset": 2532, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "describeUsage",
          "ranges": [
            { "startOffset": 2558, "endOffset": 4046, "count": 152 },
            { "startOffset": 2632, "endOffset": 2927, "count": 107 },
            { "startOffset": 2653, "endOffset": 2689, "count": 15 },
            { "startOffset": 2720, "endOffset": 2744, "count": 59 },
            { "startOffset": 2746, "endOffset": 2789, "count": 14 },
            { "startOffset": 2789, "endOffset": 2835, "count": 93 },
            { "startOffset": 2867, "endOffset": 2907, "count": 48 },
            { "startOffset": 2927, "endOffset": 2969, "count": 45 },
            { "startOffset": 2969, "endOffset": 3013, "count": 4 },
            { "startOffset": 3013, "endOffset": 3390, "count": 45 },
            { "startOffset": 3390, "endOffset": 3410, "count": 5 },
            { "startOffset": 3410, "endOffset": 3477, "count": 40 },
            { "startOffset": 3477, "endOffset": 3582, "count": 13 },
            { "startOffset": 3582, "endOffset": 3652, "count": 27 },
            { "startOffset": 3652, "endOffset": 3666, "count": 40 },
            { "startOffset": 3666, "endOffset": 3916, "count": 1 },
            { "startOffset": 3916, "endOffset": 3974, "count": 40 },
            { "startOffset": 3974, "endOffset": 4016, "count": 8 },
            { "startOffset": 4016, "endOffset": 4044, "count": 32 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 3319, "endOffset": 3366, "count": 125 },
            { "startOffset": 3335, "endOffset": 3349, "count": 95 },
            { "startOffset": 3350, "endOffset": 3366, "count": 87 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3448, "endOffset": 3474, "count": 75 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3558, "endOffset": 3564, "count": 43 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "describeType",
          "ranges": [
            { "startOffset": 4069, "endOffset": 5319, "count": 270 },
            { "startOffset": 4106, "endOffset": 4698, "count": 45 },
            { "startOffset": 4422, "endOffset": 4444, "count": 41 },
            { "startOffset": 4445, "endOffset": 4449, "count": 4 },
            { "startOffset": 4493, "endOffset": 4502, "count": 14 },
            { "startOffset": 4503, "endOffset": 4511, "count": 31 },
            { "startOffset": 4624, "endOffset": 4656, "count": 8 },
            { "startOffset": 4657, "endOffset": 4661, "count": 37 },
            { "startOffset": 4698, "endOffset": 4923, "count": 225 },
            { "startOffset": 4923, "endOffset": 4957, "count": 41 },
            { "startOffset": 4962, "endOffset": 4996, "count": 15 },
            { "startOffset": 5001, "endOffset": 5077, "count": 1 },
            { "startOffset": 5082, "endOffset": 5118, "count": 68 },
            { "startOffset": 5123, "endOffset": 5153, "count": 1 },
            { "startOffset": 5158, "endOffset": 5188, "count": 9 },
            { "startOffset": 5193, "endOffset": 5234, "count": 2 },
            { "startOffset": 5239, "endOffset": 5267, "count": 5 },
            { "startOffset": 5272, "endOffset": 5313, "count": 83 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4145, "endOffset": 4161, "count": 124 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4167, "endOffset": 4187, "count": 116 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "describeValue",
          "ranges": [
            { "startOffset": 5407, "endOffset": 5475, "count": 214 },
            { "startOffset": 5439, "endOffset": 5460, "count": 83 },
            { "startOffset": 5461, "endOffset": 5474, "count": 131 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "unindent",
          "ranges": [{ "startOffset": 5494, "endOffset": 5718, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "wrap",
          "ranges": [{ "startOffset": 5733, "endOffset": 6053, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "wrapAll",
          "ranges": [{ "startOffset": 6071, "endOffset": 6642, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "173",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/ci-info/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2368, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 173, "endOffset": 213, "count": 50 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 276, "endOffset": 1288, "count": 50 },
            { "startOffset": 337, "endOffset": 349, "count": 2 },
            { "startOffset": 350, "endOffset": 364, "count": 48 },
            { "startOffset": 503, "endOffset": 660, "count": 0 },
            { "startOffset": 665, "endOffset": 1191, "count": 0 },
            { "startOffset": 1196, "endOffset": 1282, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 391, "endOffset": 436, "count": 50 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1001, "endOffset": 1055, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "checkEnv",
          "ranges": [
            { "startOffset": 1824, "endOffset": 2367, "count": 50 },
            { "startOffset": 1902, "endOffset": 1919, "count": 45 },
            { "startOffset": 1919, "endOffset": 2013, "count": 5 },
            { "startOffset": 2013, "endOffset": 2190, "count": 1 },
            { "startOffset": 2139, "endOffset": 2177, "count": 0 },
            { "startOffset": 2190, "endOffset": 2211, "count": 4 },
            { "startOffset": 2211, "endOffset": 2284, "count": 1 },
            { "startOffset": 2284, "endOffset": 2366, "count": 3 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2237, "endOffset": 2279, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2317, "endOffset": 2364, "count": 3 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "174",
      "url": "file:///usr/local/lib/node_modules/npm/lib/utils/npm-usage.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2064, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "indent",
          "ranges": [{ "startOffset": 137, "endOffset": 176, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "indentNewline",
          "ranges": [{ "startOffset": 199, "endOffset": 232, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "module.exports",
          "ranges": [{ "startOffset": 251, "endOffset": 1174, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "cmdNames",
          "ranges": [{ "startOffset": 1193, "endOffset": 1591, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "cmdUsages",
          "ranges": [{ "startOffset": 1611, "endOffset": 2063, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "175",
      "url": "file:///usr/local/lib/node_modules/npm/lib/utils/cmd-list.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2959, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "deref",
          "ranges": [
            { "startOffset": 2229, "endOffset": 2904, "count": 3 },
            { "startOffset": 2248, "endOffset": 2264, "count": 0 },
            { "startOffset": 2364, "endOffset": 2427, "count": 0 },
            { "startOffset": 2528, "endOffset": 2903, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2396, "endOffset": 2422, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "176",
      "url": "file:///usr/local/lib/node_modules/npm/lib/utils/log-file.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 7971, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "padZero",
          "ranges": [{ "startOffset": 271, "endOffset": 338, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 340, "endOffset": 7943, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "LogFiles",
          "ranges": [{ "startOffset": 1102, "endOffset": 1301, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "on",
          "ranges": [{ "startOffset": 1305, "endOffset": 1356, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "off",
          "ranges": [{ "startOffset": 1360, "endOffset": 1435, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "load",
          "ranges": [
            { "startOffset": 1439, "endOffset": 2766, "count": 1 },
            { "startOffset": 1541, "endOffset": 1561, "count": 0 },
            { "startOffset": 1834, "endOffset": 1854, "count": 0 },
            { "startOffset": 2264, "endOffset": 2421, "count": 17 },
            { "startOffset": 2357, "endOffset": 2411, "count": 11 },
            { "startOffset": 2516, "endOffset": 2539, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get files",
          "ranges": [{ "startOffset": 2770, "endOffset": 2811, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get #isBuffered",
          "ranges": [{ "startOffset": 2815, "endOffset": 2881, "count": 31 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "#endStream",
          "ranges": [{ "startOffset": 2885, "endOffset": 3027, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "#logHandler",
          "ranges": [
            { "startOffset": 3045, "endOffset": 4165, "count": 33 },
            { "startOffset": 3180, "endOffset": 3201, "count": 32 },
            { "startOffset": 3203, "endOffset": 3223, "count": 3 },
            { "startOffset": 3223, "endOffset": 3297, "count": 30 },
            { "startOffset": 3297, "endOffset": 3317, "count": 0 },
            { "startOffset": 3317, "endOffset": 3345, "count": 30 },
            { "startOffset": 3345, "endOffset": 3501, "count": 17 },
            { "startOffset": 3501, "endOffset": 3589, "count": 13 },
            { "startOffset": 3589, "endOffset": 3609, "count": 4 },
            { "startOffset": 3609, "endOffset": 3736, "count": 9 },
            { "startOffset": 3736, "endOffset": 4109, "count": 0 },
            { "startOffset": 4109, "endOffset": 4161, "count": 9 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#formatLogItem",
          "ranges": [
            { "startOffset": 4169, "endOffset": 4527, "count": 30 },
            { "startOffset": 4308, "endOffset": 4324, "count": 10 },
            { "startOffset": 4326, "endOffset": 4351, "count": 10 },
            { "startOffset": 4351, "endOffset": 4437, "count": 20 },
            { "startOffset": 4437, "endOffset": 4444, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#getLogFilePath",
          "ranges": [{ "startOffset": 4531, "endOffset": 4610, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "#openLogFile",
          "ranges": [
            { "startOffset": 4614, "endOffset": 5876, "count": 1 },
            { "startOffset": 5480, "endOffset": 5602, "count": 0 },
            { "startOffset": 5671, "endOffset": 5872, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#cleanLogs",
          "ranges": [
            { "startOffset": 5880, "endOffset": 7941, "count": 1 },
            { "startOffset": 6796, "endOffset": 7262, "count": 14 },
            { "startOffset": 6826, "endOffset": 6856, "count": 0 },
            { "startOffset": 7118, "endOffset": 7153, "count": 12 },
            { "startOffset": 7164, "endOffset": 7198, "count": 12 },
            { "startOffset": 7209, "endOffset": 7254, "count": 11 },
            { "startOffset": 7345, "endOffset": 7369, "count": 0 },
            { "startOffset": 7575, "endOffset": 7663, "count": 0 },
            { "startOffset": 7678, "endOffset": 7867, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 6670, "endOffset": 6734, "count": 13 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "177",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/fs-minipass/lib/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 9884, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "ReadStream",
          "ranges": [{ "startOffset": 1145, "endOffset": 1836, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get fd",
          "ranges": [{ "startOffset": 1840, "endOffset": 1876, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get path",
          "ranges": [{ "startOffset": 1880, "endOffset": 1920, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "write",
          "ranges": [{ "startOffset": 1924, "endOffset": 1991, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "end",
          "ranges": [{ "startOffset": 1995, "endOffset": 2060, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2064, "endOffset": 2145, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2149, "endOffset": 2300, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2304, "endOffset": 2395, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2399, "endOffset": 2747, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2751, "endOffset": 2918, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2922, "endOffset": 3131, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3135, "endOffset": 3228, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3232, "endOffset": 3547, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emit",
          "ranges": [{ "startOffset": 3551, "endOffset": 3965, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4013, "endOffset": 4209, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4213, "endOffset": 4743, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4747, "endOffset": 4929, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "WriteStream",
          "ranges": [
            { "startOffset": 4966, "endOffset": 5796, "count": 1 },
            { "startOffset": 5006, "endOffset": 5011, "count": 0 },
            { "startOffset": 5274, "endOffset": 5282, "count": 0 },
            { "startOffset": 5339, "endOffset": 5349, "count": 0 },
            { "startOffset": 5397, "endOffset": 5408, "count": 0 },
            { "startOffset": 5474, "endOffset": 5495, "count": 0 },
            { "startOffset": 5610, "endOffset": 5616, "count": 0 },
            { "startOffset": 5710, "endOffset": 5723, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "emit",
          "ranges": [
            { "startOffset": 5800, "endOffset": 5964, "count": 3 },
            { "startOffset": 5842, "endOffset": 5928, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get fd",
          "ranges": [{ "startOffset": 5968, "endOffset": 6004, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get path",
          "ranges": [{ "startOffset": 6008, "endOffset": 6048, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 6052, "endOffset": 6145, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 6149, "endOffset": 6258, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 6262, "endOffset": 6606, "count": 1 },
            { "startOffset": 6310, "endOffset": 6342, "count": 0 },
            { "startOffset": 6343, "endOffset": 6356, "count": 0 },
            { "startOffset": 6357, "endOffset": 6380, "count": 0 },
            { "startOffset": 6382, "endOffset": 6434, "count": 0 },
            { "startOffset": 6448, "endOffset": 6480, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "end",
          "ranges": [
            { "startOffset": 6610, "endOffset": 6908, "count": 1 },
            { "startOffset": 6640, "endOffset": 6674, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "write",
          "ranges": [
            { "startOffset": 6912, "endOffset": 7339, "count": 20 },
            { "startOffset": 7029, "endOffset": 7114, "count": 0 },
            { "startOffset": 7185, "endOffset": 7270, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 7343, "endOffset": 7461, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 7465, "endOffset": 7974, "count": 21 },
            { "startOffset": 7499, "endOffset": 7531, "count": 0 },
            { "startOffset": 7570, "endOffset": 7604, "count": 0 },
            { "startOffset": 7636, "endOffset": 7668, "count": 0 },
            { "startOffset": 7733, "endOffset": 7752, "count": 1 },
            { "startOffset": 7754, "endOffset": 7853, "count": 1 },
            { "startOffset": 7853, "endOffset": 7956, "count": 20 },
            { "startOffset": 7881, "endOffset": 7956, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 7978, "endOffset": 8344, "count": 1 },
            { "startOffset": 8053, "endOffset": 8094, "count": 0 },
            { "startOffset": 8100, "endOffset": 8340, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 8299, "endOffset": 8333, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 8348, "endOffset": 8557, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 8607, "endOffset": 9184, "count": 1 },
            { "startOffset": 8794, "endOffset": 8818, "count": 0 },
            { "startOffset": 8820, "endOffset": 9075, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 9188, "endOffset": 9370, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 9374, "endOffset": 9731, "count": 20 },
            { "startOffset": 9623, "endOffset": 9721, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "178",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/minipass/dist/commonjs/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 33796, "count": 1 },
            { "startOffset": 374, "endOffset": 427, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "__importDefault",
          "ranges": [
            { "startOffset": 70, "endOffset": 151, "count": 1 },
            { "startOffset": 122, "endOffset": 127, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "isStream",
          "ranges": [{ "startOffset": 745, "endOffset": 937, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isReadable",
          "ranges": [{ "startOffset": 1063, "endOffset": 1319, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isWritable",
          "ranges": [{ "startOffset": 1449, "endOffset": 1607, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "defer",
          "ranges": [{ "startOffset": 2884, "endOffset": 2918, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "nodefer",
          "ranges": [{ "startOffset": 2936, "endOffset": 2948, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isEndish",
          "ranges": [{ "startOffset": 2967, "endOffset": 3028, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isArrayBufferLike",
          "ranges": [{ "startOffset": 3056, "endOffset": 3235, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isArrayBufferView",
          "ranges": [{ "startOffset": 3263, "endOffset": 3314, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 3403, "endOffset": 3951, "count": 0 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "unpipe",
          "ranges": [{ "startOffset": 4108, "endOffset": 4208, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "PipeProxyErrors",
          "ranges": [{ "startOffset": 4213, "endOffset": 4381, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isObjectModeOptions",
          "ranges": [{ "startOffset": 4412, "endOffset": 4433, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isEncodingOptions",
          "ranges": [{ "startOffset": 4461, "endOffset": 4524, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 4879, "endOffset": 33733, "count": 0 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "179",
      "url": "file:///usr/local/lib/node_modules/npm/lib/utils/format.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1957, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "STRIP_C01",
          "ranges": [
            { "startOffset": 571, "endOffset": 1368, "count": 21 },
            { "startOffset": 644, "endOffset": 1367, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "formatWithOptions",
          "ranges": [{ "startOffset": 1396, "endOffset": 1916, "count": 21 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1495, "endOffset": 1509, "count": 60 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 1845, "endOffset": 1909, "count": 24 },
            { "startOffset": 1882, "endOffset": 1886, "count": 20 },
            { "startOffset": 1887, "endOffset": 1892, "count": 19 },
            { "startOffset": 1893, "endOffset": 1897, "count": 5 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "180",
      "url": "file:///usr/local/lib/node_modules/npm/lib/utils/timers.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2120, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 136, "endOffset": 2094, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "Timers",
          "ranges": [{ "startOffset": 227, "endOffset": 358, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "on",
          "ranges": [{ "startOffset": 362, "endOffset": 415, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "off",
          "ranges": [{ "startOffset": 419, "endOffset": 474, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "load",
          "ranges": [{ "startOffset": 478, "endOffset": 576, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "finish",
          "ranges": [
            { "startOffset": 580, "endOffset": 1036, "count": 1 },
            { "startOffset": 679, "endOffset": 739, "count": 0 },
            { "startOffset": 837, "endOffset": 1032, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#writeFile",
          "ranges": [{ "startOffset": 1040, "endOffset": 1549, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#timeHandler",
          "ranges": [
            { "startOffset": 1568, "endOffset": 2092, "count": 20 },
            { "startOffset": 1641, "endOffset": 1716, "count": 10 },
            { "startOffset": 1723, "endOffset": 2082, "count": 10 },
            { "startOffset": 1977, "endOffset": 2074, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "181",
      "url": "file:///usr/local/lib/node_modules/npm/lib/utils/display.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 15729, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "COLOR_PALETTE",
          "ranges": [{ "startOffset": 564, "endOffset": 802, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "show",
          "ranges": [
            { "startOffset": 1149, "endOffset": 1195, "count": 10 },
            { "startOffset": 1181, "endOffset": 1195, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "setBlocking",
          "ranges": [
            { "startOffset": 1225, "endOffset": 1577, "count": 2 },
            { "startOffset": 1464, "endOffset": 1515, "count": 0 },
            { "startOffset": 1517, "endOffset": 1559, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "isPlainObject",
          "ranges": [{ "startOffset": 1867, "endOffset": 1921, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getArrayOrObject",
          "ranges": [{ "startOffset": 1948, "endOffset": 2478, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getJsonBuffer",
          "ranges": [{ "startOffset": 2502, "endOffset": 3951, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "withMeta",
          "ranges": [{ "startOffset": 3970, "endOffset": 4185, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 3983, "endOffset": 4185, "count": 39 },
            { "startOffset": 4059, "endOffset": 4086, "count": 31 },
            { "startOffset": 4087, "endOffset": 4115, "count": 1 },
            { "startOffset": 4117, "endOffset": 4144, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 4187, "endOffset": 12878, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "Display",
          "ranges": [{ "startOffset": 4573, "endOffset": 4940, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "off",
          "ranges": [{ "startOffset": 4944, "endOffset": 5191, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get chalk",
          "ranges": [{ "startOffset": 5195, "endOffset": 5333, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "load",
          "ranges": [
            { "startOffset": 5337, "endOffset": 6754, "count": 1 },
            { "startOffset": 6136, "endOffset": 6158, "count": 0 },
            { "startOffset": 6252, "endOffset": 6274, "count": 0 },
            { "startOffset": 6726, "endOffset": 6742, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#write",
          "ranges": [
            { "startOffset": 6837, "endOffset": 7080, "count": 1 },
            { "startOffset": 6936, "endOffset": 6955, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 7050, "endOffset": 7075, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 7251, "endOffset": 7799, "count": 33 },
            { "startOffset": 7306, "endOffset": 7499, "count": 2 },
            { "startOffset": 7507, "endOffset": 7581, "count": 1 },
            { "startOffset": 7589, "endOffset": 7789, "count": 30 },
            { "startOffset": 7636, "endOffset": 7708, "count": 11 },
            { "startOffset": 7708, "endOffset": 7775, "count": 19 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 7407, "endOffset": 7443, "count": 11 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 7959, "endOffset": 9843, "count": 4 },
            { "startOffset": 8035, "endOffset": 8046, "count": 1 },
            { "startOffset": 8047, "endOffset": 8059, "count": 3 },
            { "startOffset": 8087, "endOffset": 8548, "count": 3 },
            { "startOffset": 8181, "endOffset": 8384, "count": 0 },
            { "startOffset": 8556, "endOffset": 8671, "count": 0 },
            { "startOffset": 8679, "endOffset": 9833, "count": 1 },
            { "startOffset": 8729, "endOffset": 8804, "count": 0 },
            { "startOffset": 9138, "endOffset": 9260, "count": 0 },
            { "startOffset": 9282, "endOffset": 9747, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 8435, "endOffset": 8471, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 9873, "endOffset": 10732, "count": 2 },
            { "startOffset": 9928, "endOffset": 10056, "count": 1 },
            { "startOffset": 10064, "endOffset": 10174, "count": 1 },
            { "startOffset": 10182, "endOffset": 10722, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 10434, "endOffset": 10713, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#writeOutput",
          "ranges": [
            { "startOffset": 10750, "endOffset": 11004, "count": 1 },
            { "startOffset": 10910, "endOffset": 10994, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#tryWriteLog",
          "ranges": [
            { "startOffset": 11019, "endOffset": 12251, "count": 30 },
            { "startOffset": 11505, "endOffset": 11530, "count": 0 },
            { "startOffset": 11531, "endOffset": 11538, "count": 0 },
            { "startOffset": 11539, "endOffset": 11566, "count": 0 },
            { "startOffset": 11568, "endOffset": 11723, "count": 0 },
            { "startOffset": 11773, "endOffset": 12247, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#writeLog",
          "ranges": [
            { "startOffset": 12255, "endOffset": 12876, "count": 30 },
            { "startOffset": 12365, "endOffset": 12409, "count": 20 },
            { "startOffset": 12439, "endOffset": 12455, "count": 0 },
            { "startOffset": 12531, "endOffset": 12872, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "show",
          "ranges": [{ "startOffset": 12369, "endOffset": 12408, "count": 20 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 12880, "endOffset": 15702, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<static_initializer>",
          "ranges": [{ "startOffset": 13155, "endOffset": 13218, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get #rendering",
          "ranges": [
            { "startOffset": 13416, "endOffset": 13482, "count": 2 },
            { "startOffset": 13461, "endOffset": 13478, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get #spinning",
          "ranges": [
            { "startOffset": 13569, "endOffset": 13634, "count": 2 },
            { "startOffset": 13613, "endOffset": 13630, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Progress",
          "ranges": [{ "startOffset": 13638, "endOffset": 13694, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "load",
          "ranges": [
            { "startOffset": 13698, "endOffset": 13893, "count": 1 },
            { "startOffset": 13800, "endOffset": 13816, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "off",
          "ranges": [
            { "startOffset": 13897, "endOffset": 14146, "count": 2 },
            { "startOffset": 13950, "endOffset": 14145, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "resume",
          "ranges": [{ "startOffset": 14150, "endOffset": 14184, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "write",
          "ranges": [
            { "startOffset": 14368, "endOffset": 14511, "count": 1 },
            { "startOffset": 14408, "endOffset": 14442, "count": 0 },
            { "startOffset": 14479, "endOffset": 14507, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#render",
          "ranges": [
            { "startOffset": 14515, "endOffset": 14798, "count": 2 },
            { "startOffset": 14542, "endOffset": 14794, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 14577, "endOffset": 14651, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "#renderSpinner",
          "ranges": [
            { "startOffset": 14802, "endOffset": 15249, "count": 2 },
            { "startOffset": 14868, "endOffset": 15248, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 15191, "endOffset": 15220, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#renderFrame",
          "ranges": [{ "startOffset": 15253, "endOffset": 15547, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#clearSpinner",
          "ranges": [{ "startOffset": 15551, "endOffset": 15700, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "182",
      "url": "file:///usr/local/lib/node_modules/npm/lib/utils/explain-eresolve.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2617, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "explain",
          "ranges": [{ "startOffset": 600, "endOffset": 1849, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "report",
          "ranges": [{ "startOffset": 1932, "endOffset": 2573, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "183",
      "url": "file:///usr/local/lib/node_modules/npm/lib/utils/explain-dep.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 3103, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "explainNode",
          "ranges": [{ "startOffset": 63, "endOffset": 192, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "colorType",
          "ranges": [{ "startOffset": 212, "endOffset": 597, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "printNode",
          "ranges": [{ "startOffset": 617, "endOffset": 1052, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "explainLinksIn",
          "ranges": [{ "startOffset": 1077, "endOffset": 1336, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "explainDependents",
          "ranges": [{ "startOffset": 1364, "endOffset": 2264, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "explainEdge",
          "ranges": [{ "startOffset": 2286, "endOffset": 2798, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "explainFrom",
          "ranges": [{ "startOffset": 2820, "endOffset": 3044, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "184",
      "url": "file:///usr/local/lib/node_modules/npm/lib/utils/output-error.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 767, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "outputError",
          "ranges": [{ "startOffset": 65, "endOffset": 401, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "jsonError",
          "ranges": [
            { "startOffset": 421, "endOffset": 716, "count": 1 },
            { "startOffset": 451, "endOffset": 465, "count": 0 },
            { "startOffset": 466, "endOffset": 492, "count": 0 },
            { "startOffset": 494, "endOffset": 714, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 574, "endOffset": 599, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 659, "endOffset": 684, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "185",
      "url": "node:net",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 68429, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1645, "endOffset": 1670, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "noop",
          "ranges": [{ "startOffset": 4172, "endOffset": 4180, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getFlags",
          "ranges": [{ "startOffset": 4653, "endOffset": 4747, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createHandle",
          "ranges": [
            { "startOffset": 4749, "endOffset": 5132, "count": 3 },
            { "startOffset": 4916, "endOffset": 4938, "count": 0 },
            { "startOffset": 4973, "endOffset": 5131, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getNewAsyncId",
          "ranges": [
            { "startOffset": 5135, "endOffset": 5273, "count": 3 },
            { "startOffset": 5230, "endOffset": 5248, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "isPipeName",
          "ranges": [{ "startOffset": 5276, "endOffset": 5359, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createServer",
          "ranges": [{ "startOffset": 5560, "endOffset": 5664, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "connect",
          "ranges": [{ "startOffset": 5887, "endOffset": 6288, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getDefaultAutoSelectFamily",
          "ranges": [{ "startOffset": 6290, "endOffset": 6365, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setDefaultAutoSelectFamily",
          "ranges": [{ "startOffset": 6367, "endOffset": 6483, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getDefaultAutoSelectFamilyAttemptTimeout",
          "ranges": [{ "startOffset": 6485, "endOffset": 6588, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setDefaultAutoSelectFamilyAttemptTimeout",
          "ranges": [{ "startOffset": 6590, "endOffset": 6777, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "normalizeArgs",
          "ranges": [{ "startOffset": 7271, "endOffset": 7997, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "initSocketHandle",
          "ranges": [
            { "startOffset": 8069, "endOffset": 8672, "count": 3 },
            { "startOffset": 8425, "endOffset": 8666, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "closeSocketHandle",
          "ranges": [{ "startOffset": 8674, "endOffset": 9014, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket",
          "ranges": [
            { "startOffset": 9266, "endOffset": 13893, "count": 3 },
            { "startOffset": 9326, "endOffset": 9353, "count": 0 },
            { "startOffset": 9381, "endOffset": 9510, "count": 0 },
            { "startOffset": 9580, "endOffset": 9828, "count": 0 },
            { "startOffset": 9890, "endOffset": 10086, "count": 0 },
            { "startOffset": 10648, "endOffset": 10674, "count": 0 },
            { "startOffset": 11080, "endOffset": 11188, "count": 0 },
            { "startOffset": 11716, "endOffset": 11754, "count": 0 },
            { "startOffset": 11830, "endOffset": 11841, "count": 2 },
            { "startOffset": 11843, "endOffset": 11884, "count": 2 },
            { "startOffset": 11885, "endOffset": 11897, "count": 2 },
            { "startOffset": 11899, "endOffset": 12432, "count": 0 },
            { "startOffset": 12523, "endOffset": 12600, "count": 0 },
            { "startOffset": 12601, "endOffset": 12647, "count": 0 },
            { "startOffset": 12649, "endOffset": 12864, "count": 0 },
            { "startOffset": 13399, "endOffset": 13664, "count": 1 },
            { "startOffset": 13432, "endOffset": 13601, "count": 0 },
            { "startOffset": 13633, "endOffset": 13660, "count": 0 },
            { "startOffset": 13688, "endOffset": 13740, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "_unrefTimer",
          "ranges": [
            { "startOffset": 14066, "endOffset": 14196, "count": 3 },
            { "startOffset": 14168, "endOffset": 14190, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Socket._final",
          "ranges": [{ "startOffset": 14316, "endOffset": 14936, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "afterShutdown",
          "ranges": [{ "startOffset": 14939, "endOffset": 15085, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "writeAfterFIN",
          "ranges": [{ "startOffset": 15292, "endOffset": 15800, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket._onTimeout",
          "ranges": [{ "startOffset": 15882, "endOffset": 16386, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.setNoDelay",
          "ranges": [{ "startOffset": 16420, "endOffset": 16797, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.setKeepAlive",
          "ranges": [{ "startOffset": 16833, "endOffset": 17439, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.address",
          "ranges": [{ "startOffset": 17470, "endOffset": 17514, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 17600, "endOffset": 17644, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 17724, "endOffset": 17780, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 17891, "endOffset": 18206, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 18295, "endOffset": 18375, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 18463, "endOffset": 18508, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "tryReadStart",
          "ranges": [{ "startOffset": 18516, "endOffset": 18766, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket._read",
          "ranges": [{ "startOffset": 18858, "endOffset": 19177, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.end",
          "ranges": [{ "startOffset": 19204, "endOffset": 19360, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.resetAndDestroy",
          "ranges": [{ "startOffset": 19398, "endOffset": 19748, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.pause",
          "ranges": [{ "startOffset": 19776, "endOffset": 20114, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.resume",
          "ranges": [{ "startOffset": 20144, "endOffset": 20328, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.read",
          "ranges": [{ "startOffset": 20356, "endOffset": 20542, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onReadableStreamEnd",
          "ranges": [{ "startOffset": 20589, "endOffset": 20688, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.destroySoon",
          "ranges": [{ "startOffset": 20722, "endOffset": 20869, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket._destroy",
          "ranges": [{ "startOffset": 20901, "endOffset": 22415, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket._reset",
          "ranges": [{ "startOffset": 22444, "endOffset": 22543, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket._getpeername",
          "ranges": [{ "startOffset": 22578, "endOffset": 22875, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "protoGetter",
          "ranges": [{ "startOffset": 22878, "endOffset": 23060, "count": 9 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "bytesRead",
          "ranges": [{ "startOffset": 23087, "endOffset": 23178, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "remoteAddress",
          "ranges": [{ "startOffset": 23211, "endOffset": 23277, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "remoteFamily",
          "ranges": [{ "startOffset": 23309, "endOffset": 23373, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "remotePort",
          "ranges": [{ "startOffset": 23403, "endOffset": 23463, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket._getsockname",
          "ranges": [{ "startOffset": 23500, "endOffset": 23776, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "localAddress",
          "ranges": [{ "startOffset": 23808, "endOffset": 23873, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "localPort",
          "ranges": [{ "startOffset": 23903, "endOffset": 23962, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "localFamily",
          "ranges": [{ "startOffset": 23993, "endOffset": 24056, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.<computed>",
          "ranges": [{ "startOffset": 24097, "endOffset": 24144, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket._writeGeneric",
          "ranges": [
            { "startOffset": 24180, "endOffset": 25092, "count": 3 },
            { "startOffset": 24402, "endOffset": 24746, "count": 0 },
            { "startOffset": 24827, "endOffset": 24883, "count": 0 },
            { "startOffset": 24937, "endOffset": 24973, "count": 0 },
            { "startOffset": 25052, "endOffset": 25090, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "connect",
          "ranges": [{ "startOffset": 24497, "endOffset": 24611, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onClose",
          "ranges": [{ "startOffset": 24618, "endOffset": 24697, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket._writev",
          "ranges": [{ "startOffset": 25123, "endOffset": 25191, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket._write",
          "ranges": [{ "startOffset": 25221, "endOffset": 25302, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "_bytesDispatched",
          "ranges": [{ "startOffset": 25495, "endOffset": 25599, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "bytesWritten",
          "ranges": [{ "startOffset": 25631, "endOffset": 26560, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "checkBindError",
          "ranges": [{ "startOffset": 26565, "endOffset": 27364, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "internalConnect",
          "ranges": [{ "startOffset": 27367, "endOffset": 29467, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "internalConnectMultiple",
          "ranges": [{ "startOffset": 29470, "endOffset": 32410, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.connect",
          "ranges": [{ "startOffset": 32439, "endOffset": 34035, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "reinitializeHandle",
          "ranges": [{ "startOffset": 34078, "endOffset": 34232, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "socketToDnsFamily",
          "ranges": [{ "startOffset": 34235, "endOffset": 34381, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lookupAndConnect",
          "ranges": [{ "startOffset": 34383, "endOffset": 38314, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lookupAndConnectMultiple",
          "ranges": [{ "startOffset": 38316, "endOffset": 42415, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "connectErrorNT",
          "ranges": [{ "startOffset": 42417, "endOffset": 42476, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.ref",
          "ranges": [{ "startOffset": 42502, "endOffset": 42689, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.unref",
          "ranges": [{ "startOffset": 42718, "endOffset": 42911, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "afterConnect",
          "ranges": [{ "startOffset": 42915, "endOffset": 44603, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "addClientAbortSignalOption",
          "ranges": [{ "startOffset": 44605, "endOffset": 45015, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createConnectionError",
          "ranges": [{ "startOffset": 45017, "endOffset": 45538, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "afterConnectMultiple",
          "ranges": [{ "startOffset": 45540, "endOffset": 46858, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "internalConnectMultipleTimeout",
          "ranges": [{ "startOffset": 46860, "endOffset": 47356, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "addServerAbortSignalOption",
          "ranges": [{ "startOffset": 47358, "endOffset": 47788, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Server",
          "ranges": [{ "startOffset": 47790, "endOffset": 49402, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "toNumber",
          "ranges": [{ "startOffset": 49513, "endOffset": 49578, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createServerHandle",
          "ranges": [{ "startOffset": 49646, "endOffset": 51098, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setupListenHandle",
          "ranges": [{ "startOffset": 51100, "endOffset": 53794, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emitErrorNT",
          "ranges": [{ "startOffset": 53861, "endOffset": 53923, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emitListeningNT",
          "ranges": [{ "startOffset": 53926, "endOffset": 54041, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "listenInCluster",
          "ranges": [{ "startOffset": 54044, "endOffset": 55626, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Server.listen",
          "ranges": [{ "startOffset": 55655, "endOffset": 60017, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lookupAndListen",
          "ranges": [{ "startOffset": 60020, "endOffset": 60563, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 60645, "endOffset": 60688, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Server.address",
          "ranges": [{ "startOffset": 60764, "endOffset": 61057, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onconnection",
          "ranges": [{ "startOffset": 61060, "endOffset": 62963, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Server.getConnections",
          "ranges": [{ "startOffset": 63112, "endOffset": 63865, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Server.close",
          "ranges": [{ "startOffset": 63894, "endOffset": 64784, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Server.<computed>",
          "ranges": [{ "startOffset": 64826, "endOffset": 64946, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Server._emitCloseIfDrained",
          "ranges": [{ "startOffset": 64988, "endOffset": 65374, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "emitCloseNT",
          "ranges": [{ "startOffset": 65378, "endOffset": 65461, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Server.<computed>",
          "ranges": [{ "startOffset": 65520, "endOffset": 65682, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 65904, "endOffset": 65940, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 65944, "endOffset": 65985, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 66065, "endOffset": 66096, "count": 32 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 66100, "endOffset": 66136, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "Server._setupWorker",
          "ranges": [{ "startOffset": 66175, "endOffset": 66416, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Server.ref",
          "ranges": [{ "startOffset": 66442, "endOffset": 66540, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Server.unref",
          "ranges": [{ "startOffset": 66568, "endOffset": 66667, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "_setSimultaneousAccepts",
          "ranges": [{ "startOffset": 66809, "endOffset": 67478, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "_setSimultaneousAccepts",
          "ranges": [{ "startOffset": 67517, "endOffset": 67758, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get BlockList",
          "ranges": [{ "startOffset": 67887, "endOffset": 67989, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get SocketAddress",
          "ranges": [{ "startOffset": 67993, "endOffset": 68115, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "186",
      "url": "node:internal/stream_base_commons",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 7170, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1057, "endOffset": 1082, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "handleWriteReq",
          "ranges": [
            { "startOffset": 1201, "endOffset": 2056, "count": 3 },
            { "startOffset": 1301, "endOffset": 1468, "count": 0 },
            { "startOffset": 1473, "endOffset": 1487, "count": 0 },
            { "startOffset": 1492, "endOffset": 1556, "count": 0 },
            { "startOffset": 1644, "endOffset": 1706, "count": 0 },
            { "startOffset": 1711, "endOffset": 1723, "count": 0 },
            { "startOffset": 1728, "endOffset": 1741, "count": 0 },
            { "startOffset": 1746, "endOffset": 1761, "count": 0 },
            { "startOffset": 1766, "endOffset": 1830, "count": 0 },
            { "startOffset": 1835, "endOffset": 2050, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "onWriteComplete",
          "ranges": [{ "startOffset": 2058, "endOffset": 2747, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createWriteWrap",
          "ranges": [{ "startOffset": 2749, "endOffset": 2987, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "writevGeneric",
          "ranges": [{ "startOffset": 2989, "endOffset": 3628, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "writeGeneric",
          "ranges": [{ "startOffset": 3630, "endOffset": 3835, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "afterWriteDispatched",
          "ranges": [
            { "startOffset": 3837, "endOffset": 4144, "count": 3 },
            { "startOffset": 4004, "endOffset": 4059, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "onStreamRead",
          "ranges": [{ "startOffset": 4146, "endOffset": 6085, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setStreamTimeout",
          "ranges": [{ "startOffset": 6087, "endOffset": 6963, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "187",
      "url": "node:diagnostics_channel",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 10086, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 808, "endOffset": 1217, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#finalizers",
          "ranges": [{ "startOffset": 888, "endOffset": 924, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 930, "endOffset": 1047, "count": 9 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [
            { "startOffset": 1051, "endOffset": 1099, "count": 9 },
            { "startOffset": 1087, "endOffset": 1092, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "incRef",
          "ranges": [{ "startOffset": 1103, "endOffset": 1157, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "decRef",
          "ranges": [{ "startOffset": 1161, "endOffset": 1215, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "markActive",
          "ranges": [{ "startOffset": 1219, "endOffset": 1424, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "maybeMarkInactive",
          "ranges": [{ "startOffset": 1426, "endOffset": 1794, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "defaultTransform",
          "ranges": [{ "startOffset": 1796, "endOffset": 1846, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "wrapStoreRun",
          "ranges": [{ "startOffset": 1848, "endOffset": 2176, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "subscribe",
          "ranges": [{ "startOffset": 2258, "endOffset": 2492, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "unsubscribe",
          "ranges": [{ "startOffset": 2496, "endOffset": 2943, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "bindStore",
          "ranges": [{ "startOffset": 2947, "endOffset": 3115, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "unbindStore",
          "ranges": [{ "startOffset": 3119, "endOffset": 3318, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get hasSubscribers",
          "ranges": [{ "startOffset": 3322, "endOffset": 3365, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "publish",
          "ranges": [{ "startOffset": 3369, "endOffset": 3709, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "runStores",
          "ranges": [{ "startOffset": 3713, "endOffset": 4052, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Channel",
          "ranges": [{ "startOffset": 4074, "endOffset": 4215, "count": 9 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4226, "endOffset": 4411, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "subscribe",
          "ranges": [{ "startOffset": 4415, "endOffset": 4500, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "unsubscribe",
          "ranges": [{ "startOffset": 4504, "endOffset": 4541, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "bindStore",
          "ranges": [{ "startOffset": 4545, "endOffset": 4638, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "unbindStore",
          "ranges": [{ "startOffset": 4642, "endOffset": 4679, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get hasSubscribers",
          "ranges": [{ "startOffset": 4683, "endOffset": 4727, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "publish",
          "ranges": [{ "startOffset": 4731, "endOffset": 4743, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "runStores",
          "ranges": [{ "startOffset": 4747, "endOffset": 4834, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "channel",
          "ranges": [
            { "startOffset": 4874, "endOffset": 5140, "count": 9 },
            { "startOffset": 4952, "endOffset": 4967, "count": 0 },
            { "startOffset": 5000, "endOffset": 5027, "count": 0 },
            { "startOffset": 5029, "endOffset": 5109, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "subscribe",
          "ranges": [{ "startOffset": 5142, "endOffset": 5232, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "unsubscribe",
          "ranges": [{ "startOffset": 5234, "endOffset": 5328, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "hasSubscribers",
          "ranges": [{ "startOffset": 5330, "endOffset": 5465, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "assertChannel",
          "ranges": [{ "startOffset": 5554, "endOffset": 5696, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "tracingChannelFrom",
          "ranges": [
            { "startOffset": 5698, "endOffset": 6223, "count": 5 },
            { "startOffset": 5854, "endOffset": 5923, "count": 0 },
            { "startOffset": 5925, "endOffset": 6222, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "TracingChannel",
          "ranges": [
            { "startOffset": 6250, "endOffset": 6475, "count": 1 },
            { "startOffset": 6321, "endOffset": 6471, "count": 5 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get hasSubscribers",
          "ranges": [{ "startOffset": 6479, "endOffset": 6689, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "subscribe",
          "ranges": [{ "startOffset": 6693, "endOffset": 6845, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "unsubscribe",
          "ranges": [{ "startOffset": 6849, "endOffset": 7082, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "traceSync",
          "ranges": [{ "startOffset": 7086, "endOffset": 7597, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "tracePromise",
          "ranges": [{ "startOffset": 7601, "endOffset": 8787, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "traceCallback",
          "ranges": [{ "startOffset": 8791, "endOffset": 9884, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "tracingChannel",
          "ranges": [{ "startOffset": 9888, "endOffset": 9976, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "188",
      "url": "node:internal/perf/observe",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 16722, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "queuePending",
          "ranges": [{ "startOffset": 2600, "endOffset": 2861, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getObserverType",
          "ranges": [{ "startOffset": 2863, "endOffset": 3203, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "maybeDecrementObserverCounts",
          "ranges": [{ "startOffset": 3205, "endOffset": 3626, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "maybeIncrementObserverCount",
          "ranges": [{ "startOffset": 3628, "endOffset": 3970, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "performanceObserverSorter",
          "ranges": [{ "startOffset": 4047, "endOffset": 4114, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "PerformanceObserverEntryList",
          "ranges": [{ "startOffset": 4156, "endOffset": 4384, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getEntries",
          "ranges": [{ "startOffset": 4388, "endOffset": 4527, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getEntriesByType",
          "ranges": [{ "startOffset": 4531, "endOffset": 4835, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getEntriesByName",
          "ranges": [{ "startOffset": 4839, "endOffset": 5332, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 5336, "endOffset": 5584, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 5936, "endOffset": 9533, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "enqueue",
          "ranges": [{ "startOffset": 10015, "endOffset": 10217, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "bufferUserTiming",
          "ranges": [{ "startOffset": 10278, "endOffset": 11304, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "bufferResourceTiming",
          "ranges": [{ "startOffset": 11592, "endOffset": 12856, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setResourceTimingBufferSize",
          "ranges": [{ "startOffset": 12944, "endOffset": 13216, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setDispatchBufferFull",
          "ranges": [{ "startOffset": 13218, "endOffset": 13283, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "clearEntriesFromBuffer",
          "ranges": [{ "startOffset": 13285, "endOffset": 13885, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "filterBufferMapByNameAndType",
          "ranges": [{ "startOffset": 13887, "endOffset": 14729, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "observerCallback",
          "ranges": [{ "startOffset": 14731, "endOffset": 15847, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "hasObserver",
          "ranges": [{ "startOffset": 15884, "endOffset": 16003, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "startPerf",
          "ranges": [{ "startOffset": 16006, "endOffset": 16116, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "stopPerf",
          "ranges": [{ "startOffset": 16118, "endOffset": 16433, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "189",
      "url": "node:internal/perf/performance_entry",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 3272, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isPerformanceEntry",
          "ranges": [{ "startOffset": 675, "endOffset": 748, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "PerformanceEntry",
          "ranges": [{ "startOffset": 777, "endOffset": 1132, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get name",
          "ranges": [{ "startOffset": 1136, "endOffset": 1236, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get entryType",
          "ranges": [{ "startOffset": 1240, "endOffset": 1355, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get startTime",
          "ranges": [{ "startOffset": 1359, "endOffset": 1474, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get duration",
          "ranges": [{ "startOffset": 1478, "endOffset": 1590, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1594, "endOffset": 1838, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "toJSON",
          "ranges": [{ "startOffset": 1842, "endOffset": 2064, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createPerformanceEntry",
          "ranges": [{ "startOffset": 2286, "endOffset": 2422, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get detail",
          "ranges": [{ "startOffset": 2539, "endOffset": 2649, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "toJSON",
          "ranges": [{ "startOffset": 2653, "endOffset": 2904, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createPerformanceNodeEntry",
          "ranges": [{ "startOffset": 2908, "endOffset": 3112, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "190",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/package-json/lib/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 6290, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 774, "endOffset": 6259, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<static_initializer>",
          "ranges": [{ "startOffset": 1254, "endOffset": 1588, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "create",
          "ranges": [{ "startOffset": 1722, "endOffset": 1888, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "load",
          "ranges": [{ "startOffset": 1955, "endOffset": 2326, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fix",
          "ranges": [{ "startOffset": 2354, "endOffset": 2466, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "prepare",
          "ranges": [{ "startOffset": 2520, "endOffset": 2640, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "normalize",
          "ranges": [{ "startOffset": 2699, "endOffset": 2817, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "load",
          "ranges": [
            { "startOffset": 2918, "endOffset": 3648, "count": 3 },
            { "startOffset": 3061, "endOffset": 3152, "count": 0 },
            { "startOffset": 3172, "endOffset": 3595, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "fromJSON",
          "ranges": [{ "startOffset": 3693, "endOffset": 3763, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "fromContent",
          "ranges": [{ "startOffset": 3767, "endOffset": 3859, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fromComment",
          "ranges": [{ "startOffset": 3956, "endOffset": 4377, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get content",
          "ranges": [{ "startOffset": 4381, "endOffset": 4427, "count": 9 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get path",
          "ranges": [{ "startOffset": 4431, "endOffset": 4470, "count": 6 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get filename",
          "ranges": [
            { "startOffset": 4474, "endOffset": 4591, "count": 3 },
            { "startOffset": 4566, "endOffset": 4590, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "create",
          "ranges": [{ "startOffset": 4595, "endOffset": 4676, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "update",
          "ranges": [{ "startOffset": 4744, "endOffset": 5204, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "save",
          "ranges": [{ "startOffset": 5208, "endOffset": 5774, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "normalize",
          "ranges": [{ "startOffset": 5778, "endOffset": 5939, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "prepare",
          "ranges": [{ "startOffset": 5943, "endOffset": 6100, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fix",
          "ranges": [{ "startOffset": 6104, "endOffset": 6257, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "191",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/json-parse-even-better-errors/lib/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 4167, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "hexify",
          "ranges": [{ "startOffset": 697, "endOffset": 812, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "stripBOM",
          "ranges": [{ "startOffset": 1006, "endOffset": 1043, "count": 7 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "makeParsedError",
          "ranges": [{ "startOffset": 1069, "endOffset": 1164, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "parseError",
          "ranges": [{ "startOffset": 1185, "endOffset": 2247, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "JSONParseError",
          "ranges": [{ "startOffset": 2294, "endOffset": 2567, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get name",
          "ranges": [{ "startOffset": 2571, "endOffset": 2621, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set name",
          "ranges": [{ "startOffset": 2625, "endOffset": 2640, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2644, "endOffset": 2710, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "parseJson",
          "ranges": [
            { "startOffset": 2732, "endOffset": 3452, "count": 7 },
            { "startOffset": 3315, "endOffset": 3332, "count": 0 },
            { "startOffset": 3364, "endOffset": 3382, "count": 0 },
            { "startOffset": 3413, "endOffset": 3430, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "parseJsonError",
          "ranges": [
            { "startOffset": 3477, "endOffset": 3944, "count": 7 },
            { "startOffset": 3581, "endOffset": 3942, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "parseJsonError.noExceptions",
          "ranges": [{ "startOffset": 4055, "endOffset": 4166, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "192",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/package-json/lib/update-dependencies.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2026, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "orderDeps",
          "ranges": [{ "startOffset": 197, "endOffset": 516, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "updateDependencies",
          "ranges": [{ "startOffset": 545, "endOffset": 1947, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "193",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/package-json/lib/update-scripts.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 664, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "updateScripts",
          "ranges": [{ "startOffset": 22, "endOffset": 631, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "194",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/package-json/lib/update-workspaces.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 626, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "updateWorkspaces",
          "ranges": [{ "startOffset": 25, "endOffset": 590, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "195",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/package-json/lib/normalize.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 19899, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "lazyHostedGitInfo",
          "ranges": [{ "startOffset": 270, "endOffset": 404, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lazyLoadGlob",
          "ranges": [{ "startOffset": 455, "endOffset": 551, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "normalizePackageBin",
          "ranges": [
            { "startOffset": 593, "endOffset": 2175, "count": 3 },
            { "startOffset": 654, "endOffset": 2156, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 931, "endOffset": 1005, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "normalizePackageMan",
          "ranges": [{ "startOffset": 2177, "endOffset": 2650, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isCorrectlyEncodedName",
          "ranges": [{ "startOffset": 2652, "endOffset": 2769, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isValidScopedPackageName",
          "ranges": [{ "startOffset": 2771, "endOffset": 3080, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "unixifyPath",
          "ranges": [{ "startOffset": 3082, "endOffset": 3147, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "securePath",
          "ranges": [{ "startOffset": 3149, "endOffset": 3293, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "secureAndUnixifyPath",
          "ranges": [{ "startOffset": 3295, "endOffset": 3372, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "normalize",
          "ranges": [
            { "startOffset": 3586, "endOffset": 19870, "count": 3 },
            { "startOffset": 3674, "endOffset": 3736, "count": 0 },
            { "startOffset": 3795, "endOffset": 3800, "count": 0 },
            { "startOffset": 3830, "endOffset": 3835, "count": 0 },
            { "startOffset": 3852, "endOffset": 3857, "count": 0 },
            { "startOffset": 4007, "endOffset": 4858, "count": 0 },
            { "startOffset": 4936, "endOffset": 5462, "count": 0 },
            { "startOffset": 5573, "endOffset": 5699, "count": 39 },
            { "startOffset": 5606, "endOffset": 5693, "count": 0 },
            { "startOffset": 5817, "endOffset": 5823, "count": 0 },
            { "startOffset": 6091, "endOffset": 6155, "count": 0 },
            { "startOffset": 6167, "endOffset": 6173, "count": 0 },
            { "startOffset": 6427, "endOffset": 6478, "count": 0 },
            { "startOffset": 6480, "endOffset": 6599, "count": 0 },
            { "startOffset": 6622, "endOffset": 6781, "count": 0 },
            { "startOffset": 6794, "endOffset": 6819, "count": 0 },
            { "startOffset": 6821, "endOffset": 7003, "count": 0 },
            { "startOffset": 7043, "endOffset": 7143, "count": 0 },
            { "startOffset": 7502, "endOffset": 7536, "count": 1 },
            { "startOffset": 7537, "endOffset": 7585, "count": 0 },
            { "startOffset": 7587, "endOffset": 7922, "count": 0 },
            { "startOffset": 8017, "endOffset": 8438, "count": 0 },
            { "startOffset": 8522, "endOffset": 8539, "count": 0 },
            { "startOffset": 8541, "endOffset": 8787, "count": 0 },
            { "startOffset": 8924, "endOffset": 8955, "count": 0 },
            { "startOffset": 9130, "endOffset": 9555, "count": 42 },
            { "startOffset": 9184, "endOffset": 9296, "count": 0 },
            { "startOffset": 9335, "endOffset": 9367, "count": 0 },
            { "startOffset": 9369, "endOffset": 9547, "count": 0 },
            { "startOffset": 9561, "endOffset": 9649, "count": 0 },
            { "startOffset": 9711, "endOffset": 9746, "count": 0 },
            { "startOffset": 9748, "endOffset": 9877, "count": 0 },
            { "startOffset": 9949, "endOffset": 9970, "count": 0 },
            { "startOffset": 9972, "endOffset": 10378, "count": 0 },
            { "startOffset": 10444, "endOffset": 10459, "count": 0 },
            { "startOffset": 10461, "endOffset": 11372, "count": 0 },
            { "startOffset": 11432, "endOffset": 11826, "count": 0 },
            { "startOffset": 11856, "endOffset": 11883, "count": 0 },
            { "startOffset": 11884, "endOffset": 11912, "count": 0 },
            { "startOffset": 12021, "endOffset": 12045, "count": 0 },
            { "startOffset": 12046, "endOffset": 12058, "count": 0 },
            { "startOffset": 12060, "endOffset": 12500, "count": 0 },
            { "startOffset": 12568, "endOffset": 12584, "count": 0 },
            { "startOffset": 12586, "endOffset": 13956, "count": 0 },
            { "startOffset": 14025, "endOffset": 15167, "count": 0 },
            { "startOffset": 15651, "endOffset": 16626, "count": 0 },
            { "startOffset": 16704, "endOffset": 18622, "count": 0 },
            { "startOffset": 18663, "endOffset": 19341, "count": 0 },
            { "startOffset": 19520, "endOffset": 19549, "count": 0 },
            { "startOffset": 19551, "endOffset": 19868, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 10129, "endOffset": 10172, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 10190, "endOffset": 10202, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 11684, "endOffset": 11769, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 12228, "endOffset": 12438, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "legacyFixer.warn",
          "ranges": [{ "startOffset": 18843, "endOffset": 18924, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "196",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/semver/functions/clean.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 191, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "clean",
          "ranges": [{ "startOffset": 47, "endOffset": 167, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "197",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/package-json/lib/read-package.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1048, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "read",
          "ranges": [
            { "startOffset": 396, "endOffset": 596, "count": 3 },
            { "startOffset": 507, "endOffset": 594, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "parse",
          "ranges": [
            { "startOffset": 598, "endOffset": 771, "count": 3 },
            { "startOffset": 689, "endOffset": 769, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "readPackage",
          "ranges": [{ "startOffset": 869, "endOffset": 993, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "198",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/map-workspaces/lib/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 6836, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "appendNegatedPatterns",
          "ranges": [
            { "startOffset": 205, "endOffset": 1841, "count": 2 },
            { "startOffset": 338, "endOffset": 1510, "count": 4 },
            { "startOffset": 392, "endOffset": 445, "count": 0 },
            { "startOffset": 656, "endOffset": 683, "count": 0 },
            { "startOffset": 700, "endOffset": 743, "count": 0 },
            { "startOffset": 1313, "endOffset": 1471, "count": 0 },
            { "startOffset": 1673, "endOffset": 1800, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getPatterns",
          "ranges": [
            { "startOffset": 1843, "endOffset": 2219, "count": 2 },
            { "startOffset": 1956, "endOffset": 1977, "count": 0 },
            { "startOffset": 2043, "endOffset": 2162, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getPackageName",
          "ranges": [
            { "startOffset": 2221, "endOffset": 2322, "count": 4 },
            { "startOffset": 2300, "endOffset": 2320, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "pkgPathmame",
          "ranges": [{ "startOffset": 2324, "endOffset": 2484, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 2363, "endOffset": 2482, "count": 4 },
            { "startOffset": 2414, "endOffset": 2429, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getGlobPattern",
          "ranges": [
            { "startOffset": 2533, "endOffset": 2675, "count": 4 },
            { "startOffset": 2644, "endOffset": 2653, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getError",
          "ranges": [{ "startOffset": 2677, "endOffset": 2788, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "reverseResultMap",
          "ranges": [{ "startOffset": 2790, "endOffset": 2883, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "mapWorkspaces",
          "ranges": [
            { "startOffset": 2885, "endOffset": 5255, "count": 2 },
            { "startOffset": 2954, "endOffset": 3069, "count": 0 },
            { "startOffset": 3251, "endOffset": 3277, "count": 0 },
            { "startOffset": 3279, "endOffset": 3303, "count": 0 },
            { "startOffset": 3913, "endOffset": 4059, "count": 4 },
            { "startOffset": 4099, "endOffset": 4694, "count": 4 },
            { "startOffset": 4247, "endOffset": 4359, "count": 0 },
            { "startOffset": 4839, "endOffset": 5065, "count": 4 },
            { "startOffset": 4880, "endOffset": 4973, "count": 0 },
            { "startOffset": 5103, "endOffset": 5235, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getGlobOpts",
          "ranges": [{ "startOffset": 3327, "endOffset": 3528, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3618, "endOffset": 3642, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3716, "endOffset": 3750, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3957, "endOffset": 4053, "count": 8 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "addDuplicateErrorMessages",
          "ranges": [{ "startOffset": 5257, "endOffset": 5552, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "mapWorkspaces.virtual",
          "ranges": [{ "startOffset": 5578, "endOffset": 6803, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "199",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/name-from-folder/lib/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 225, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getName",
          "ranges": [{ "startOffset": 63, "endOffset": 136, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "module.exports",
          "ranges": [{ "startOffset": 155, "endOffset": 224, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "200",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/minimatch/dist/commonjs/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 40557, "count": 1 },
            { "startOffset": 3263, "endOffset": 3272, "count": 0 },
            { "startOffset": 3407, "endOffset": 3423, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "__importDefault",
          "ranges": [
            { "startOffset": 70, "endOffset": 151, "count": 1 },
            { "startOffset": 122, "endOffset": 127, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "minimatch",
          "ranges": [
            { "startOffset": 729, "endOffset": 1007, "count": 10 },
            { "startOffset": 923, "endOffset": 952, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "starDotExtTest",
          "ranges": [{ "startOffset": 1166, "endOffset": 1219, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "starDotExtTestDot",
          "ranges": [{ "startOffset": 1247, "endOffset": 1278, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "starDotExtTestNocase",
          "ranges": [{ "startOffset": 1309, "endOffset": 1421, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "starDotExtTestNocaseDot",
          "ranges": [{ "startOffset": 1455, "endOffset": 1545, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "starDotStarTest",
          "ranges": [{ "startOffset": 1607, "endOffset": 1651, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "starDotStarTestDot",
          "ranges": [{ "startOffset": 1680, "endOffset": 1729, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "dotStarTest",
          "ranges": [{ "startOffset": 1780, "endOffset": 1831, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "starTest",
          "ranges": [{ "startOffset": 1874, "endOffset": 1917, "count": 8 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "starTestDot",
          "ranges": [{ "startOffset": 1939, "endOffset": 1987, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "qmarksTestNocase",
          "ranges": [{ "startOffset": 2057, "endOffset": 2247, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "qmarksTestNocaseDot",
          "ranges": [{ "startOffset": 2277, "endOffset": 2470, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "qmarksTestDot",
          "ranges": [{ "startOffset": 2494, "endOffset": 2623, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "qmarksTest",
          "ranges": [{ "startOffset": 2644, "endOffset": 2770, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "qmarksTestNoExt",
          "ranges": [{ "startOffset": 2796, "endOffset": 2894, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "qmarksTestNoExtDot",
          "ranges": [{ "startOffset": 2923, "endOffset": 3026, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "filter",
          "ranges": [{ "startOffset": 4110, "endOffset": 4187, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ext",
          "ranges": [{ "startOffset": 4269, "endOffset": 4307, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "defaults",
          "ranges": [{ "startOffset": 4326, "endOffset": 5918, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "braceExpand",
          "ranges": [
            { "startOffset": 6266, "endOffset": 6670, "count": 18 },
            { "startOffset": 6616, "endOffset": 6669, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "makeRe",
          "ranges": [{ "startOffset": 7419, "endOffset": 7486, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "match",
          "ranges": [{ "startOffset": 7570, "endOffset": 7792, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "regExpEscape",
          "ranges": [{ "startOffset": 7956, "endOffset": 8008, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 8010, "endOffset": 39810, "count": 18 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "Minimatch",
          "ranges": [
            { "startOffset": 8290, "endOffset": 9487, "count": 18 },
            { "startOffset": 8421, "endOffset": 8426, "count": 0 },
            { "startOffset": 8533, "endOffset": 8551, "count": 10 },
            { "startOffset": 8684, "endOffset": 8723, "count": 10 },
            { "startOffset": 8764, "endOffset": 8836, "count": 8 },
            { "startOffset": 9260, "endOffset": 9288, "count": 0 },
            { "startOffset": 9325, "endOffset": 9339, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "hasMagic",
          "ranges": [{ "startOffset": 9492, "endOffset": 9819, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "debug",
          "ranges": [{ "startOffset": 9824, "endOffset": 9839, "count": 922 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "make",
          "ranges": [
            { "startOffset": 9844, "endOffset": 12674, "count": 18 },
            { "startOffset": 10014, "endOffset": 10042, "count": 10 },
            { "startOffset": 10044, "endOffset": 10108, "count": 0 },
            { "startOffset": 10131, "endOffset": 10193, "count": 0 },
            { "startOffset": 10384, "endOffset": 10457, "count": 0 },
            { "startOffset": 12238, "endOffset": 12624, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "debug",
          "ranges": [{ "startOffset": 10411, "endOffset": 10446, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 11087, "endOffset": 11110, "count": 18 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 11284, "endOffset": 11992, "count": 18 },
            { "startOffset": 11331, "endOffset": 11357, "count": 0 },
            { "startOffset": 11359, "endOffset": 11934, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 11749, "endOffset": 11769, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 11879, "endOffset": 11899, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 11960, "endOffset": 11980, "count": 48 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 12127, "endOffset": 12155, "count": 18 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "preprocess",
          "ranges": [
            { "startOffset": 12975, "endOffset": 14043, "count": 18 },
            { "startOffset": 13102, "endOffset": 13387, "count": 0 },
            { "startOffset": 13480, "endOffset": 13685, "count": 8 },
            { "startOffset": 13685, "endOffset": 14011, "count": 10 },
            { "startOffset": 13860, "endOffset": 14011, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "adjascentGlobstarOptimize",
          "ranges": [{ "startOffset": 14093, "endOffset": 14533, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "levelOneOptimize",
          "ranges": [{ "startOffset": 14593, "endOffset": 15248, "count": 10 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 14652, "endOffset": 15240, "count": 10 },
            { "startOffset": 15215, "endOffset": 15221, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 14696, "endOffset": 15170, "count": 24 },
            { "startOffset": 14797, "endOffset": 14813, "count": 0 },
            { "startOffset": 14815, "endOffset": 14866, "count": 0 },
            { "startOffset": 14902, "endOffset": 15096, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "levelTwoFileOptimize",
          "ranges": [
            { "startOffset": 15253, "endOffset": 16741, "count": 104 },
            { "startOffset": 15318, "endOffset": 15373, "count": 0 },
            { "startOffset": 15419, "endOffset": 16663, "count": 106 },
            { "startOffset": 15611, "endOffset": 16011, "count": 32 },
            { "startOffset": 15751, "endOffset": 15769, "count": 0 },
            { "startOffset": 15795, "endOffset": 15804, "count": 0 },
            { "startOffset": 15852, "endOffset": 15993, "count": 0 },
            { "startOffset": 16049, "endOffset": 16090, "count": 6 },
            { "startOffset": 16091, "endOffset": 16151, "count": 2 },
            { "startOffset": 16153, "endOffset": 16246, "count": 2 },
            { "startOffset": 16398, "endOffset": 16653, "count": 0 },
            { "startOffset": 16720, "endOffset": 16726, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "firstPhasePreProcess",
          "ranges": [
            { "startOffset": 17572, "endOffset": 20809, "count": 8 },
            { "startOffset": 18008, "endOffset": 18127, "count": 0 },
            { "startOffset": 18294, "endOffset": 18373, "count": 0 },
            { "startOffset": 18583, "endOffset": 18647, "count": 0 },
            { "startOffset": 18648, "endOffset": 18685, "count": 0 },
            { "startOffset": 18686, "endOffset": 18716, "count": 0 },
            { "startOffset": 18717, "endOffset": 18754, "count": 0 },
            { "startOffset": 18755, "endOffset": 18793, "count": 0 },
            { "startOffset": 18795, "endOffset": 19174, "count": 0 },
            { "startOffset": 19495, "endOffset": 19513, "count": 0 },
            { "startOffset": 19543, "endOffset": 19552, "count": 0 },
            { "startOffset": 19604, "endOffset": 19761, "count": 0 },
            { "startOffset": 19825, "endOffset": 19870, "count": 0 },
            { "startOffset": 19871, "endOffset": 19935, "count": 0 },
            { "startOffset": 19937, "endOffset": 20042, "count": 0 },
            { "startOffset": 20210, "endOffset": 20731, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "secondPhasePreProcess",
          "ranges": [
            { "startOffset": 21151, "endOffset": 21650, "count": 8 },
            { "startOffset": 21241, "endOffset": 21594, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 21627, "endOffset": 21642, "count": 8 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "partsMatch",
          "ranges": [{ "startOffset": 21655, "endOffset": 23232, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "parseNegate",
          "ranges": [
            { "startOffset": 23237, "endOffset": 23661, "count": 18 },
            { "startOffset": 23292, "endOffset": 23299, "count": 8 },
            { "startOffset": 23299, "endOffset": 23467, "count": 10 },
            { "startOffset": 23474, "endOffset": 23543, "count": 0 },
            { "startOffset": 23543, "endOffset": 23582, "count": 10 },
            { "startOffset": 23582, "endOffset": 23625, "count": 0 },
            { "startOffset": 23625, "endOffset": 23660, "count": 10 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "matchOne",
          "ranges": [
            { "startOffset": 23904, "endOffset": 32038, "count": 114 },
            { "startOffset": 24189, "endOffset": 25452, "count": 0 },
            { "startOffset": 25691, "endOffset": 25754, "count": 104 },
            { "startOffset": 25953, "endOffset": 25963, "count": 118 },
            { "startOffset": 25977, "endOffset": 30516, "count": 118 },
            { "startOffset": 26275, "endOffset": 26320, "count": 0 },
            { "startOffset": 26394, "endOffset": 30004, "count": 30 },
            { "startOffset": 27511, "endOffset": 28230, "count": 0 },
            { "startOffset": 28331, "endOffset": 29495, "count": 74 },
            { "startOffset": 28622, "endOffset": 28804, "count": 0 },
            { "startOffset": 29011, "endOffset": 29060, "count": 72 },
            { "startOffset": 29061, "endOffset": 29137, "count": 72 },
            { "startOffset": 29106, "endOffset": 29136, "count": 0 },
            { "startOffset": 29139, "endOffset": 29281, "count": 2 },
            { "startOffset": 29281, "endOffset": 29477, "count": 72 },
            { "startOffset": 29686, "endOffset": 29923, "count": 0 },
            { "startOffset": 30004, "endOffset": 30231, "count": 88 },
            { "startOffset": 30231, "endOffset": 30332, "count": 84 },
            { "startOffset": 30332, "endOffset": 30454, "count": 4 },
            { "startOffset": 30454, "endOffset": 30493, "count": 88 },
            { "startOffset": 30493, "endOffset": 30506, "count": 80 },
            { "startOffset": 30516, "endOffset": 31197, "count": 4 },
            { "startOffset": 31199, "endOffset": 31329, "count": 4 },
            { "startOffset": 31329, "endOffset": 32003, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "braceExpand",
          "ranges": [{ "startOffset": 32043, "endOffset": 32133, "count": 18 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "parse",
          "ranges": [
            { "startOffset": 32138, "endOffset": 33865, "count": 48 },
            { "startOffset": 32324, "endOffset": 32348, "count": 8 },
            { "startOffset": 32348, "endOffset": 32389, "count": 40 },
            { "startOffset": 32389, "endOffset": 32399, "count": 5 },
            { "startOffset": 32399, "endOffset": 32616, "count": 35 },
            { "startOffset": 32616, "endOffset": 32688, "count": 14 },
            { "startOffset": 32653, "endOffset": 32666, "count": 0 },
            { "startOffset": 32688, "endOffset": 33576, "count": 21 },
            { "startOffset": 32741, "endOffset": 33025, "count": 0 },
            { "startOffset": 33074, "endOffset": 33339, "count": 0 },
            { "startOffset": 33393, "endOffset": 33479, "count": 0 },
            { "startOffset": 33529, "endOffset": 33576, "count": 0 },
            { "startOffset": 33576, "endOffset": 33677, "count": 35 },
            { "startOffset": 33677, "endOffset": 33702, "count": 14 },
            { "startOffset": 33704, "endOffset": 33840, "count": 14 },
            { "startOffset": 33840, "endOffset": 33864, "count": 35 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "makeRe",
          "ranges": [{ "startOffset": 33870, "endOffset": 37227, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "slashSplit",
          "ranges": [
            { "startOffset": 37232, "endOffset": 37801, "count": 58 },
            { "startOffset": 37526, "endOffset": 37570, "count": 0 },
            { "startOffset": 37603, "endOffset": 37627, "count": 0 },
            { "startOffset": 37629, "endOffset": 37735, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "match",
          "ranges": [
            { "startOffset": 37806, "endOffset": 39717, "count": 40 },
            { "startOffset": 37994, "endOffset": 38031, "count": 0 },
            { "startOffset": 38056, "endOffset": 38096, "count": 0 },
            { "startOffset": 38119, "endOffset": 38129, "count": 0 },
            { "startOffset": 38131, "endOffset": 38167, "count": 0 },
            { "startOffset": 38275, "endOffset": 38327, "count": 0 },
            { "startOffset": 38919, "endOffset": 39046, "count": 18 },
            { "startOffset": 39191, "endOffset": 39214, "count": 0 },
            { "startOffset": 39216, "endOffset": 39266, "count": 0 },
            { "startOffset": 39351, "endOffset": 39496, "count": 4 },
            { "startOffset": 39393, "endOffset": 39445, "count": 0 },
            { "startOffset": 39506, "endOffset": 39646, "count": 36 },
            { "startOffset": 39646, "endOffset": 39683, "count": 0 },
            { "startOffset": 39683, "endOffset": 39716, "count": 36 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "defaults",
          "ranges": [{ "startOffset": 39729, "endOffset": 39808, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 39963, "endOffset": 39999, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 40112, "endOffset": 40154, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 40273, "endOffset": 40319, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "201",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/brace-expansion/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 4988, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "numeric",
          "ranges": [{ "startOffset": 298, "endOffset": 406, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "escapeBraces",
          "ranges": [{ "startOffset": 408, "endOffset": 645, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "unescapeBraces",
          "ranges": [{ "startOffset": 647, "endOffset": 876, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "parseCommaParts",
          "ranges": [{ "startOffset": 1040, "endOffset": 1506, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "expandTop",
          "ranges": [{ "startOffset": 1508, "endOffset": 2085, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "embrace",
          "ranges": [{ "startOffset": 2087, "endOffset": 2138, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isPadded",
          "ranges": [{ "startOffset": 2139, "endOffset": 2192, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lte",
          "ranges": [{ "startOffset": 2194, "endOffset": 2233, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "gte",
          "ranges": [{ "startOffset": 2234, "endOffset": 2273, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "expand",
          "ranges": [{ "startOffset": 2275, "endOffset": 4986, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "202",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/balanced-match/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1219, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "balanced",
          "ranges": [{ "startOffset": 41, "endOffset": 368, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "maybeMatch",
          "ranges": [{ "startOffset": 370, "endOffset": 455, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "range",
          "ranges": [{ "startOffset": 481, "endOffset": 1218, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "203",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/minimatch/dist/commonjs/assert-valid-pattern.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 492, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "assertValidPattern",
          "ranges": [
            { "startOffset": 179, "endOffset": 393, "count": 94 },
            { "startOffset": 231, "endOffset": 286, "count": 0 },
            { "startOffset": 332, "endOffset": 391, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "204",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/minimatch/dist/commonjs/ast.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 22821, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isExtglobType",
          "ranges": [{ "startOffset": 316, "endOffset": 335, "count": 199 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "regExpEscape",
          "ranges": [{ "startOffset": 1090, "endOffset": 1142, "count": 185 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 1541, "endOffset": 22770, "count": 35 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "AST",
          "ranges": [
            { "startOffset": 1848, "endOffset": 2417, "count": 35 },
            { "startOffset": 1989, "endOffset": 2011, "count": 0 },
            { "startOffset": 2077, "endOffset": 2097, "count": 0 },
            { "startOffset": 2160, "endOffset": 2181, "count": 0 },
            { "startOffset": 2229, "endOffset": 2247, "count": 0 },
            { "startOffset": 2274, "endOffset": 2300, "count": 0 },
            { "startOffset": 2314, "endOffset": 2336, "count": 0 },
            { "startOffset": 2378, "endOffset": 2406, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get hasMagic",
          "ranges": [{ "startOffset": 2422, "endOffset": 2892, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "toString",
          "ranges": [
            { "startOffset": 2929, "endOffset": 3286, "count": 70 },
            { "startOffset": 2996, "endOffset": 3134, "count": 35 },
            { "startOffset": 3134, "endOffset": 3280, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3098, "endOffset": 3112, "count": 35 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3237, "endOffset": 3251, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#fillNegs",
          "ranges": [
            { "startOffset": 3291, "endOffset": 4480, "count": 35 },
            { "startOffset": 3380, "endOffset": 3424, "count": 0 },
            { "startOffset": 3467, "endOffset": 3479, "count": 0 },
            { "startOffset": 3670, "endOffset": 4453, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "push",
          "ranges": [
            { "startOffset": 4485, "endOffset": 4857, "count": 35 },
            { "startOffset": 4577, "endOffset": 4586, "count": 0 },
            { "startOffset": 4659, "endOffset": 4703, "count": 0 },
            { "startOffset": 4705, "endOffset": 4775, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "toJSON",
          "ranges": [{ "startOffset": 4862, "endOffset": 5332, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isStart",
          "ranges": [
            { "startOffset": 5337, "endOffset": 5935, "count": 70 },
            { "startOffset": 5406, "endOffset": 5500, "count": 0 },
            { "startOffset": 5516, "endOffset": 5934, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "isEnd",
          "ranges": [
            { "startOffset": 5940, "endOffset": 6427, "count": 70 },
            { "startOffset": 6007, "endOffset": 6038, "count": 0 },
            { "startOffset": 6060, "endOffset": 6105, "count": 0 },
            { "startOffset": 6121, "endOffset": 6342, "count": 0 },
            { "startOffset": 6343, "endOffset": 6346, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "copyIn",
          "ranges": [{ "startOffset": 6432, "endOffset": 6573, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "clone",
          "ranges": [{ "startOffset": 6578, "endOffset": 6737, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#parseAST",
          "ranges": [
            { "startOffset": 6749, "endOffset": 10733, "count": 35 },
            { "startOffset": 7084, "endOffset": 8460, "count": 199 },
            { "startOffset": 7292, "endOffset": 7413, "count": 0 },
            { "startOffset": 7443, "endOffset": 7861, "count": 0 },
            { "startOffset": 7898, "endOffset": 8087, "count": 0 },
            { "startOffset": 8139, "endOffset": 8163, "count": 14 },
            { "startOffset": 8165, "endOffset": 8420, "count": 0 },
            { "startOffset": 8519, "endOffset": 10732, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "fromGlob",
          "ranges": [{ "startOffset": 10745, "endOffset": 10908, "count": 35 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "toMMPattern",
          "ranges": [
            { "startOffset": 11008, "endOffset": 11979, "count": 35 },
            { "startOffset": 11140, "endOffset": 11172, "count": 0 },
            { "startOffset": 11536, "endOffset": 11565, "count": 21 },
            { "startOffset": 11566, "endOffset": 11714, "count": 21 },
            { "startOffset": 11603, "endOffset": 11652, "count": 0 },
            { "startOffset": 11653, "endOffset": 11713, "count": 0 },
            { "startOffset": 11739, "endOffset": 11775, "count": 21 },
            { "startOffset": 11775, "endOffset": 11820, "count": 14 },
            { "startOffset": 11820, "endOffset": 11825, "count": 0 },
            { "startOffset": 11826, "endOffset": 11830, "count": 14 },
            { "startOffset": 11841, "endOffset": 11846, "count": 0 },
            { "startOffset": 11847, "endOffset": 11851, "count": 14 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get options",
          "ranges": [{ "startOffset": 11984, "endOffset": 12035, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "toRegExpSource",
          "ranges": [
            { "startOffset": 15478, "endOffset": 20597, "count": 35 },
            { "startOffset": 17037, "endOffset": 17062, "count": 4 },
            { "startOffset": 17193, "endOffset": 17218, "count": 0 },
            { "startOffset": 17354, "endOffset": 17379, "count": 0 },
            { "startOffset": 17582, "endOffset": 17594, "count": 31 },
            { "startOffset": 17595, "endOffset": 17620, "count": 31 },
            { "startOffset": 17665, "endOffset": 17683, "count": 0 },
            { "startOffset": 17696, "endOffset": 17708, "count": 14 },
            { "startOffset": 17709, "endOffset": 17713, "count": 21 },
            { "startOffset": 17971, "endOffset": 17977, "count": 0 },
            { "startOffset": 17987, "endOffset": 18037, "count": 0 },
            { "startOffset": 18283, "endOffset": 18540, "count": 0 },
            { "startOffset": 18614, "endOffset": 18627, "count": 0 },
            { "startOffset": 18628, "endOffset": 18635, "count": 0 },
            { "startOffset": 18709, "endOffset": 18724, "count": 0 },
            { "startOffset": 18725, "endOffset": 18733, "count": 0 },
            { "startOffset": 18734, "endOffset": 18754, "count": 0 },
            { "startOffset": 18756, "endOffset": 19206, "count": 0 },
            { "startOffset": 19207, "endOffset": 19213, "count": 0 },
            { "startOffset": 19214, "endOffset": 19228, "count": 0 },
            { "startOffset": 19241, "endOffset": 19245, "count": 0 },
            { "startOffset": 19258, "endOffset": 19285, "count": 0 },
            { "startOffset": 19324, "endOffset": 19600, "count": 0 },
            { "startOffset": 19602, "endOffset": 20596, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 15764, "endOffset": 16110, "count": 35 },
            { "startOffset": 15927, "endOffset": 15955, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#partsToRegExp",
          "ranges": [{ "startOffset": 20602, "endOffset": 21247, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#parseGlob",
          "ranges": [
            { "startOffset": 21259, "endOffset": 22768, "count": 35 },
            { "startOffset": 21429, "endOffset": 22687, "count": 199 },
            { "startOffset": 21495, "endOffset": 21629, "count": 0 },
            { "startOffset": 21658, "endOffset": 21874, "count": 0 },
            { "startOffset": 21902, "endOffset": 22272, "count": 0 },
            { "startOffset": 22300, "endOffset": 22511, "count": 14 },
            { "startOffset": 22385, "endOffset": 22438, "count": 0 },
            { "startOffset": 22511, "endOffset": 22539, "count": 185 },
            { "startOffset": 22539, "endOffset": 22642, "count": 0 },
            { "startOffset": 22642, "endOffset": 22687, "count": 185 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "205",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/minimatch/dist/commonjs/brace-expressions.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 5763, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "braceEscape",
          "ranges": [{ "startOffset": 1000, "endOffset": 1037, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "regexpEscape",
          "ranges": [{ "startOffset": 1098, "endOffset": 1150, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "rangesToString",
          "ranges": [{ "startOffset": 1236, "endOffset": 1263, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "parseClass",
          "ranges": [{ "startOffset": 1621, "endOffset": 5683, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "206",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/minimatch/dist/commonjs/unescape.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 973, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "unescape",
          "ranges": [
            { "startOffset": 694, "endOffset": 906, "count": 70 },
            { "startOffset": 783, "endOffset": 818, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "207",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/minimatch/dist/commonjs/escape.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 968, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "escape",
          "ranges": [{ "startOffset": 553, "endOffset": 907, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "208",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/read-package-json-fast/lib/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 3652, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "rpj",
          "ranges": [{ "startOffset": 254, "endOffset": 414, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 293, "endOffset": 359, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 370, "endOffset": 413, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readBinDir",
          "ranges": [
            { "startOffset": 488, "endOffset": 919, "count": 4 },
            { "startOffset": 528, "endOffset": 549, "count": 0 },
            { "startOffset": 580, "endOffset": 603, "count": 0 },
            { "startOffset": 613, "endOffset": 637, "count": 0 },
            { "startOffset": 660, "endOffset": 918, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "walkBinDir",
          "ranges": [{ "startOffset": 940, "endOffset": 1481, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "stripUnderscores",
          "ranges": [
            { "startOffset": 1562, "endOffset": 1679, "count": 4 },
            { "startOffset": 1637, "endOffset": 1663, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1617, "endOffset": 1634, "count": 44 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "normalize",
          "ranges": [{ "startOffset": 1699, "endOffset": 1854, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "addId",
          "ranges": [{ "startOffset": 1897, "endOffset": 2007, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "pruneRepeatedOptionals",
          "ranges": [
            { "startOffset": 2318, "endOffset": 2602, "count": 4 },
            { "startOffset": 2398, "endOffset": 2403, "count": 0 },
            { "startOffset": 2413, "endOffset": 2438, "count": 0 },
            { "startOffset": 2440, "endOffset": 2515, "count": 0 },
            { "startOffset": 2552, "endOffset": 2586, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "fixBundled",
          "ranges": [
            { "startOffset": 2623, "endOffset": 3187, "count": 4 },
            { "startOffset": 2733, "endOffset": 2758, "count": 0 },
            { "startOffset": 2780, "endOffset": 2818, "count": 0 },
            { "startOffset": 2841, "endOffset": 2913, "count": 0 },
            { "startOffset": 2926, "endOffset": 2951, "count": 0 },
            { "startOffset": 2953, "endOffset": 3090, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "fixScripts",
          "ranges": [
            { "startOffset": 3208, "endOffset": 3480, "count": 4 },
            { "startOffset": 3275, "endOffset": 3320, "count": 0 },
            { "startOffset": 3383, "endOffset": 3464, "count": 28 },
            { "startOffset": 3421, "endOffset": 3460, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "fixFunding",
          "ranges": [
            { "startOffset": 3501, "endOffset": 3629, "count": 4 },
            { "startOffset": 3530, "endOffset": 3565, "count": 0 },
            { "startOffset": 3567, "endOffset": 3613, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "209",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/npm-normalize-package-bin/lib/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1346, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "normalize",
          "ranges": [
            { "startOffset": 166, "endOffset": 378, "count": 4 },
            { "startOffset": 203, "endOffset": 378, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "normalizeString",
          "ranges": [{ "startOffset": 404, "endOffset": 529, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "normalizeArray",
          "ranges": [{ "startOffset": 554, "endOffset": 684, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "removeBin",
          "ranges": [{ "startOffset": 704, "endOffset": 744, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "normalizeObject",
          "ranges": [{ "startOffset": 770, "endOffset": 1317, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "210",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/glob/dist/commonjs/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2989, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 631, "endOffset": 673, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 746, "endOffset": 790, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 897, "endOffset": 935, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 1056, "endOffset": 1103, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 1216, "endOffset": 1258, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "globStreamSync",
          "ranges": [{ "startOffset": 1263, "endOffset": 1375, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "globStream",
          "ranges": [{ "startOffset": 1417, "endOffset": 1521, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "globSync",
          "ranges": [{ "startOffset": 1555, "endOffset": 1659, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "glob_",
          "ranges": [{ "startOffset": 1689, "endOffset": 1792, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "globIterateSync",
          "ranges": [{ "startOffset": 1793, "endOffset": 1907, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "globIterate",
          "ranges": [{ "startOffset": 1951, "endOffset": 2057, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "211",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/glob/dist/commonjs/glob.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 8546, "count": 1 },
            { "startOffset": 552, "endOffset": 561, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 626, "endOffset": 8492, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "Glob",
          "ranges": [
            { "startOffset": 1581, "endOffset": 5913, "count": 2 },
            { "startOffset": 1671, "endOffset": 1716, "count": 0 },
            { "startOffset": 2038, "endOffset": 2076, "count": 0 },
            { "startOffset": 2153, "endOffset": 2228, "count": 0 },
            { "startOffset": 2257, "endOffset": 2262, "count": 0 },
            { "startOffset": 2729, "endOffset": 2744, "count": 0 },
            { "startOffset": 2856, "endOffset": 2886, "count": 0 },
            { "startOffset": 2888, "endOffset": 2974, "count": 0 },
            { "startOffset": 3016, "endOffset": 3060, "count": 0 },
            { "startOffset": 3250, "endOffset": 3324, "count": 0 },
            { "startOffset": 3353, "endOffset": 3562, "count": 0 },
            { "startOffset": 3736, "endOffset": 3984, "count": 0 },
            { "startOffset": 4053, "endOffset": 4084, "count": 0 },
            { "startOffset": 4130, "endOffset": 4162, "count": 0 },
            { "startOffset": 4199, "endOffset": 4230, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3286, "endOffset": 3312, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3510, "endOffset": 3550, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 5366, "endOffset": 5404, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 5456, "endOffset": 5579, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 5629, "endOffset": 5905, "count": 4 },
            { "startOffset": 5749, "endOffset": 5791, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "walk",
          "ranges": [
            { "startOffset": 5918, "endOffset": 6667, "count": 2 },
            { "startOffset": 6392, "endOffset": 6453, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "walkSync",
          "ranges": [{ "startOffset": 6672, "endOffset": 7139, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "stream",
          "ranges": [{ "startOffset": 7144, "endOffset": 7547, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "streamSync",
          "ranges": [{ "startOffset": 7552, "endOffset": 7963, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "iterateSync",
          "ranges": [{ "startOffset": 8083, "endOffset": 8157, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 8162, "endOffset": 8224, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "iterate",
          "ranges": [{ "startOffset": 8351, "endOffset": 8422, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 8427, "endOffset": 8490, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "212",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/path-scurry/dist/commonjs/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 66122, "count": 1 },
            { "startOffset": 407, "endOffset": 488, "count": 0 },
            { "startOffset": 664, "endOffset": 706, "count": 0 },
            { "startOffset": 65687, "endOffset": 65698, "count": 0 },
            { "startOffset": 65989, "endOffset": 66006, "count": 0 },
            { "startOffset": 66043, "endOffset": 66061, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 88, "endOffset": 405, "count": 105 },
            { "startOffset": 232, "endOffset": 247, "count": 8 },
            { "startOffset": 248, "endOffset": 284, "count": 97 },
            { "startOffset": 264, "endOffset": 284, "count": 5 },
            { "startOffset": 287, "endOffset": 363, "count": 100 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 327, "endOffset": 354, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 410, "endOffset": 487, "count": 0 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 571, "endOffset": 662, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "__setModuleDefault",
          "ranges": [{ "startOffset": 666, "endOffset": 706, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "__importStar",
          "ranges": [
            { "startOffset": 759, "endOffset": 1039, "count": 1 },
            { "startOffset": 807, "endOffset": 818, "count": 0 },
            { "startOffset": 880, "endOffset": 981, "count": 105 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "fsFromOption",
          "ranges": [
            { "startOffset": 2223, "endOffset": 2478, "count": 4 },
            { "startOffset": 2273, "endOffset": 2297, "count": 0 },
            { "startOffset": 2318, "endOffset": 2478, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "uncToDrive",
          "ranges": [{ "startOffset": 2588, "endOffset": 2663, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "entToType",
          "ranges": [
            { "startOffset": 3789, "endOffset": 4096, "count": 6 },
            { "startOffset": 3807, "endOffset": 3814, "count": 0 },
            { "startOffset": 3853, "endOffset": 4096, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "normalize",
          "ranges": [
            { "startOffset": 4182, "endOffset": 4337, "count": 18 },
            { "startOffset": 4247, "endOffset": 4256, "count": 12 },
            { "startOffset": 4256, "endOffset": 4336, "count": 6 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "normalizeNocase",
          "ranges": [{ "startOffset": 4403, "endOffset": 4577, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ResolveCache",
          "ranges": [{ "startOffset": 4720, "endOffset": 4770, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "ChildrenCache",
          "ranges": [{ "startOffset": 5698, "endOffset": 5868, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "sizeCalculation",
          "ranges": [{ "startOffset": 5832, "endOffset": 5849, "count": 8 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 6519, "endOffset": 38140, "count": 12 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get dev",
          "ranges": [{ "startOffset": 7660, "endOffset": 7703, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get mode",
          "ranges": [{ "startOffset": 7719, "endOffset": 7764, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get nlink",
          "ranges": [{ "startOffset": 7781, "endOffset": 7828, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get uid",
          "ranges": [{ "startOffset": 7843, "endOffset": 7886, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get gid",
          "ranges": [{ "startOffset": 7901, "endOffset": 7944, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get rdev",
          "ranges": [{ "startOffset": 7960, "endOffset": 8005, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get blksize",
          "ranges": [{ "startOffset": 8024, "endOffset": 8075, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get ino",
          "ranges": [{ "startOffset": 8090, "endOffset": 8133, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get size",
          "ranges": [{ "startOffset": 8149, "endOffset": 8194, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get blocks",
          "ranges": [{ "startOffset": 8212, "endOffset": 8261, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get atimeMs",
          "ranges": [{ "startOffset": 8280, "endOffset": 8331, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get mtimeMs",
          "ranges": [{ "startOffset": 8350, "endOffset": 8401, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get ctimeMs",
          "ranges": [{ "startOffset": 8420, "endOffset": 8471, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get birthtimeMs",
          "ranges": [{ "startOffset": 8494, "endOffset": 8553, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get atime",
          "ranges": [{ "startOffset": 8570, "endOffset": 8617, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get mtime",
          "ranges": [{ "startOffset": 8634, "endOffset": 8681, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get ctime",
          "ranges": [{ "startOffset": 8698, "endOffset": 8745, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get birthtime",
          "ranges": [{ "startOffset": 8766, "endOffset": 8821, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get parentPath",
          "ranges": [{ "startOffset": 9243, "endOffset": 9316, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get path",
          "ranges": [{ "startOffset": 9493, "endOffset": 9543, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "PathBase",
          "ranges": [
            { "startOffset": 9736, "endOffset": 10394, "count": 12 },
            { "startOffset": 9868, "endOffset": 9891, "count": 0 },
            { "startOffset": 10032, "endOffset": 10039, "count": 2 },
            { "startOffset": 10266, "endOffset": 10317, "count": 10 },
            { "startOffset": 10317, "endOffset": 10388, "count": 2 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "depth",
          "ranges": [{ "startOffset": 10547, "endOffset": 10753, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "childrenCache",
          "ranges": [{ "startOffset": 10791, "endOffset": 10845, "count": 10 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "resolve",
          "ranges": [
            { "startOffset": 10948, "endOffset": 11340, "count": 8 },
            { "startOffset": 10983, "endOffset": 11207, "count": 4 },
            { "startOffset": 11207, "endOffset": 11267, "count": 0 },
            { "startOffset": 11280, "endOffset": 11310, "count": 4 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#resolveParts",
          "ranges": [{ "startOffset": 11345, "endOffset": 11496, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "children",
          "ranges": [
            { "startOffset": 11795, "endOffset": 12093, "count": 14 },
            { "startOffset": 11877, "endOffset": 11915, "count": 6 },
            { "startOffset": 11915, "endOffset": 12092, "count": 8 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "child",
          "ranges": [
            { "startOffset": 12498, "endOffset": 13714, "count": 6 },
            { "startOffset": 12571, "endOffset": 12607, "count": 0 },
            { "startOffset": 12639, "endOffset": 12690, "count": 0 },
            { "startOffset": 12792, "endOffset": 12819, "count": 0 },
            { "startOffset": 12877, "endOffset": 12969, "count": 2 },
            { "startOffset": 12918, "endOffset": 12959, "count": 0 },
            { "startOffset": 13175, "endOffset": 13185, "count": 4 },
            { "startOffset": 13186, "endOffset": 13190, "count": 2 },
            { "startOffset": 13232, "endOffset": 13263, "count": 4 },
            { "startOffset": 13264, "endOffset": 13275, "count": 2 },
            { "startOffset": 13448, "endOffset": 13495, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "relative",
          "ranges": [
            { "startOffset": 13881, "endOffset": 14271, "count": 62 },
            { "startOffset": 13930, "endOffset": 13940, "count": 0 },
            { "startOffset": 13983, "endOffset": 14029, "count": 22 },
            { "startOffset": 14029, "endOffset": 14109, "count": 40 },
            { "startOffset": 14109, "endOffset": 14169, "count": 0 },
            { "startOffset": 14169, "endOffset": 14228, "count": 40 },
            { "startOffset": 14228, "endOffset": 14240, "count": 20 },
            { "startOffset": 14241, "endOffset": 14245, "count": 20 },
            { "startOffset": 14246, "endOffset": 14256, "count": 20 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "relativePosix",
          "ranges": [{ "startOffset": 14539, "endOffset": 15014, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fullpath",
          "ranges": [
            { "startOffset": 15093, "endOffset": 15471, "count": 46 },
            { "startOffset": 15148, "endOffset": 15194, "count": 38 },
            { "startOffset": 15194, "endOffset": 15274, "count": 8 },
            { "startOffset": 15274, "endOffset": 15334, "count": 2 },
            { "startOffset": 15334, "endOffset": 15403, "count": 6 },
            { "startOffset": 15403, "endOffset": 15407, "count": 2 },
            { "startOffset": 15408, "endOffset": 15418, "count": 4 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "fullpathPosix",
          "ranges": [{ "startOffset": 15670, "endOffset": 16350, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isUnknown",
          "ranges": [{ "startOffset": 16621, "endOffset": 16688, "count": 6 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isType",
          "ranges": [{ "startOffset": 16693, "endOffset": 16749, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getType",
          "ranges": [{ "startOffset": 16754, "endOffset": 17330, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isFile",
          "ranges": [{ "startOffset": 17386, "endOffset": 17448, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isDirectory",
          "ranges": [{ "startOffset": 17501, "endOffset": 17568, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isCharacterDevice",
          "ranges": [{ "startOffset": 17628, "endOffset": 17701, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isBlockDevice",
          "ranges": [{ "startOffset": 17757, "endOffset": 17826, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isFIFO",
          "ranges": [{ "startOffset": 17879, "endOffset": 17941, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isSocket",
          "ranges": [{ "startOffset": 17991, "endOffset": 18056, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isSymbolicLink",
          "ranges": [{ "startOffset": 18113, "endOffset": 18184, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lstatCached",
          "ranges": [{ "startOffset": 18436, "endOffset": 18518, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readlinkCached",
          "ranges": [{ "startOffset": 18879, "endOffset": 18936, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "realpathCached",
          "ranges": [{ "startOffset": 19302, "endOffset": 19357, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readdirCached",
          "ranges": [{ "startOffset": 19740, "endOffset": 19861, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "canReadlink",
          "ranges": [{ "startOffset": 20158, "endOffset": 20507, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "calledReaddir",
          "ranges": [{ "startOffset": 20668, "endOffset": 20739, "count": 8 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isENOENT",
          "ranges": [{ "startOffset": 20988, "endOffset": 21046, "count": 8 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isNamed",
          "ranges": [{ "startOffset": 21515, "endOffset": 21662, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readlink",
          "ranges": [{ "startOffset": 21976, "endOffset": 22755, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readlinkSync",
          "ranges": [{ "startOffset": 22821, "endOffset": 23583, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#readdirSuccess",
          "ranges": [
            { "startOffset": 23588, "endOffset": 23934, "count": 4 },
            { "startOffset": 23830, "endOffset": 23928, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#markENOENT",
          "ranges": [{ "startOffset": 23939, "endOffset": 24146, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#markChildrenENOENT",
          "ranges": [{ "startOffset": 24151, "endOffset": 24388, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#markENOREALPATH",
          "ranges": [{ "startOffset": 24393, "endOffset": 24483, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#markENOTDIR",
          "ranges": [{ "startOffset": 24552, "endOffset": 25215, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#readdirFail",
          "ranges": [{ "startOffset": 25220, "endOffset": 25559, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#lstatFail",
          "ranges": [{ "startOffset": 25564, "endOffset": 25974, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#readlinkFail",
          "ranges": [{ "startOffset": 25979, "endOffset": 26723, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#readdirAddChild",
          "ranges": [{ "startOffset": 26728, "endOffset": 26859, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "#readdirAddNewChild",
          "ranges": [
            { "startOffset": 26864, "endOffset": 27291, "count": 4 },
            { "startOffset": 27126, "endOffset": 27143, "count": 0 },
            { "startOffset": 27144, "endOffset": 27163, "count": 0 },
            { "startOffset": 27165, "endOffset": 27212, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#readdirMaybePromoteChild",
          "ranges": [
            { "startOffset": 27296, "endOffset": 27668, "count": 4 },
            { "startOffset": 27385, "endOffset": 27662, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#readdirPromoteChild",
          "ranges": [{ "startOffset": 27673, "endOffset": 28359, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lstat",
          "ranges": [
            { "startOffset": 28996, "endOffset": 29293, "count": 2 },
            { "startOffset": 29209, "endOffset": 29277, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "lstatSync",
          "ranges": [{ "startOffset": 29356, "endOffset": 29640, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#applyStat",
          "ranges": [
            { "startOffset": 29645, "endOffset": 30636, "count": 2 },
            { "startOffset": 30565, "endOffset": 30582, "count": 0 },
            { "startOffset": 30584, "endOffset": 30630, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#callOnReaddirCB",
          "ranges": [{ "startOffset": 30696, "endOffset": 30903, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 30871, "endOffset": 30895, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "readdirCB",
          "ranges": [
            { "startOffset": 31669, "endOffset": 33155, "count": 4 },
            { "startOffset": 31737, "endOffset": 31895, "count": 0 },
            { "startOffset": 31972, "endOffset": 32191, "count": 0 },
            { "startOffset": 32323, "endOffset": 32354, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 31845, "endOffset": 31863, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 32142, "endOffset": 32159, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 32605, "endOffset": 33147, "count": 4 },
            { "startOffset": 32644, "endOffset": 32745, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "readdir",
          "ranges": [{ "startOffset": 33456, "endOffset": 34698, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readdirSync",
          "ranges": [{ "startOffset": 34763, "endOffset": 35564, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "canReaddir",
          "ranges": [
            { "startOffset": 35569, "endOffset": 35953, "count": 30 },
            { "startOffset": 35631, "endOffset": 35644, "count": 0 },
            { "startOffset": 35822, "endOffset": 35839, "count": 18 },
            { "startOffset": 35840, "endOffset": 35857, "count": 0 },
            { "startOffset": 35860, "endOffset": 35897, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "shouldWalk",
          "ranges": [{ "startOffset": 35958, "endOffset": 36163, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "realpath",
          "ranges": [{ "startOffset": 36482, "endOffset": 36883, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "realpathSync",
          "ranges": [{ "startOffset": 36940, "endOffset": 37328, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 37482, "endOffset": 38138, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 38341, "endOffset": 40226, "count": 0 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 40347, "endOffset": 41268, "count": 12 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "PathPosix",
          "ranges": [{ "startOffset": 40728, "endOffset": 40870, "count": 12 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getRootString",
          "ranges": [
            { "startOffset": 40908, "endOffset": 40983, "count": 4 },
            { "startOffset": 40966, "endOffset": 40971, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getRoot",
          "ranges": [{ "startOffset": 41021, "endOffset": 41073, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "newChild",
          "ranges": [{ "startOffset": 41111, "endOffset": 41266, "count": 10 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 41625, "endOffset": 62674, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "PathScurryBase",
          "ranges": [
            { "startOffset": 42470, "endOffset": 44270, "count": 2 },
            { "startOffset": 42683, "endOffset": 42748, "count": 0 },
            { "startOffset": 43365, "endOffset": 43401, "count": 0 },
            { "startOffset": 43466, "endOffset": 43564, "count": 0 },
            { "startOffset": 44160, "endOffset": 44164, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "depth",
          "ranges": [{ "startOffset": 44351, "endOffset": 44503, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "childrenCache",
          "ranges": [{ "startOffset": 44678, "endOffset": 44732, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "resolve",
          "ranges": [{ "startOffset": 45047, "endOffset": 45748, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "resolvePosix",
          "ranges": [{ "startOffset": 46210, "endOffset": 46931, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "relative",
          "ranges": [{ "startOffset": 47032, "endOffset": 47195, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "relativePosix",
          "ranges": [{ "startOffset": 47352, "endOffset": 47525, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "basename",
          "ranges": [{ "startOffset": 47612, "endOffset": 47769, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "dirname",
          "ranges": [{ "startOffset": 47855, "endOffset": 48035, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readdir",
          "ranges": [{ "startOffset": 48040, "endOffset": 48572, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readdirSync",
          "ranges": [{ "startOffset": 48577, "endOffset": 49151, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lstat",
          "ranges": [{ "startOffset": 49804, "endOffset": 49967, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lstatSync",
          "ranges": [{ "startOffset": 50036, "endOffset": 50201, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readlink",
          "ranges": [{ "startOffset": 50206, "endOffset": 50631, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "readlinkSync",
          "ranges": [{ "startOffset": 50636, "endOffset": 51057, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "realpath",
          "ranges": [{ "startOffset": 51062, "endOffset": 51487, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "realpathSync",
          "ranges": [{ "startOffset": 51492, "endOffset": 51913, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "walk",
          "ranges": [{ "startOffset": 51918, "endOffset": 54055, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "walkSync",
          "ranges": [{ "startOffset": 54060, "endOffset": 55248, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 55596, "endOffset": 55659, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "iterate",
          "ranges": [{ "startOffset": 55664, "endOffset": 56234, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 56378, "endOffset": 56440, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "iterateSync",
          "ranges": [{ "startOffset": 56445, "endOffset": 57569, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "stream",
          "ranges": [{ "startOffset": 57574, "endOffset": 60521, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "streamSync",
          "ranges": [{ "startOffset": 60526, "endOffset": 62491, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "chdir",
          "ranges": [{ "startOffset": 62496, "endOffset": 62672, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 62894, "endOffset": 64020, "count": 0 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 64281, "endOffset": 65000, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "PathScurryPosix",
          "ranges": [{ "startOffset": 64408, "endOffset": 64595, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "parseRootPath",
          "ranges": [{ "startOffset": 64633, "endOffset": 64680, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "newRoot",
          "ranges": [{ "startOffset": 64718, "endOffset": 64855, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isAbsolute",
          "ranges": [{ "startOffset": 64943, "endOffset": 64998, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "PathScurryDarwin",
          "ranges": [{ "startOffset": 65309, "endOffset": 65441, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "213",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/lru-cache/dist/commonjs/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 50987, "count": 1 },
            { "startOffset": 263, "endOffset": 269, "count": 0 },
            { "startOffset": 387, "endOffset": 391, "count": 0 },
            { "startOffset": 740, "endOffset": 2309, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "emitWarning",
          "ranges": [{ "startOffset": 436, "endOffset": 615, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 768, "endOffset": 954, "count": 0 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 982, "endOffset": 1491, "count": 0 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "warnACPolyfill",
          "ranges": [{ "startOffset": 1603, "endOffset": 2306, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "shouldWarn",
          "ranges": [{ "startOffset": 2350, "endOffset": 2377, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isPosInt",
          "ranges": [
            { "startOffset": 2425, "endOffset": 2480, "count": 40 },
            { "startOffset": 2434, "endOffset": 2456, "count": 30 },
            { "startOffset": 2457, "endOffset": 2465, "count": 30 },
            { "startOffset": 2466, "endOffset": 2480, "count": 30 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getUintArray",
          "ranges": [
            { "startOffset": 2995, "endOffset": 3312, "count": 10 },
            { "startOffset": 3023, "endOffset": 3029, "count": 2 },
            { "startOffset": 3034, "endOffset": 3312, "count": 8 },
            { "startOffset": 3087, "endOffset": 3312, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "ZeroArray",
          "ranges": [{ "startOffset": 3371, "endOffset": 3439, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 3442, "endOffset": 4192, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<static_initializer>",
          "ranges": [{ "startOffset": 3509, "endOffset": 3537, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "create",
          "ranges": [
            { "startOffset": 3550, "endOffset": 3791, "count": 6 },
            { "startOffset": 3641, "endOffset": 3651, "count": 2 },
            { "startOffset": 3651, "endOffset": 3790, "count": 4 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Stack",
          "ranges": [
            { "startOffset": 3796, "endOffset": 4073, "count": 4 },
            { "startOffset": 3888, "endOffset": 3975, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "push",
          "ranges": [{ "startOffset": 4078, "endOffset": 4131, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "pop",
          "ranges": [{ "startOffset": 4136, "endOffset": 4190, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 4579, "endOffset": 50924, "count": 6 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "unsafeExposeInternals",
          "ranges": [{ "startOffset": 6762, "endOffset": 7672, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get max",
          "ranges": [{ "startOffset": 7780, "endOffset": 7823, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get maxSize",
          "ranges": [{ "startOffset": 7900, "endOffset": 7951, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get calculatedSize",
          "ranges": [{ "startOffset": 8037, "endOffset": 8102, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get size",
          "ranges": [{ "startOffset": 8182, "endOffset": 8227, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get fetchMethod",
          "ranges": [{ "startOffset": 8308, "endOffset": 8367, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get dispose",
          "ranges": [{ "startOffset": 8444, "endOffset": 8495, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get disposeAfter",
          "ranges": [{ "startOffset": 8577, "endOffset": 8638, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "LRUCache",
          "ranges": [
            { "startOffset": 8643, "endOffset": 13058, "count": 6 },
            { "startOffset": 9037, "endOffset": 9054, "count": 4 },
            { "startOffset": 9056, "endOffset": 9144, "count": 0 },
            { "startOffset": 9175, "endOffset": 9194, "count": 4 },
            { "startOffset": 9195, "endOffset": 9202, "count": 2 },
            { "startOffset": 9228, "endOffset": 9297, "count": 0 },
            { "startOffset": 9497, "endOffset": 9837, "count": 2 },
            { "startOffset": 9530, "endOffset": 9551, "count": 0 },
            { "startOffset": 9553, "endOffset": 9675, "count": 0 },
            { "startOffset": 9736, "endOffset": 9827, "count": 0 },
            { "startOffset": 9876, "endOffset": 9924, "count": 0 },
            { "startOffset": 9926, "endOffset": 10017, "count": 0 },
            { "startOffset": 10522, "endOffset": 10570, "count": 0 },
            { "startOffset": 10619, "endOffset": 10710, "count": 0 },
            { "startOffset": 11359, "endOffset": 11780, "count": 2 },
            { "startOffset": 11446, "endOffset": 11557, "count": 0 },
            { "startOffset": 11618, "endOffset": 11726, "count": 0 },
            { "startOffset": 12038, "endOffset": 12060, "count": 0 },
            { "startOffset": 12109, "endOffset": 12112, "count": 0 },
            { "startOffset": 12209, "endOffset": 12400, "count": 0 },
            { "startOffset": 12481, "endOffset": 12498, "count": 2 },
            { "startOffset": 12499, "endOffset": 12521, "count": 2 },
            { "startOffset": 12523, "endOffset": 12619, "count": 0 },
            { "startOffset": 12665, "endOffset": 12682, "count": 2 },
            { "startOffset": 12684, "endOffset": 13052, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getRemainingTTL",
          "ranges": [{ "startOffset": 13138, "endOffset": 13219, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#initializeTTLTracking",
          "ranges": [{ "startOffset": 13224, "endOffset": 15889, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#updateItemAge",
          "ranges": [{ "startOffset": 15967, "endOffset": 15976, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#statusTTL",
          "ranges": [{ "startOffset": 15995, "endOffset": 16004, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#setItemTTL",
          "ranges": [{ "startOffset": 16024, "endOffset": 16033, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#isStale",
          "ranges": [{ "startOffset": 16075, "endOffset": 16086, "count": 6 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "#initializeSizeTracking",
          "ranges": [{ "startOffset": 16092, "endOffset": 17958, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "#removeItemSize",
          "ranges": [{ "startOffset": 16262, "endOffset": 16362, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#requireSize",
          "ranges": [
            { "startOffset": 16392, "endOffset": 17431, "count": 8 },
            { "startOffset": 16594, "endOffset": 16635, "count": 0 },
            { "startOffset": 16773, "endOffset": 16879, "count": 0 },
            { "startOffset": 16971, "endOffset": 17099, "count": 0 },
            { "startOffset": 17117, "endOffset": 17382, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#addItemSize",
          "ranges": [
            { "startOffset": 17461, "endOffset": 17951, "count": 8 },
            { "startOffset": 17671, "endOffset": 17729, "count": 0 },
            { "startOffset": 17818, "endOffset": 17941, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#removeItemSize",
          "ranges": [{ "startOffset": 17981, "endOffset": 17990, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#addItemSize",
          "ranges": [{ "startOffset": 18011, "endOffset": 18031, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#requireSize",
          "ranges": [{ "startOffset": 18052, "endOffset": 18262, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#indexes",
          "ranges": [{ "startOffset": 18268, "endOffset": 18778, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#rindexes",
          "ranges": [{ "startOffset": 18783, "endOffset": 19294, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#isValidIndex",
          "ranges": [{ "startOffset": 19299, "endOffset": 19429, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "entries",
          "ranges": [{ "startOffset": 19571, "endOffset": 19878, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "rentries",
          "ranges": [{ "startOffset": 20084, "endOffset": 20393, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "keys",
          "ranges": [{ "startOffset": 20536, "endOffset": 20780, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "rkeys",
          "ranges": [{ "startOffset": 20984, "endOffset": 21230, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "values",
          "ranges": [{ "startOffset": 21375, "endOffset": 21636, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "rvalues",
          "ranges": [{ "startOffset": 21844, "endOffset": 22107, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 22226, "endOffset": 22284, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "find",
          "ranges": [{ "startOffset": 22672, "endOffset": 23106, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "forEach",
          "ranges": [{ "startOffset": 23382, "endOffset": 23745, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "rforEach",
          "ranges": [{ "startOffset": 23920, "endOffset": 24285, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "purgeStale",
          "ranges": [{ "startOffset": 24401, "endOffset": 24677, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "info",
          "ranges": [{ "startOffset": 24993, "endOffset": 25762, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "dump",
          "ranges": [{ "startOffset": 25889, "endOffset": 26839, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "load",
          "ranges": [{ "startOffset": 27060, "endOffset": 27705, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [
            { "startOffset": 27871, "endOffset": 31796, "count": 8 },
            { "startOffset": 27929, "endOffset": 27993, "count": 0 },
            { "startOffset": 28448, "endOffset": 28708, "count": 0 },
            { "startOffset": 28746, "endOffset": 28757, "count": 2 },
            { "startOffset": 28758, "endOffset": 28779, "count": 6 },
            { "startOffset": 28894, "endOffset": 28906, "count": 2 },
            { "startOffset": 28923, "endOffset": 29116, "count": 6 },
            { "startOffset": 28969, "endOffset": 28987, "count": 0 },
            { "startOffset": 29059, "endOffset": 29079, "count": 0 },
            { "startOffset": 29473, "endOffset": 29492, "count": 0 },
            { "startOffset": 29535, "endOffset": 31220, "count": 0 },
            { "startOffset": 31243, "endOffset": 31257, "count": 0 },
            { "startOffset": 31259, "endOffset": 31313, "count": 0 },
            { "startOffset": 31338, "endOffset": 31520, "count": 0 },
            { "startOffset": 31574, "endOffset": 31591, "count": 0 },
            { "startOffset": 31593, "endOffset": 31769, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "pop",
          "ranges": [{ "startOffset": 31921, "endOffset": 32678, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#evict",
          "ranges": [{ "startOffset": 32683, "endOffset": 33751, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "has",
          "ranges": [{ "startOffset": 34051, "endOffset": 34988, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "peek",
          "ranges": [{ "startOffset": 35217, "endOffset": 35662, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#backgroundFetch",
          "ranges": [{ "startOffset": 35667, "endOffset": 40793, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#isBackgroundFetch",
          "ranges": [
            { "startOffset": 40798, "endOffset": 41072, "count": 14 },
            { "startOffset": 40882, "endOffset": 40959, "count": 0 },
            { "startOffset": 40960, "endOffset": 41015, "count": 0 },
            { "startOffset": 41016, "endOffset": 41064, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "fetch",
          "ranges": [{ "startOffset": 41077, "endOffset": 44404, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [
            { "startOffset": 44590, "endOffset": 46726, "count": 14 },
            { "startOffset": 44846, "endOffset": 46650, "count": 6 },
            { "startOffset": 44997, "endOffset": 45028, "count": 0 },
            { "startOffset": 45067, "endOffset": 45874, "count": 0 },
            { "startOffset": 45942, "endOffset": 45961, "count": 0 },
            { "startOffset": 46377, "endOffset": 46451, "count": 0 },
            { "startOffset": 46529, "endOffset": 46596, "count": 0 },
            { "startOffset": 46650, "endOffset": 46720, "count": 8 },
            { "startOffset": 46676, "endOffset": 46720, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#connect",
          "ranges": [{ "startOffset": 46731, "endOffset": 46807, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#moveToTail",
          "ranges": [
            { "startOffset": 46812, "endOffset": 47474, "count": 6 },
            { "startOffset": 47175, "endOffset": 47468, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "delete",
          "ranges": [{ "startOffset": 47595, "endOffset": 49602, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "clear",
          "ranges": [{ "startOffset": 49682, "endOffset": 50922, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "214",
      "url": "node:perf_hooks",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1065, "count": 1 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "215",
      "url": "node:internal/perf/resource_timing",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 7433, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "PerformanceResourceTiming",
          "ranges": [{ "startOffset": 831, "endOffset": 1045, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get name",
          "ranges": [{ "startOffset": 1049, "endOffset": 1174, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get startTime",
          "ranges": [{ "startOffset": 1178, "endOffset": 1314, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get duration",
          "ranges": [{ "startOffset": 1318, "endOffset": 1481, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get initiatorType",
          "ranges": [{ "startOffset": 1485, "endOffset": 1621, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get workerStart",
          "ranges": [{ "startOffset": 1625, "endOffset": 1781, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get redirectStart",
          "ranges": [{ "startOffset": 1785, "endOffset": 1933, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get redirectEnd",
          "ranges": [{ "startOffset": 1937, "endOffset": 2081, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get fetchStart",
          "ranges": [{ "startOffset": 2085, "endOffset": 2234, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get domainLookupStart",
          "ranges": [{ "startOffset": 2238, "endOffset": 2421, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get domainLookupEnd",
          "ranges": [{ "startOffset": 2425, "endOffset": 2604, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get connectStart",
          "ranges": [{ "startOffset": 2608, "endOffset": 2784, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get connectEnd",
          "ranges": [{ "startOffset": 2788, "endOffset": 2960, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get secureConnectionStart",
          "ranges": [{ "startOffset": 2964, "endOffset": 3162, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get nextHopProtocol",
          "ranges": [{ "startOffset": 3166, "endOffset": 3355, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get requestStart",
          "ranges": [{ "startOffset": 3359, "endOffset": 3517, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get responseStart",
          "ranges": [{ "startOffset": 3521, "endOffset": 3681, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get responseEnd",
          "ranges": [{ "startOffset": 3685, "endOffset": 3821, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get encodedBodySize",
          "ranges": [{ "startOffset": 3825, "endOffset": 3973, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get decodedBodySize",
          "ranges": [{ "startOffset": 3977, "endOffset": 4125, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get transferSize",
          "ranges": [{ "startOffset": 4129, "endOffset": 4383, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "toJSON",
          "ranges": [{ "startOffset": 4387, "endOffset": 5328, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createPerformanceResourceTiming",
          "ranges": [{ "startOffset": 6196, "endOffset": 6793, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "markResourceTiming",
          "ranges": [{ "startOffset": 6862, "endOffset": 7358, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "216",
      "url": "node:internal/perf/usertiming",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 6446, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getMark",
          "ranges": [{ "startOffset": 1134, "endOffset": 1586, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "PerformanceMark",
          "ranges": [{ "startOffset": 1639, "endOffset": 2370, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get detail",
          "ranges": [{ "startOffset": 2374, "endOffset": 2479, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "toJSON",
          "ranges": [{ "startOffset": 2483, "endOffset": 2666, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "PerformanceMeasure",
          "ranges": [{ "startOffset": 2917, "endOffset": 3214, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get detail",
          "ranges": [{ "startOffset": 3218, "endOffset": 3326, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "toJSON",
          "ranges": [{ "startOffset": 3330, "endOffset": 3513, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createPerformanceMeasure",
          "ranges": [{ "startOffset": 3715, "endOffset": 3920, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "mark",
          "ranges": [{ "startOffset": 3922, "endOffset": 4063, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "calculateStartDuration",
          "ranges": [{ "startOffset": 4065, "endOffset": 5648, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "measure",
          "ranges": [{ "startOffset": 5650, "endOffset": 6085, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "clearMarkTimings",
          "ranges": [{ "startOffset": 6087, "endOffset": 6342, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "217",
      "url": "node:internal/perf/nodetiming",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 3858, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "PerformanceNodeTiming",
          "ranges": [{ "startOffset": 746, "endOffset": 3084, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 1411, "endOffset": 1507, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 1623, "endOffset": 1717, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 1837, "endOffset": 1934, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 2052, "endOffset": 2148, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 2265, "endOffset": 2360, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 2486, "endOffset": 2603, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 2864, "endOffset": 3062, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3088, "endOffset": 3329, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "toJSON",
          "ranges": [{ "startOffset": 3333, "endOffset": 3719, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "218",
      "url": "node:internal/perf/performance",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 6391, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Performance",
          "ranges": [{ "startOffset": 1291, "endOffset": 1351, "count": 0 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1355, "endOffset": 1650, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "clearMarks",
          "ranges": [{ "startOffset": 1654, "endOffset": 1885, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "clearMeasures",
          "ranges": [{ "startOffset": 1889, "endOffset": 2098, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "clearResourceTimings",
          "ranges": [{ "startOffset": 2102, "endOffset": 2319, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getEntries",
          "ranges": [{ "startOffset": 2323, "endOffset": 2451, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getEntriesByName",
          "ranges": [{ "startOffset": 2455, "endOffset": 2785, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getEntriesByType",
          "ranges": [{ "startOffset": 2789, "endOffset": 3046, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "mark",
          "ranges": [{ "startOffset": 3050, "endOffset": 3271, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "measure",
          "ranges": [{ "startOffset": 3275, "endOffset": 3560, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "now",
          "ranges": [{ "startOffset": 3564, "endOffset": 3660, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setResourceTimingBufferSize",
          "ranges": [{ "startOffset": 3664, "endOffset": 3980, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get timeOrigin",
          "ranges": [{ "startOffset": 3984, "endOffset": 4110, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "toJSON",
          "ranges": [{ "startOffset": 4114, "endOffset": 4342, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createPerformance",
          "ranges": [{ "startOffset": 5943, "endOffset": 6112, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "Performance",
          "ranges": [{ "startOffset": 6000, "endOffset": 6091, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "dispatchBufferFull",
          "ranges": [{ "startOffset": 6156, "endOffset": 6294, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "219",
      "url": "node:internal/perf/event_loop_utilization",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1527, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "eventLoopUtilization",
          "ranges": [{ "startOffset": 153, "endOffset": 446, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "internalEventLoopUtilization",
          "ranges": [{ "startOffset": 448, "endOffset": 1447, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "220",
      "url": "node:internal/perf/timerify",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2280, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "processComplete",
          "ranges": [{ "startOffset": 610, "endOffset": 985, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "timerify",
          "ranges": [{ "startOffset": 987, "endOffset": 2251, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "221",
      "url": "node:internal/histogram",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 8416, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isHistogram",
          "ranges": [{ "startOffset": 894, "endOffset": 968, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Histogram",
          "ranges": [{ "startOffset": 1032, "endOffset": 1169, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1173, "endOffset": 1585, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get count",
          "ranges": [{ "startOffset": 1636, "endOffset": 1763, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get countBigInt",
          "ranges": [{ "startOffset": 1814, "endOffset": 1953, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get min",
          "ranges": [{ "startOffset": 2004, "endOffset": 2127, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get minBigInt",
          "ranges": [{ "startOffset": 2178, "endOffset": 2313, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get max",
          "ranges": [{ "startOffset": 2364, "endOffset": 2487, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get maxBigInt",
          "ranges": [{ "startOffset": 2538, "endOffset": 2673, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get mean",
          "ranges": [{ "startOffset": 2724, "endOffset": 2849, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get exceeds",
          "ranges": [{ "startOffset": 2900, "endOffset": 3031, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get exceedsBigInt",
          "ranges": [{ "startOffset": 3082, "endOffset": 3225, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get stddev",
          "ranges": [{ "startOffset": 3276, "endOffset": 3405, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "percentile",
          "ranges": [{ "startOffset": 3476, "endOffset": 3825, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "percentileBigInt",
          "ranges": [{ "startOffset": 3896, "endOffset": 4257, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get percentiles",
          "ranges": [{ "startOffset": 4320, "endOffset": 4509, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get percentilesBigInt",
          "ranges": [{ "startOffset": 4572, "endOffset": 4773, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "reset",
          "ranges": [{ "startOffset": 4810, "endOffset": 4926, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4930, "endOffset": 5085, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 5089, "endOffset": 5149, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "toJSON",
          "ranges": [{ "startOffset": 5153, "endOffset": 5410, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "RecordableHistogram",
          "ranges": [{ "startOffset": 5462, "endOffset": 5628, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "record",
          "ranges": [{ "startOffset": 5697, "endOffset": 5971, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "recordDelta",
          "ranges": [{ "startOffset": 6008, "endOffset": 6159, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "add",
          "ranges": [{ "startOffset": 6215, "endOffset": 6488, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 6492, "endOffset": 6657, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 6661, "endOffset": 6721, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ClonedHistogram",
          "ranges": [{ "startOffset": 6725, "endOffset": 6910, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ClonedHistogram.<computed>",
          "ranges": [{ "startOffset": 6954, "endOffset": 6963, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ClonedRecordableHistogram",
          "ranges": [{ "startOffset": 6966, "endOffset": 7255, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ClonedRecordableHistogram.<computed>",
          "ranges": [{ "startOffset": 7309, "endOffset": 7318, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createRecordableHistogram",
          "ranges": [{ "startOffset": 7321, "endOffset": 7415, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createHistogram",
          "ranges": [{ "startOffset": 7558, "endOffset": 8243, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "222",
      "url": "node:internal/perf/event_loop_delay",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1724, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ELDHistogram",
          "ranges": [{ "startOffset": 625, "endOffset": 686, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "enable",
          "ranges": [{ "startOffset": 726, "endOffset": 937, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "disable",
          "ranges": [{ "startOffset": 977, "endOffset": 1190, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "monitorEventLoopDelay",
          "ranges": [{ "startOffset": 1283, "endOffset": 1682, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "223",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/glob/dist/commonjs/pattern.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 7300, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isPatternList",
          "ranges": [{ "startOffset": 241, "endOffset": 263, "count": 14 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isGlobList",
          "ranges": [{ "startOffset": 284, "endOffset": 306, "count": 14 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 395, "endOffset": 7237, "count": 14 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "Pattern",
          "ranges": [
            { "startOffset": 586, "endOffset": 2959, "count": 14 },
            { "startOffset": 681, "endOffset": 747, "count": 0 },
            { "startOffset": 783, "endOffset": 846, "count": 0 },
            { "startOffset": 899, "endOffset": 992, "count": 0 },
            { "startOffset": 1082, "endOffset": 1148, "count": 0 },
            { "startOffset": 1396, "endOffset": 2953, "count": 6 },
            { "startOffset": 1740, "endOffset": 2369, "count": 0 },
            { "startOffset": 2428, "endOffset": 2943, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "pattern",
          "ranges": [{ "startOffset": 3034, "endOffset": 3098, "count": 24 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isString",
          "ranges": [{ "startOffset": 3164, "endOffset": 3249, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isGlobstar",
          "ranges": [{ "startOffset": 3315, "endOffset": 3407, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isRegExp",
          "ranges": [{ "startOffset": 3470, "endOffset": 3553, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "globString",
          "ranges": [
            { "startOffset": 3638, "endOffset": 4000, "count": 14 },
            { "startOffset": 3755, "endOffset": 3925, "count": 6 },
            { "startOffset": 3795, "endOffset": 3874, "count": 0 },
            { "startOffset": 3946, "endOffset": 3991, "count": 8 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "hasMore",
          "ranges": [{ "startOffset": 4080, "endOffset": 4143, "count": 12 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "rest",
          "ranges": [
            { "startOffset": 4239, "endOffset": 4657, "count": 20 },
            { "startOffset": 4298, "endOffset": 4316, "count": 8 },
            { "startOffset": 4316, "endOffset": 4358, "count": 12 },
            { "startOffset": 4358, "endOffset": 4385, "count": 4 },
            { "startOffset": 4385, "endOffset": 4656, "count": 8 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "isUNC",
          "ranges": [
            { "startOffset": 4741, "endOffset": 5208, "count": 12 },
            { "startOffset": 4830, "endOffset": 4855, "count": 6 },
            { "startOffset": 4868, "endOffset": 5201, "count": 6 },
            { "startOffset": 4928, "endOffset": 4968, "count": 0 },
            { "startOffset": 4969, "endOffset": 5004, "count": 0 },
            { "startOffset": 5005, "endOffset": 5040, "count": 0 },
            { "startOffset": 5041, "endOffset": 5089, "count": 0 },
            { "startOffset": 5090, "endOffset": 5120, "count": 0 },
            { "startOffset": 5121, "endOffset": 5169, "count": 0 },
            { "startOffset": 5170, "endOffset": 5200, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "isDrive",
          "ranges": [
            { "startOffset": 5545, "endOffset": 5923, "count": 12 },
            { "startOffset": 5638, "endOffset": 5665, "count": 6 },
            { "startOffset": 5678, "endOffset": 5916, "count": 6 },
            { "startOffset": 5740, "endOffset": 5780, "count": 0 },
            { "startOffset": 5781, "endOffset": 5819, "count": 0 },
            { "startOffset": 5820, "endOffset": 5868, "count": 0 },
            { "startOffset": 5869, "endOffset": 5915, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "isAbsolute",
          "ranges": [
            { "startOffset": 6156, "endOffset": 6449, "count": 34 },
            { "startOffset": 6255, "endOffset": 6285, "count": 28 },
            { "startOffset": 6298, "endOffset": 6442, "count": 6 },
            { "startOffset": 6350, "endOffset": 6366, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "root",
          "ranges": [
            { "startOffset": 6524, "endOffset": 6693, "count": 8 },
            { "startOffset": 6632, "endOffset": 6652, "count": 0 },
            { "startOffset": 6654, "endOffset": 6669, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "checkFollowGlobstar",
          "ranges": [{ "startOffset": 6811, "endOffset": 6948, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "markFollowGlobstar",
          "ranges": [{ "startOffset": 7044, "endOffset": 7235, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "224",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/glob/dist/commonjs/walker.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 12869, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "makeIgnore",
          "ranges": [
            { "startOffset": 408, "endOffset": 577, "count": 2 },
            { "startOffset": 453, "endOffset": 493, "count": 0 },
            { "startOffset": 569, "endOffset": 577, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 649, "endOffset": 10529, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "GlobUtil",
          "ranges": [
            { "startOffset": 861, "endOffset": 1903, "count": 2 },
            { "startOffset": 1044, "endOffset": 1050, "count": 0 },
            { "startOffset": 1153, "endOffset": 1181, "count": 0 },
            { "startOffset": 1235, "endOffset": 1240, "count": 0 },
            { "startOffset": 1291, "endOffset": 1348, "count": 0 },
            { "startOffset": 1350, "endOffset": 1486, "count": 0 },
            { "startOffset": 1663, "endOffset": 1674, "count": 0 },
            { "startOffset": 1730, "endOffset": 1897, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1821, "endOffset": 1885, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#ignored",
          "ranges": [{ "startOffset": 1908, "endOffset": 2001, "count": 12 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "#childrenIgnored",
          "ranges": [{ "startOffset": 2006, "endOffset": 2092, "count": 6 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "pause",
          "ranges": [{ "startOffset": 2127, "endOffset": 2170, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "resume",
          "ranges": [{ "startOffset": 2175, "endOffset": 2453, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onResume",
          "ranges": [{ "startOffset": 2458, "endOffset": 2713, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "matchCheck",
          "ranges": [
            { "startOffset": 2831, "endOffset": 3605, "count": 4 },
            { "startOffset": 2910, "endOffset": 2927, "count": 0 },
            { "startOffset": 2977, "endOffset": 3127, "count": 0 },
            { "startOffset": 3213, "endOffset": 3231, "count": 0 },
            { "startOffset": 3265, "endOffset": 3283, "count": 0 },
            { "startOffset": 3284, "endOffset": 3306, "count": 0 },
            { "startOffset": 3308, "endOffset": 3553, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "matchCheckTest",
          "ranges": [
            { "startOffset": 3610, "endOffset": 4069, "count": 4 },
            { "startOffset": 3698, "endOffset": 3727, "count": 0 },
            { "startOffset": 3804, "endOffset": 3823, "count": 0 },
            { "startOffset": 3858, "endOffset": 3894, "count": 0 },
            { "startOffset": 3895, "endOffset": 3933, "count": 0 },
            { "startOffset": 3934, "endOffset": 3987, "count": 0 },
            { "startOffset": 4051, "endOffset": 4062, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "matchCheckSync",
          "ranges": [{ "startOffset": 4074, "endOffset": 4770, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "matchFinish",
          "ranges": [
            { "startOffset": 4775, "endOffset": 5843, "count": 4 },
            { "startOffset": 4844, "endOffset": 4851, "count": 0 },
            { "startOffset": 4960, "endOffset": 4980, "count": 0 },
            { "startOffset": 4982, "endOffset": 5079, "count": 0 },
            { "startOffset": 5144, "endOffset": 5164, "count": 0 },
            { "startOffset": 5228, "endOffset": 5246, "count": 0 },
            { "startOffset": 5247, "endOffset": 5258, "count": 0 },
            { "startOffset": 5339, "endOffset": 5381, "count": 0 },
            { "startOffset": 5404, "endOffset": 5531, "count": 0 },
            { "startOffset": 5587, "endOffset": 5606, "count": 0 },
            { "startOffset": 5669, "endOffset": 5705, "count": 0 },
            { "startOffset": 5706, "endOffset": 5739, "count": 0 },
            { "startOffset": 5794, "endOffset": 5806, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "match",
          "ranges": [{ "startOffset": 5848, "endOffset": 5996, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "matchSync",
          "ranges": [{ "startOffset": 6001, "endOffset": 6145, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "walkCB",
          "ranges": [
            { "startOffset": 6150, "endOffset": 6382, "count": 2 },
            { "startOffset": 6234, "endOffset": 6243, "count": 0 },
            { "startOffset": 6257, "endOffset": 6262, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "walkCB2",
          "ranges": [
            { "startOffset": 6387, "endOffset": 7801, "count": 6 },
            { "startOffset": 6485, "endOffset": 6497, "count": 0 },
            { "startOffset": 6521, "endOffset": 6530, "count": 0 },
            { "startOffset": 6544, "endOffset": 6549, "count": 0 },
            { "startOffset": 6575, "endOffset": 6686, "count": 0 },
            { "startOffset": 7141, "endOffset": 7296, "count": 4 },
            { "startOffset": 7193, "endOffset": 7202, "count": 0 },
            { "startOffset": 7349, "endOffset": 7779, "count": 4 },
            { "startOffset": 7394, "endOffset": 7423, "count": 0 },
            { "startOffset": 7425, "endOffset": 7466, "count": 0 },
            { "startOffset": 7593, "endOffset": 7642, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 6603, "endOffset": 6654, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "next",
          "ranges": [
            { "startOffset": 6997, "endOffset": 7067, "count": 14 },
            { "startOffset": 7052, "endOffset": 7057, "count": 6 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 7272, "endOffset": 7284, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 7690, "endOffset": 7747, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "walkCB3",
          "ranges": [
            { "startOffset": 7806, "endOffset": 8448, "count": 4 },
            { "startOffset": 8098, "endOffset": 8253, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "next",
          "ranges": [
            { "startOffset": 7954, "endOffset": 8024, "count": 8 },
            { "startOffset": 8009, "endOffset": 8014, "count": 4 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 8229, "endOffset": 8241, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "walkCBSync",
          "ranges": [{ "startOffset": 8453, "endOffset": 8693, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "walkCB2Sync",
          "ranges": [{ "startOffset": 8698, "endOffset": 9908, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "walkCB3Sync",
          "ranges": [{ "startOffset": 9913, "endOffset": 10527, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 10559, "endOffset": 11708, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "GlobWalker",
          "ranges": [{ "startOffset": 10624, "endOffset": 10702, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "matchEmit",
          "ranges": [{ "startOffset": 10707, "endOffset": 10756, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "walk",
          "ranges": [
            { "startOffset": 10761, "endOffset": 11281, "count": 2 },
            { "startOffset": 10799, "endOffset": 10808, "count": 0 },
            { "startOffset": 10822, "endOffset": 10847, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 10958, "endOffset": 11244, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 11024, "endOffset": 11232, "count": 2 },
            { "startOffset": 11063, "endOffset": 11072, "count": 0 },
            { "startOffset": 11074, "endOffset": 11138, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "walkSync",
          "ranges": [{ "startOffset": 11286, "endOffset": 11706, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 11742, "endOffset": 12801, "count": 0 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "225",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/glob/dist/commonjs/ignore.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 4267, "count": 1 },
            { "startOffset": 533, "endOffset": 542, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 594, "endOffset": 4207, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "Ignore",
          "ranges": [{ "startOffset": 711, "endOffset": 1287, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "add",
          "ranges": [
            { "startOffset": 1292, "endOffset": 3319, "count": 2 },
            { "startOffset": 2349, "endOffset": 2423, "count": 0 },
            { "startOffset": 2568, "endOffset": 2591, "count": 0 },
            { "startOffset": 2593, "endOffset": 2675, "count": 0 },
            { "startOffset": 3030, "endOffset": 3052, "count": 0 },
            { "startOffset": 3187, "endOffset": 3217, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "ignored",
          "ranges": [
            { "startOffset": 3324, "endOffset": 3807, "count": 12 },
            { "startOffset": 3456, "endOffset": 3462, "count": 0 },
            { "startOffset": 3620, "endOffset": 3632, "count": 0 },
            { "startOffset": 3682, "endOffset": 3779, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "childrenIgnored",
          "ranges": [
            { "startOffset": 3812, "endOffset": 4205, "count": 6 },
            { "startOffset": 3917, "endOffset": 3923, "count": 2 },
            { "startOffset": 4032, "endOffset": 4044, "count": 0 },
            { "startOffset": 4102, "endOffset": 4177, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "226",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/glob/dist/commonjs/processor.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 10760, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 357, "endOffset": 938, "count": 10 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "HasWalkedCache",
          "ranges": [{ "startOffset": 395, "endOffset": 461, "count": 10 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "copy",
          "ranges": [{ "startOffset": 466, "endOffset": 536, "count": 8 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "hasWalked",
          "ranges": [
            { "startOffset": 541, "endOffset": 652, "count": 4 },
            { "startOffset": 618, "endOffset": 623, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "storeWalked",
          "ranges": [
            { "startOffset": 657, "endOffset": 936, "count": 12 },
            { "startOffset": 813, "endOffset": 846, "count": 2 },
            { "startOffset": 846, "endOffset": 930, "count": 10 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 1195, "endOffset": 1647, "count": 10 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "add",
          "ranges": [
            { "startOffset": 1242, "endOffset": 1455, "count": 4 },
            { "startOffset": 1301, "endOffset": 1304, "count": 0 },
            { "startOffset": 1323, "endOffset": 1326, "count": 0 },
            { "startOffset": 1434, "endOffset": 1447, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "entries",
          "ranges": [{ "startOffset": 1490, "endOffset": 1645, "count": 10 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1547, "endOffset": 1637, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 1784, "endOffset": 2598, "count": 10 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "add",
          "ranges": [
            { "startOffset": 1828, "endOffset": 2183, "count": 8 },
            { "startOffset": 1885, "endOffset": 1916, "count": 0 },
            { "startOffset": 1980, "endOffset": 2117, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2009, "endOffset": 2053, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [
            { "startOffset": 2188, "endOffset": 2427, "count": 4 },
            { "startOffset": 2296, "endOffset": 2371, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "entries",
          "ranges": [{ "startOffset": 2432, "endOffset": 2510, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2475, "endOffset": 2502, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "keys",
          "ranges": [{ "startOffset": 2515, "endOffset": 2596, "count": 10 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2569, "endOffset": 2588, "count": 8 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 2797, "endOffset": 10691, "count": 10 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "Processor",
          "ranges": [
            { "startOffset": 2948, "endOffset": 3188, "count": 10 },
            { "startOffset": 3135, "endOffset": 3158, "count": 8 },
            { "startOffset": 3159, "endOffset": 3181, "count": 2 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "processPatterns",
          "ranges": [
            { "startOffset": 3193, "endOffset": 7119, "count": 6 },
            { "startOffset": 3494, "endOffset": 7092, "count": 8 },
            { "startOffset": 3644, "endOffset": 3675, "count": 0 },
            { "startOffset": 3746, "endOffset": 4155, "count": 0 },
            { "startOffset": 4202, "endOffset": 4211, "count": 0 },
            { "startOffset": 4393, "endOffset": 4535, "count": 4 },
            { "startOffset": 4631, "endOffset": 4800, "count": 4 },
            { "startOffset": 4716, "endOffset": 4725, "count": 0 },
            { "startOffset": 5021, "endOffset": 5306, "count": 4 },
            { "startOffset": 5188, "endOffset": 5200, "count": 0 },
            { "startOffset": 5306, "endOffset": 7082, "count": 4 },
            { "startOffset": 5356, "endOffset": 6977, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3306, "endOffset": 3322, "count": 8 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "subwalkTargets",
          "ranges": [{ "startOffset": 7124, "endOffset": 7185, "count": 6 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "child",
          "ranges": [{ "startOffset": 7190, "endOffset": 7267, "count": 8 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "filterEntries",
          "ranges": [
            { "startOffset": 7463, "endOffset": 8300, "count": 4 },
            { "startOffset": 7926, "endOffset": 8015, "count": 0 },
            { "startOffset": 8143, "endOffset": 8246, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "testGlobstar",
          "ranges": [{ "startOffset": 8305, "endOffset": 10179, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "testRegExp",
          "ranges": [
            { "startOffset": 10184, "endOffset": 10419, "count": 4 },
            { "startOffset": 10260, "endOffset": 10267, "count": 0 },
            { "startOffset": 10287, "endOffset": 10348, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "testString",
          "ranges": [{ "startOffset": 10424, "endOffset": 10689, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "227",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/glob/dist/commonjs/has-magic.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1058, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "hasMagic",
          "ranges": [{ "startOffset": 748, "endOffset": 990, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "228",
      "url": "node:internal/modules/esm/loader",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 35412, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "newResolveCache",
          "ranges": [{ "startOffset": 1594, "endOffset": 1724, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "newLoadCache",
          "ranges": [{ "startOffset": 1878, "endOffset": 1999, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getTranslators",
          "ranges": [{ "startOffset": 2161, "endOffset": 2283, "count": 9 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 3037, "endOffset": 28087, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ModuleLoader",
          "ranges": [
            { "startOffset": 4147, "endOffset": 4340, "count": 1 },
            { "startOffset": 4235, "endOffset": 4292, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "setCustomizations",
          "ranges": [
            { "startOffset": 5896, "endOffset": 6140, "count": 1 },
            { "startOffset": 5999, "endOffset": 6081, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "eval",
          "ranges": [{ "startOffset": 6144, "endOffset": 6567, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getModuleJobForImport",
          "ranges": [{ "startOffset": 7195, "endOffset": 7447, "count": 12 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getModuleJobForRequireInImportedCJS",
          "ranges": [{ "startOffset": 7948, "endOffset": 8205, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#getJobFromResolveResult",
          "ranges": [
            { "startOffset": 8787, "endOffset": 9263, "count": 12 },
            { "startOffset": 9123, "endOffset": 9242, "count": 8 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "importSyncForRequire",
          "ranges": [{ "startOffset": 9835, "endOffset": 11887, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getModuleJobForRequire",
          "ranges": [{ "startOffset": 12311, "endOffset": 15766, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#translate",
          "ranges": [
            { "startOffset": 16336, "endOffset": 16636, "count": 8 },
            { "startOffset": 16495, "endOffset": 16558, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "loadAndTranslateForRequireInImportedCJS",
          "ranges": [{ "startOffset": 17053, "endOffset": 17973, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "loadAndTranslate",
          "ranges": [{ "startOffset": 18335, "endOffset": 18533, "count": 8 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "#createModuleJob",
          "ranges": [
            { "startOffset": 19345, "endOffset": 20322, "count": 8 },
            { "startOffset": 19594, "endOffset": 19699, "count": 0 },
            { "startOffset": 19827, "endOffset": 19867, "count": 0 },
            { "startOffset": 19922, "endOffset": 19937, "count": 0 },
            { "startOffset": 19939, "endOffset": 19993, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "import",
          "ranges": [{ "startOffset": 20784, "endOffset": 21018, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "register",
          "ranges": [{ "startOffset": 21084, "endOffset": 21631, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "resolve",
          "ranges": [
            { "startOffset": 22357, "endOffset": 22678, "count": 12 },
            { "startOffset": 22469, "endOffset": 22595, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#cachedDefaultResolve",
          "ranges": [
            { "startOffset": 23040, "endOffset": 23487, "count": 12 },
            { "startOffset": 23291, "endOffset": 23325, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#resolveAndMaybeBlockOnLoaderThread",
          "ranges": [{ "startOffset": 23912, "endOffset": 24209, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "resolveSync",
          "ranges": [{ "startOffset": 24920, "endOffset": 25101, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "defaultResolve",
          "ranges": [{ "startOffset": 25313, "endOffset": 25653, "count": 12 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "load",
          "ranges": [
            { "startOffset": 25968, "endOffset": 26199, "count": 8 },
            { "startOffset": 26025, "endOffset": 26086, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "#loadAndMaybeBlockOnLoaderThread",
          "ranges": [{ "startOffset": 26559, "endOffset": 26827, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#loadSync",
          "ranges": [{ "startOffset": 27371, "endOffset": 27464, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "validateLoadResult",
          "ranges": [
            { "startOffset": 27468, "endOffset": 27619, "count": 8 },
            { "startOffset": 27526, "endOffset": 27615, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "importMetaInitialize",
          "ranges": [{ "startOffset": 27623, "endOffset": 27958, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "forceLoadHooks",
          "ranges": [{ "startOffset": 28019, "endOffset": 28085, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 28141, "endOffset": 30768, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createModuleLoader",
          "ranges": [
            { "startOffset": 31152, "endOffset": 32814, "count": 1 },
            { "startOffset": 31597, "endOffset": 32764, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "readableURIEncode",
          "ranges": [{ "startOffset": 31672, "endOffset": 32167, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 32487, "endOffset": 32575, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getHooksProxy",
          "ranges": [{ "startOffset": 32927, "endOffset": 33103, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getOrInitializeCascadedLoader",
          "ranges": [{ "startOffset": 33605, "endOffset": 33717, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "register",
          "ranges": [{ "startOffset": 34959, "endOffset": 35304, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "229",
      "url": "node:internal/modules/esm/assert",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 3876, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1326, "endOffset": 1364, "count": 5 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "validateAttributes",
          "ranges": [
            { "startOffset": 1785, "endOffset": 3160, "count": 8 },
            { "startOffset": 1981, "endOffset": 2108, "count": 0 },
            { "startOffset": 2180, "endOffset": 2325, "count": 0 },
            { "startOffset": 2590, "endOffset": 2650, "count": 0 },
            { "startOffset": 2656, "endOffset": 2764, "count": 0 },
            { "startOffset": 2770, "endOffset": 3154, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "handleInvalidType",
          "ranges": [{ "startOffset": 3392, "endOffset": 3806, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "230",
      "url": "node:internal/modules/esm/module_map",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 4028, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 281, "endOffset": 306, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "ResolveCache",
          "ranges": [{ "startOffset": 850, "endOffset": 878, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "serializeKey",
          "ranges": [
            { "startOffset": 1224, "endOffset": 1836, "count": 12 },
            { "startOffset": 1633, "endOffset": 1835, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1752, "endOffset": 1818, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#getModuleCachedImports",
          "ranges": [
            { "startOffset": 1840, "endOffset": 2056, "count": 24 },
            { "startOffset": 1954, "endOffset": 2026, "count": 4 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 2231, "endOffset": 2333, "count": 12 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 2473, "endOffset": 2602, "count": 12 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "has",
          "ranges": [{ "startOffset": 2606, "endOffset": 2710, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "LoadCache",
          "ranges": [{ "startOffset": 2844, "endOffset": 2872, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [
            { "startOffset": 2921, "endOffset": 3064, "count": 12 },
            { "startOffset": 3051, "endOffset": 3059, "count": 4 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "set",
          "ranges": [
            { "startOffset": 3067, "endOffset": 3674, "count": 8 },
            { "startOffset": 3298, "endOffset": 3334, "count": 0 },
            { "startOffset": 3336, "endOffset": 3406, "count": 0 },
            { "startOffset": 3490, "endOffset": 3496, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "has",
          "ranges": [{ "startOffset": 3677, "endOffset": 3834, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "delete",
          "ranges": [{ "startOffset": 3837, "endOffset": 3973, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "231",
      "url": "node:internal/modules/esm/translators",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 17488, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lazyTypes",
          "ranges": [
            { "startOffset": 464, "endOffset": 580, "count": 10 },
            { "startOffset": 510, "endOffset": 528, "count": 9 },
            { "startOffset": 528, "endOffset": 579, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1246, "endOffset": 1271, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getSource",
          "ranges": [{ "startOffset": 1855, "endOffset": 1983, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "initCJSParseSync",
          "ranges": [{ "startOffset": 2284, "endOffset": 2421, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "assertBufferSource",
          "ranges": [
            { "startOffset": 2994, "endOffset": 3415, "count": 10 },
            { "startOffset": 3071, "endOffset": 3098, "count": 5 },
            { "startOffset": 3100, "endOffset": 3117, "count": 0 },
            { "startOffset": 3211, "endOffset": 3236, "count": 0 },
            { "startOffset": 3255, "endOffset": 3334, "count": 0 },
            { "startOffset": 3335, "endOffset": 3339, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "stringify",
          "ranges": [
            { "startOffset": 3639, "endOffset": 3906, "count": 5 },
            { "startOffset": 3698, "endOffset": 3714, "count": 0 },
            { "startOffset": 3843, "endOffset": 3862, "count": 1 },
            { "startOffset": 3863, "endOffset": 3872, "count": 4 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "errPath",
          "ranges": [{ "startOffset": 4026, "endOffset": 4171, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "moduleStrategy",
          "ranges": [{ "startOffset": 4253, "endOffset": 4576, "count": 5 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "loadCJSModule",
          "ranges": [{ "startOffset": 5236, "endOffset": 7291, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createCJSModuleWrap",
          "ranges": [{ "startOffset": 7775, "endOffset": 9217, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "requireCommonJS",
          "ranges": [{ "startOffset": 9252, "endOffset": 9521, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 9683, "endOffset": 9797, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "commonjsStrategy",
          "ranges": [{ "startOffset": 9985, "endOffset": 10729, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "cjsPreparseModuleExports",
          "ranges": [{ "startOffset": 10918, "endOffset": 13463, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "builtinStrategy",
          "ranges": [
            { "startOffset": 13587, "endOffset": 13993, "count": 3 },
            { "startOffset": 13866, "endOffset": 13918, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "jsonStrategy",
          "ranges": [{ "startOffset": 14105, "endOffset": 16326, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 16392, "endOffset": 17485, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "232",
      "url": "node:internal/modules/esm/load",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 7611, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getSource",
          "ranges": [
            { "startOffset": 1239, "endOffset": 2466, "count": 5 },
            { "startOffset": 1507, "endOffset": 2332, "count": 0 },
            { "startOffset": 2345, "endOffset": 2355, "count": 0 },
            { "startOffset": 2357, "endOffset": 2413, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "getSourceSync",
          "ranges": [{ "startOffset": 2649, "endOffset": 3388, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "defaultLoad",
          "ranges": [
            { "startOffset": 3509, "endOffset": 4917, "count": 8 },
            { "startOffset": 3693, "endOffset": 3728, "count": 0 },
            { "startOffset": 3729, "endOffset": 3761, "count": 0 },
            { "startOffset": 3763, "endOffset": 3970, "count": 0 },
            { "startOffset": 4122, "endOffset": 4172, "count": 3 },
            { "startOffset": 4172, "endOffset": 4782, "count": 5 },
            { "startOffset": 4204, "endOffset": 4231, "count": 0 },
            { "startOffset": 4413, "endOffset": 4778, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "defaultLoadSync",
          "ranges": [{ "startOffset": 5430, "endOffset": 6070, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "throwIfUnsupportedURLScheme",
          "ranges": [
            { "startOffset": 6258, "endOffset": 6890, "count": 8 },
            { "startOffset": 6488, "endOffset": 6515, "count": 3 },
            { "startOffset": 6516, "endOffset": 6543, "count": 3 },
            { "startOffset": 6544, "endOffset": 6673, "count": 0 },
            { "startOffset": 6678, "endOffset": 6888, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "throwUnknownModuleFormat",
          "ranges": [{ "startOffset": 7269, "endOffset": 7507, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "233",
      "url": "node:internal/modules/esm/module_job",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 15200, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 449, "endOffset": 474, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "isCommonJSGlobalLikeNotDefinedError",
          "ranges": [{ "startOffset": 1203, "endOffset": 1334, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ModuleJobBase",
          "ranges": [{ "startOffset": 1361, "endOffset": 1548, "count": 8 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 1663, "endOffset": 10702, "count": 8 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ModuleJob",
          "ranges": [
            { "startOffset": 2410, "endOffset": 3365, "count": 8 },
            { "startOffset": 2758, "endOffset": 2913, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "_link",
          "ranges": [
            { "startOffset": 3503, "endOffset": 5128, "count": 8 },
            { "startOffset": 4486, "endOffset": 5053, "count": 10 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4742, "endOffset": 4893, "count": 10 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "instantiate",
          "ranges": [{ "startOffset": 5132, "endOffset": 5277, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "_instantiate",
          "ranges": [
            { "startOffset": 5281, "endOffset": 9010, "count": 2 },
            { "startOffset": 5814, "endOffset": 5991, "count": 0 },
            { "startOffset": 6048, "endOffset": 8763, "count": 0 },
            { "startOffset": 8810, "endOffset": 9006, "count": 11 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "addJobsToDependencyGraph",
          "ranges": [
            { "startOffset": 5380, "endOffset": 5713, "count": 12 },
            { "startOffset": 5514, "endOffset": 5539, "count": 1 },
            { "startOffset": 5539, "endOffset": 5712, "count": 11 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "runSync",
          "ranges": [{ "startOffset": 9014, "endOffset": 9451, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "run",
          "ranges": [
            { "startOffset": 9455, "endOffset": 10700, "count": 2 },
            { "startOffset": 9667, "endOffset": 10643, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 11277, "endOffset": 15080, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "234",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/chalk/source/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 5900, "count": 1 },
            { "startOffset": 1472, "endOffset": 1706, "count": 45 },
            { "startOffset": 2476, "endOffset": 3149, "count": 3 },
            { "startOffset": 5448, "endOffset": 5467, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "applyOptions",
          "ranges": [
            { "startOffset": 571, "endOffset": 950, "count": 3 },
            { "startOffset": 618, "endOffset": 699, "count": 0 },
            { "startOffset": 701, "endOffset": 779, "count": 0 },
            { "startOffset": 850, "endOffset": 869, "count": 0 },
            { "startOffset": 919, "endOffset": 931, "count": 1 },
            { "startOffset": 932, "endOffset": 947, "count": 2 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "Chalk",
          "ranges": [{ "startOffset": 975, "endOffset": 1084, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "chalkFactory",
          "ranges": [{ "startOffset": 1109, "endOffset": 1275, "count": 3 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "chalk",
          "ranges": [{ "startOffset": 1137, "endOffset": 1170, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createChalk",
          "ranges": [{ "startOffset": 1278, "endOffset": 1342, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 1499, "endOffset": 1699, "count": 10 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 1728, "endOffset": 1875, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getModelAnsi",
          "ranges": [{ "startOffset": 1902, "endOffset": 2394, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 2499, "endOffset": 2771, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 2866, "endOffset": 3142, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Object.defineProperties",
          "ranges": [{ "startOffset": 3189, "endOffset": 3197, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 3245, "endOffset": 3289, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 3293, "endOffset": 3343, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createStyler",
          "ranges": [
            { "startOffset": 3375, "endOffset": 3650, "count": 10 },
            { "startOffset": 3458, "endOffset": 3500, "count": 9 },
            { "startOffset": 3500, "endOffset": 3583, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "createBuilder",
          "ranges": [{ "startOffset": 3675, "endOffset": 4243, "count": 10 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "builder",
          "ranges": [{ "startOffset": 3848, "endOffset": 3959, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "applyStyle",
          "ranges": [{ "startOffset": 4265, "endOffset": 5300, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "235",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/supports-color/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 3855, "count": 1 },
            { "startOffset": 738, "endOffset": 762, "count": 0 },
            { "startOffset": 869, "endOffset": 893, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "hasFlag",
          "ranges": [
            { "startOffset": 235, "endOffset": 585, "count": 20 },
            { "startOffset": 281, "endOffset": 303, "count": 0 },
            { "startOffset": 359, "endOffset": 363, "count": 0 },
            { "startOffset": 385, "endOffset": 390, "count": 0 },
            { "startOffset": 519, "endOffset": 582, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "envForceColor",
          "ranges": [
            { "startOffset": 895, "endOffset": 1159, "count": 3 },
            { "startOffset": 949, "endOffset": 1157, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "translateLevel",
          "ranges": [
            { "startOffset": 1161, "endOffset": 1320, "count": 3 },
            { "startOffset": 1212, "endOffset": 1232, "count": 2 },
            { "startOffset": 1232, "endOffset": 1319, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "_supportsColor",
          "ranges": [
            { "startOffset": 1322, "endOffset": 3494, "count": 3 },
            { "startOffset": 1479, "endOffset": 1520, "count": 0 },
            { "startOffset": 1570, "endOffset": 1588, "count": 0 },
            { "startOffset": 1614, "endOffset": 1630, "count": 0 },
            { "startOffset": 1740, "endOffset": 1758, "count": 0 },
            { "startOffset": 1788, "endOffset": 1806, "count": 0 },
            { "startOffset": 1918, "endOffset": 1940, "count": 0 },
            { "startOffset": 1942, "endOffset": 1958, "count": 0 },
            { "startOffset": 1976, "endOffset": 1991, "count": 2 },
            { "startOffset": 1992, "endOffset": 2019, "count": 2 },
            { "startOffset": 2021, "endOffset": 2037, "count": 2 },
            { "startOffset": 2037, "endOffset": 2067, "count": 1 },
            { "startOffset": 2096, "endOffset": 2114, "count": 0 },
            { "startOffset": 2114, "endOffset": 2151, "count": 1 },
            { "startOffset": 2151, "endOffset": 2508, "count": 0 },
            { "startOffset": 2508, "endOffset": 2528, "count": 1 },
            { "startOffset": 2528, "endOffset": 2776, "count": 0 },
            { "startOffset": 2776, "endOffset": 2810, "count": 1 },
            { "startOffset": 2810, "endOffset": 2891, "count": 0 },
            { "startOffset": 2891, "endOffset": 2945, "count": 1 },
            { "startOffset": 2945, "endOffset": 3493, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2688, "endOffset": 2707, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createSupportsColor",
          "ranges": [
            { "startOffset": 3503, "endOffset": 3687, "count": 3 },
            { "startOffset": 3618, "endOffset": 3633, "count": 2 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "236",
      "url": "node:process",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 83, "count": 1 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "237",
      "url": "node:internal/process/report",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2811, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "writeReport",
          "ranges": [{ "startOffset": 352, "endOffset": 771, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getReport",
          "ranges": [{ "startOffset": 775, "endOffset": 940, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get directory",
          "ranges": [{ "startOffset": 944, "endOffset": 995, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set directory",
          "ranges": [{ "startOffset": 999, "endOffset": 1087, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get filename",
          "ranges": [{ "startOffset": 1091, "endOffset": 1140, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set filename",
          "ranges": [{ "startOffset": 1144, "endOffset": 1232, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get compact",
          "ranges": [{ "startOffset": 1236, "endOffset": 1283, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set compact",
          "ranges": [{ "startOffset": 1287, "endOffset": 1364, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get excludeNetwork",
          "ranges": [{ "startOffset": 1368, "endOffset": 1429, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set excludeNetwork",
          "ranges": [{ "startOffset": 1433, "endOffset": 1531, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get signal",
          "ranges": [{ "startOffset": 1535, "endOffset": 1580, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set signal",
          "ranges": [{ "startOffset": 1584, "endOffset": 1721, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get reportOnFatalError",
          "ranges": [{ "startOffset": 1725, "endOffset": 1797, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set reportOnFatalError",
          "ranges": [{ "startOffset": 1801, "endOffset": 1919, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get reportOnSignal",
          "ranges": [{ "startOffset": 1923, "endOffset": 1987, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set reportOnSignal",
          "ranges": [{ "startOffset": 1991, "endOffset": 2152, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get reportOnUncaughtException",
          "ranges": [{ "startOffset": 2156, "endOffset": 2242, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set reportOnUncaughtException",
          "ranges": [{ "startOffset": 2246, "endOffset": 2378, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "addSignalHandler",
          "ranges": [{ "startOffset": 2384, "endOffset": 2555, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "removeSignalHandler",
          "ranges": [{ "startOffset": 2557, "endOffset": 2681, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "signalHandler",
          "ranges": [{ "startOffset": 2683, "endOffset": 2757, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "238",
      "url": "node:tty",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 5045, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isatty",
          "ranges": [{ "startOffset": 1526, "endOffset": 1632, "count": 4 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "ReadStream",
          "ranges": [{ "startOffset": 1634, "endOffset": 2103, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ReadStream.setRawMode",
          "ranges": [{ "startOffset": 2252, "endOffset": 2473, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "WriteStream",
          "ranges": [{ "startOffset": 2476, "endOffset": 3442, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "WriteStream._refreshSize",
          "ranges": [{ "startOffset": 3733, "endOffset": 4167, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "WriteStream.cursorTo",
          "ranges": [{ "startOffset": 4223, "endOffset": 4363, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "WriteStream.moveCursor",
          "ranges": [{ "startOffset": 4400, "endOffset": 4546, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "WriteStream.clearLine",
          "ranges": [{ "startOffset": 4582, "endOffset": 4721, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "WriteStream.clearScreenDown",
          "ranges": [{ "startOffset": 4763, "endOffset": 4898, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "WriteStream.getWindowSize",
          "ranges": [{ "startOffset": 4938, "endOffset": 4988, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "239",
      "url": "node:internal/tty",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 6478, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "warnOnDeactivatedColors",
          "ranges": [{ "startOffset": 2542, "endOffset": 2995, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getColorDepth",
          "ranges": [{ "startOffset": 3153, "endOffset": 6149, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "hasColors",
          "ranges": [{ "startOffset": 6151, "endOffset": 6424, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "240",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/chalk/source/vendor/supports-color/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 3855, "count": 1 },
            { "startOffset": 738, "endOffset": 762, "count": 0 },
            { "startOffset": 869, "endOffset": 893, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "hasFlag",
          "ranges": [
            { "startOffset": 235, "endOffset": 585, "count": 16 },
            { "startOffset": 281, "endOffset": 303, "count": 0 },
            { "startOffset": 359, "endOffset": 363, "count": 0 },
            { "startOffset": 385, "endOffset": 390, "count": 0 },
            { "startOffset": 519, "endOffset": 582, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "envForceColor",
          "ranges": [
            { "startOffset": 895, "endOffset": 1159, "count": 2 },
            { "startOffset": 949, "endOffset": 1157, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "translateLevel",
          "ranges": [
            { "startOffset": 1161, "endOffset": 1320, "count": 2 },
            { "startOffset": 1232, "endOffset": 1319, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "_supportsColor",
          "ranges": [
            { "startOffset": 1322, "endOffset": 3494, "count": 2 },
            { "startOffset": 1479, "endOffset": 1520, "count": 0 },
            { "startOffset": 1570, "endOffset": 1588, "count": 0 },
            { "startOffset": 1614, "endOffset": 1630, "count": 0 },
            { "startOffset": 1740, "endOffset": 1758, "count": 0 },
            { "startOffset": 1788, "endOffset": 1806, "count": 0 },
            { "startOffset": 1918, "endOffset": 1940, "count": 0 },
            { "startOffset": 1942, "endOffset": 1958, "count": 0 },
            { "startOffset": 2037, "endOffset": 2067, "count": 0 },
            { "startOffset": 2096, "endOffset": 3493, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2688, "endOffset": 2707, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createSupportsColor",
          "ranges": [{ "startOffset": 3503, "endOffset": 3687, "count": 2 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "241",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/chalk/source/vendor/ansi-styles/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 5256, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "wrapAnsi16",
          "ranges": [{ "startOffset": 55, "endOffset": 105, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 71, "endOffset": 105, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "wrapAnsi256",
          "ranges": [{ "startOffset": 128, "endOffset": 186, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 144, "endOffset": 186, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "wrapAnsi16m",
          "ranges": [{ "startOffset": 209, "endOffset": 297, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 225, "endOffset": 297, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "assembleStyles",
          "ranges": [
            { "startOffset": 1834, "endOffset": 5189, "count": 1 },
            { "startOffset": 1947, "endOffset": 2281, "count": 3 },
            { "startOffset": 2007, "endOffset": 2187, "count": 45 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "value",
          "ranges": [{ "startOffset": 2906, "endOffset": 3404, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "value",
          "ranges": [{ "startOffset": 3450, "endOffset": 3975, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "value",
          "ranges": [{ "startOffset": 4032, "endOffset": 4083, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "value",
          "ranges": [{ "startOffset": 4134, "endOffset": 4895, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "value",
          "ranges": [{ "startOffset": 4949, "endOffset": 5030, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "value",
          "ranges": [{ "startOffset": 5084, "endOffset": 5137, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "242",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/chalk/source/utilities.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 997, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "stringReplaceAll",
          "ranges": [{ "startOffset": 78, "endOffset": 552, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "stringEncaseCRLFWithFirstIndex",
          "ranges": [{ "startOffset": 561, "endOffset": 996, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "243",
      "url": "file:///usr/local/lib/node_modules/npm/lib/commands/test.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 295, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<static_initializer>",
          "ranges": [{ "startOffset": 206, "endOffset": 269, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "244",
      "url": "file:///usr/local/lib/node_modules/npm/lib/lifecycle-cmd.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 551, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<static_initializer>",
          "ranges": [{ "startOffset": 269, "endOffset": 307, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "exec",
          "ranges": [{ "startOffset": 311, "endOffset": 407, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "execWorkspaces",
          "ranges": [{ "startOffset": 411, "endOffset": 517, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "245",
      "url": "file:///usr/local/lib/node_modules/npm/lib/base-cmd.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 4473, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<static_initializer>",
          "ranges": [{ "startOffset": 230, "endOffset": 250, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get describeUsage",
          "ranges": [{ "startOffset": 387, "endOffset": 2222, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "BaseCommand",
          "ranges": [
            { "startOffset": 2226, "endOffset": 2555, "count": 2 },
            { "startOffset": 2423, "endOffset": 2456, "count": 0 },
            { "startOffset": 2458, "endOffset": 2551, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "get name",
          "ranges": [{ "startOffset": 2559, "endOffset": 2609, "count": 5 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "get description",
          "ranges": [{ "startOffset": 2613, "endOffset": 2677, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get params",
          "ranges": [{ "startOffset": 2681, "endOffset": 2735, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get usage",
          "ranges": [{ "startOffset": 2739, "endOffset": 2799, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "usageError",
          "ranges": [{ "startOffset": 2803, "endOffset": 2975, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "checkExpected",
          "ranges": [{ "startOffset": 3037, "endOffset": 3707, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setWorkspaces",
          "ranges": [
            { "startOffset": 3711, "endOffset": 4440, "count": 1 },
            { "startOffset": 3841, "endOffset": 3848, "count": 0 },
            { "startOffset": 4036, "endOffset": 4058, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "246",
      "url": "file:///usr/local/lib/node_modules/npm/lib/commands/run-script.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 6185, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "<static_initializer>",
          "ranges": [{ "startOffset": 663, "endOffset": 687, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "completion",
          "ranges": [{ "startOffset": 698, "endOffset": 1079, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "exec",
          "ranges": [{ "startOffset": 1083, "endOffset": 1253, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "execWorkspaces",
          "ranges": [
            { "startOffset": 1257, "endOffset": 2234, "count": 1 },
            { "startOffset": 1473, "endOffset": 1633, "count": 0 },
            { "startOffset": 1780, "endOffset": 2224, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1688, "endOffset": 1702, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "#run",
          "ranges": [
            { "startOffset": 2238, "endOffset": 4043, "count": 1 },
            { "startOffset": 2411, "endOffset": 2494, "count": 0 },
            { "startOffset": 2496, "endOffset": 2564, "count": 0 },
            { "startOffset": 2590, "endOffset": 2605, "count": 0 },
            { "startOffset": 2607, "endOffset": 2732, "count": 0 },
            { "startOffset": 2830, "endOffset": 2902, "count": 0 },
            { "startOffset": 2909, "endOffset": 3354, "count": 0 },
            { "startOffset": 3541, "endOffset": 3594, "count": 0 },
            { "startOffset": 3631, "endOffset": 3682, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2396, "endOffset": 2410, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "#list",
          "ranges": [{ "startOffset": 4047, "endOffset": 6154, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "247",
      "url": "file:///usr/local/lib/node_modules/npm/lib/utils/get-workspaces.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1748, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "globify",
          "ranges": [{ "startOffset": 273, "endOffset": 313, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getWorkspaces",
          "ranges": [
            { "startOffset": 433, "endOffset": 1715, "count": 1 },
            { "startOffset": 742, "endOffset": 775, "count": 0 },
            { "startOffset": 800, "endOffset": 848, "count": 0 },
            { "startOffset": 958, "endOffset": 1467, "count": 2 },
            { "startOffset": 1061, "endOffset": 1113, "count": 0 },
            { "startOffset": 1277, "endOffset": 1335, "count": 1 },
            { "startOffset": 1344, "endOffset": 1397, "count": 1 },
            { "startOffset": 1406, "endOffset": 1461, "count": 1 },
            { "startOffset": 1490, "endOffset": 1699, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1579, "endOffset": 1632, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "248",
      "url": "file:///usr/local/lib/node_modules/npm/lib/cli/update-notifier.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 4035, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "lastCheckedFile",
          "ranges": [{ "startOffset": 600, "endOffset": 675, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "updateCheck",
          "ranges": [{ "startOffset": 817, "endOffset": 2565, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "updateNotifier",
          "ranges": [
            { "startOffset": 2590, "endOffset": 3604, "count": 1 },
            { "startOffset": 2891, "endOffset": 2921, "count": 0 },
            { "startOffset": 3006, "endOffset": 3013, "count": 0 },
            { "startOffset": 3326, "endOffset": 3603, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3176, "endOffset": 3200, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3542, "endOffset": 3550, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "module.exports",
          "ranges": [
            { "startOffset": 3696, "endOffset": 4034, "count": 1 },
            { "startOffset": 3824, "endOffset": 3876, "count": 0 },
            { "startOffset": 3877, "endOffset": 3929, "count": 0 },
            { "startOffset": 3964, "endOffset": 4002, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 3900, "endOffset": 3928, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "249",
      "url": "node:internal/fs/rimraf",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 7517, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "rimraf",
          "ranges": [{ "startOffset": 1175, "endOffset": 1635, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "CB",
          "ranges": [
            { "startOffset": 1263, "endOffset": 1631, "count": 1 },
            { "startOffset": 1295, "endOffset": 1607, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "_rimraf",
          "ranges": [{ "startOffset": 1638, "endOffset": 2496, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 1801, "endOffset": 2492, "count": 1 },
            { "startOffset": 1832, "endOffset": 2043, "count": 0 },
            { "startOffset": 2074, "endOffset": 2132, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 2151, "endOffset": 2486, "count": 1 },
            { "startOffset": 2177, "endOffset": 2451, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "fixWinEPERM",
          "ranges": [{ "startOffset": 2499, "endOffset": 2934, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "_rmdir",
          "ranges": [{ "startOffset": 2937, "endOffset": 3235, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "_rmchildren",
          "ranges": [{ "startOffset": 3238, "endOffset": 3988, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "rimrafPromises",
          "ranges": [{ "startOffset": 3991, "endOffset": 4189, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 4053, "endOffset": 4185, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 4102, "endOffset": 4179, "count": 1 },
            { "startOffset": 4136, "endOffset": 4155, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "rimrafSync",
          "ranges": [{ "startOffset": 4192, "endOffset": 4875, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "_unlinkSync",
          "ranges": [{ "startOffset": 4878, "endOffset": 5507, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "_rmdirSync",
          "ranges": [{ "startOffset": 5510, "endOffset": 7007, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fixWinEPERMSync",
          "ranges": [{ "startOffset": 7010, "endOffset": 7457, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "250",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/run-script.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 520, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "runScript",
          "ranges": [
            { "startOffset": 238, "endOffset": 455, "count": 1 },
            { "startOffset": 341, "endOffset": 454, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "251",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/run-script-pkg.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2951, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "runScriptPkg",
          "ranges": [
            { "startOffset": 372, "endOffset": 2919, "count": 1 },
            { "startOffset": 773, "endOffset": 800, "count": 0 },
            { "startOffset": 879, "endOffset": 1254, "count": 0 },
            { "startOffset": 1268, "endOffset": 1310, "count": 0 },
            { "startOffset": 1449, "endOffset": 1494, "count": 0 },
            { "startOffset": 2162, "endOffset": 2185, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "inputEnd",
          "ranges": [{ "startOffset": 1329, "endOffset": 1337, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 2204, "endOffset": 2898, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "252",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/make-spawn-args.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 815, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "makeSpawnArgs",
          "ranges": [{ "startOffset": 202, "endOffset": 782, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "253",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/set-path.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1501, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "setPATH",
          "ranges": [
            { "startOffset": 444, "endOffset": 1474, "count": 1 },
            { "startOffset": 738, "endOffset": 773, "count": 0 },
            { "startOffset": 976, "endOffset": 1064, "count": 4 },
            { "startOffset": 1391, "endOffset": 1458, "count": 75 },
            { "startOffset": 1422, "endOffset": 1454, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 517, "endOffset": 549, "count": 75 },
            { "startOffset": 540, "endOffset": 549, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 560, "endOffset": 588, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 602, "endOffset": 673, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 634, "endOffset": 671, "count": 8 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "254",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/promise-spawn/lib/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 5604, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "promiseSpawn",
          "ranges": [
            { "startOffset": 231, "endOffset": 1469, "count": 2 },
            { "startOffset": 289, "endOffset": 1050, "count": 1 },
            { "startOffset": 1050, "endOffset": 1147, "count": 0 },
            { "startOffset": 1147, "endOffset": 1168, "count": 1 },
            { "startOffset": 1168, "endOffset": 1265, "count": 0 },
            { "startOffset": 1265, "endOffset": 1468, "count": 1 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 398, "endOffset": 470, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "getResult",
          "ranges": [{ "startOffset": 659, "endOffset": 768, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "rejectWithOpts",
          "ranges": [{ "startOffset": 794, "endOffset": 900, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1079, "endOffset": 1098, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1197, "endOffset": 1216, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 1286, "endOffset": 1448, "count": 1 },
            { "startOffset": 1330, "endOffset": 1388, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "spawnWithShell",
          "ranges": [
            { "startOffset": 1494, "endOffset": 3437, "count": 1 },
            { "startOffset": 1899, "endOffset": 1920, "count": 0 },
            { "startOffset": 2250, "endOffset": 3261, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "open",
          "ranges": [{ "startOffset": 3524, "endOffset": 4622, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isPipe",
          "ranges": [
            { "startOffset": 4664, "endOffset": 4839, "count": 2 },
            { "startOffset": 4732, "endOffset": 4753, "count": 0 },
            { "startOffset": 4783, "endOffset": 4821, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "stdioResult",
          "ranges": [
            { "startOffset": 4861, "endOffset": 5341, "count": 1 },
            { "startOffset": 5036, "endOffset": 5166, "count": 0 },
            { "startOffset": 5192, "endOffset": 5322, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "findInObject",
          "ranges": [{ "startOffset": 5404, "endOffset": 5572, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "255",
      "url": "node:child_process",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 27267, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 1936, "endOffset": 1965, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "fork",
          "ranges": [{ "startOffset": 3430, "endOffset": 5105, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "_forkChild",
          "ranges": [{ "startOffset": 5107, "endOffset": 5596, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "normalizeExecArgs",
          "ranges": [{ "startOffset": 5598, "endOffset": 6112, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "exec",
          "ranges": [{ "startOffset": 6649, "endOffset": 6896, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "customPromiseExecFunction",
          "ranges": [{ "startOffset": 6932, "endOffset": 7296, "count": 2 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 6953, "endOffset": 7293, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "normalizeExecFileArgs",
          "ranges": [{ "startOffset": 7433, "endOffset": 8331, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "execFile",
          "ranges": [{ "startOffset": 8944, "endOffset": 13708, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "copyProcessEnvToEnv",
          "ranges": [
            { "startOffset": 13852, "endOffset": 14052, "count": 1 },
            { "startOffset": 14010, "endOffset": 14050, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "normalizeSpawnArguments",
          "ranges": [
            { "startOffset": 14054, "endOffset": 19366, "count": 1 },
            { "startOffset": 14215, "endOffset": 14280, "count": 0 },
            { "startOffset": 14351, "endOffset": 14542, "count": 0 },
            { "startOffset": 14622, "endOffset": 14645, "count": 0 },
            { "startOffset": 14942, "endOffset": 15006, "count": 0 },
            { "startOffset": 15069, "endOffset": 15093, "count": 0 },
            { "startOffset": 15095, "endOffset": 15173, "count": 0 },
            { "startOffset": 15236, "endOffset": 15260, "count": 0 },
            { "startOffset": 15262, "endOffset": 15340, "count": 0 },
            { "startOffset": 15451, "endOffset": 15493, "count": 0 },
            { "startOffset": 15495, "endOffset": 15626, "count": 0 },
            { "startOffset": 15690, "endOffset": 15810, "count": 0 },
            { "startOffset": 15886, "endOffset": 15956, "count": 0 },
            { "startOffset": 16096, "endOffset": 16204, "count": 0 },
            { "startOffset": 16227, "endOffset": 17089, "count": 0 },
            { "startOffset": 17132, "endOffset": 17185, "count": 0 },
            { "startOffset": 17263, "endOffset": 17277, "count": 0 },
            { "startOffset": 17530, "endOffset": 18134, "count": 0 },
            { "startOffset": 18231, "endOffset": 18274, "count": 75 },
            { "startOffset": 18312, "endOffset": 18777, "count": 0 },
            { "startOffset": 18808, "endOffset": 19061, "count": 75 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 18556, "endOffset": 18765, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "abortChildProcess",
          "ranges": [{ "startOffset": 19368, "endOffset": 19624, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "spawn",
          "ranges": [
            { "startOffset": 20179, "endOffset": 21403, "count": 1 },
            { "startOffset": 20545, "endOffset": 20919, "count": 0 },
            { "startOffset": 20943, "endOffset": 21384, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 20578, "endOffset": 20766, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 20810, "endOffset": 20913, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onAbortListener",
          "ranges": [{ "startOffset": 21279, "endOffset": 21380, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "spawnSync",
          "ranges": [{ "startOffset": 22163, "endOffset": 23671, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "checkExecSyncError",
          "ranges": [{ "startOffset": 23674, "endOffset": 24060, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "execFileSync",
          "ranges": [{ "startOffset": 24573, "endOffset": 25037, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "execSync",
          "ranges": [{ "startOffset": 25535, "endOffset": 25911, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "validateArgumentNullCheck",
          "ranges": [
            { "startOffset": 25914, "endOffset": 26137, "count": 153 },
            { "startOffset": 26039, "endOffset": 26135, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "validateArgumentsNullCheck",
          "ranges": [
            { "startOffset": 26140, "endOffset": 26302, "count": 1 },
            { "startOffset": 26234, "endOffset": 26300, "count": 2 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "validateTimeout",
          "ranges": [
            { "startOffset": 26305, "endOffset": 26493, "count": 1 },
            { "startOffset": 26363, "endOffset": 26409, "count": 0 },
            { "startOffset": 26411, "endOffset": 26491, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "validateMaxBuffer",
          "ranges": [{ "startOffset": 26496, "endOffset": 26769, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "sanitizeKillSignal",
          "ranges": [
            { "startOffset": 26772, "endOffset": 27135, "count": 1 },
            { "startOffset": 26886, "endOffset": 26936, "count": 0 },
            { "startOffset": 26966, "endOffset": 27133, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "256",
      "url": "node:internal/child_process",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 31799, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "send",
          "ranges": [{ "startOffset": 2498, "endOffset": 2557, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "got",
          "ranges": [{ "startOffset": 2564, "endOffset": 2618, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "send",
          "ranges": [{ "startOffset": 2680, "endOffset": 2747, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "got",
          "ranges": [{ "startOffset": 2754, "endOffset": 2895, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "send",
          "ranges": [{ "startOffset": 2925, "endOffset": 4479, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "postSend",
          "ranges": [{ "startOffset": 4486, "endOffset": 5232, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "got",
          "ranges": [{ "startOffset": 5239, "endOffset": 5696, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "send",
          "ranges": [{ "startOffset": 5761, "endOffset": 5820, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "got",
          "ranges": [{ "startOffset": 5827, "endOffset": 5881, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "send",
          "ranges": [{ "startOffset": 5946, "endOffset": 6066, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "got",
          "ranges": [{ "startOffset": 6073, "endOffset": 6232, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "stdioStringToArray",
          "ranges": [
            { "startOffset": 6243, "endOffset": 6658, "count": 1 },
            { "startOffset": 6335, "endOffset": 6349, "count": 0 },
            { "startOffset": 6354, "endOffset": 6372, "count": 0 },
            { "startOffset": 6377, "endOffset": 6446, "count": 0 },
            { "startOffset": 6516, "endOffset": 6579, "count": 0 },
            { "startOffset": 6600, "endOffset": 6637, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "ChildProcess",
          "ranges": [
            { "startOffset": 6660, "endOffset": 8153, "count": 1 },
            { "startOffset": 8083, "endOffset": 8151, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "ChildProcess._handle.onexit",
          "ranges": [
            { "startOffset": 7001, "endOffset": 8039, "count": 1 },
            { "startOffset": 7049, "endOffset": 7092, "count": 0 },
            { "startOffset": 7159, "endOffset": 7194, "count": 0 },
            { "startOffset": 7270, "endOffset": 7566, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "flushStdio",
          "ranges": [
            { "startOffset": 8276, "endOffset": 8754, "count": 1 },
            { "startOffset": 8366, "endOffset": 8373, "count": 0 },
            { "startOffset": 8416, "endOffset": 8752, "count": 3 },
            { "startOffset": 8657, "endOffset": 8676, "count": 0 },
            { "startOffset": 8677, "endOffset": 8702, "count": 0 },
            { "startOffset": 8727, "endOffset": 8752, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "createSocket",
          "ranges": [{ "startOffset": 8757, "endOffset": 8847, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getHandleWrapType",
          "ranges": [{ "startOffset": 8850, "endOffset": 9079, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "closePendingHandle",
          "ranges": [{ "startOffset": 9081, "endOffset": 9194, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ChildProcess.spawn",
          "ranges": [
            { "startOffset": 9228, "endOffset": 12799, "count": 1 },
            { "startOffset": 9379, "endOffset": 9388, "count": 0 },
            { "startOffset": 9723, "endOffset": 10108, "count": 0 },
            { "startOffset": 10226, "endOffset": 10256, "count": 0 },
            { "startOffset": 10597, "endOffset": 10854, "count": 0 },
            { "startOffset": 10869, "endOffset": 11160, "count": 0 },
            { "startOffset": 11281, "endOffset": 12195, "count": 3 },
            { "startOffset": 11346, "endOffset": 11355, "count": 0 },
            { "startOffset": 11377, "endOffset": 11428, "count": 0 },
            { "startOffset": 11649, "endOffset": 11911, "count": 0 },
            { "startOffset": 11936, "endOffset": 12191, "count": 0 },
            { "startOffset": 12263, "endOffset": 12284, "count": 0 },
            { "startOffset": 12360, "endOffset": 12381, "count": 0 },
            { "startOffset": 12457, "endOffset": 12478, "count": 0 },
            { "startOffset": 12549, "endOffset": 12659, "count": 3 },
            { "startOffset": 12640, "endOffset": 12657, "count": 0 },
            { "startOffset": 12743, "endOffset": 12782, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 12130, "endOffset": 12175, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onErrorNT",
          "ranges": [{ "startOffset": 12803, "endOffset": 12864, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onSpawnNT",
          "ranges": [{ "startOffset": 12867, "endOffset": 12917, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "ChildProcess.kill",
          "ranges": [{ "startOffset": 12950, "endOffset": 13623, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ChildProcess.<computed>",
          "ranges": [{ "startOffset": 13666, "endOffset": 13723, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ChildProcess.ref",
          "ranges": [{ "startOffset": 13756, "endOffset": 13810, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "ChildProcess.unref",
          "ranges": [{ "startOffset": 13845, "endOffset": 13901, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "<instance_members_initializer>",
          "ranges": [{ "startOffset": 13904, "endOffset": 14901, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setupChannel",
          "ranges": [{ "startOffset": 15049, "endOffset": 27173, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "isInternal",
          "ranges": [{ "startOffset": 27208, "endOffset": 27518, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getValidStdio",
          "ranges": [
            { "startOffset": 27552, "endOffset": 30477, "count": 1 },
            { "startOffset": 27728, "endOffset": 27818, "count": 0 },
            { "startOffset": 28062, "endOffset": 28099, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 28212, "endOffset": 30436, "count": 3 },
            { "startOffset": 28470, "endOffset": 28518, "count": 0 },
            { "startOffset": 28548, "endOffset": 28606, "count": 0 },
            { "startOffset": 28719, "endOffset": 28973, "count": 0 },
            { "startOffset": 29000, "endOffset": 29394, "count": 0 },
            { "startOffset": 29425, "endOffset": 29514, "count": 0 },
            { "startOffset": 29550, "endOffset": 29581, "count": 0 },
            { "startOffset": 29683, "endOffset": 29693, "count": 0 },
            { "startOffset": 29710, "endOffset": 30415, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "cleanup",
          "ranges": [{ "startOffset": 28237, "endOffset": 28429, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getSocketList",
          "ranges": [{ "startOffset": 30480, "endOffset": 30796, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "maybeClose",
          "ranges": [{ "startOffset": 30799, "endOffset": 31000, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "spawnSync",
          "ranges": [{ "startOffset": 31002, "endOffset": 31673, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "257",
      "url": "node:dgram",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 28668, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lazyLoadCluster",
          "ranges": [{ "startOffset": 2910, "endOffset": 3007, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket",
          "ranges": [{ "startOffset": 3073, "endOffset": 4712, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "createSocket",
          "ranges": [{ "startOffset": 4823, "endOffset": 4901, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "startListening",
          "ranges": [{ "startOffset": 4904, "endOffset": 5347, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "replaceHandle",
          "ranges": [{ "startOffset": 5349, "endOffset": 5914, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "bufferSize",
          "ranges": [{ "startOffset": 5916, "endOffset": 6208, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "bindServerHandle",
          "ranges": [{ "startOffset": 6276, "endOffset": 6772, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.bind",
          "ranges": [{ "startOffset": 6798, "endOffset": 10253, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.connect",
          "ranges": [{ "startOffset": 10283, "endOffset": 11079, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "_connect",
          "ranges": [{ "startOffset": 11083, "endOffset": 11429, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "doConnect",
          "ranges": [{ "startOffset": 11432, "endOffset": 12078, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.disconnect",
          "ranges": [{ "startOffset": 12111, "endOffset": 12422, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.sendto",
          "ranges": [{ "startOffset": 12527, "endOffset": 12968, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "sliceBuffer",
          "ranges": [{ "startOffset": 12972, "endOffset": 13732, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "fixBufferList",
          "ranges": [{ "startOffset": 13735, "endOffset": 14119, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "enqueue",
          "ranges": [{ "startOffset": 14122, "endOffset": 14549, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onListenSuccess",
          "ranges": [{ "startOffset": 14552, "endOffset": 14690, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onListenError",
          "ranges": [{ "startOffset": 14693, "endOffset": 14817, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "clearQueue",
          "ranges": [{ "startOffset": 14820, "endOffset": 15017, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.send",
          "ranges": [{ "startOffset": 15588, "endOffset": 18481, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "doSend",
          "ranges": [{ "startOffset": 18484, "endOffset": 19627, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "afterSend",
          "ranges": [{ "startOffset": 19629, "endOffset": 19810, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.close",
          "ranges": [{ "startOffset": 19837, "endOffset": 20405, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.<computed>",
          "ranges": [{ "startOffset": 20447, "endOffset": 20580, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "socketCloseNT",
          "ranges": [{ "startOffset": 20584, "endOffset": 20638, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.address",
          "ranges": [{ "startOffset": 20668, "endOffset": 20862, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.remoteAddress",
          "ranges": [{ "startOffset": 20898, "endOffset": 21212, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.setBroadcast",
          "ranges": [{ "startOffset": 21248, "endOffset": 21400, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.setTTL",
          "ranges": [{ "startOffset": 21430, "endOffset": 21608, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.setMulticastTTL",
          "ranges": [{ "startOffset": 21647, "endOffset": 21843, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.setMulticastLoopback",
          "ranges": [{ "startOffset": 21887, "endOffset": 22091, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.setMulticastInterface",
          "ranges": [{ "startOffset": 22136, "endOffset": 22402, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.addMembership",
          "ranges": [{ "startOffset": 22438, "endOffset": 22816, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.dropMembership",
          "ranges": [{ "startOffset": 22854, "endOffset": 23235, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.addSourceSpecificMembership",
          "ranges": [{ "startOffset": 23285, "endOffset": 23896, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.dropSourceSpecificMembership",
          "ranges": [{ "startOffset": 23948, "endOffset": 24565, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "healthCheck",
          "ranges": [{ "startOffset": 24569, "endOffset": 24732, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "stopReceiving",
          "ranges": [{ "startOffset": 24735, "endOffset": 24899, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onMessage",
          "ranges": [{ "startOffset": 24902, "endOffset": 25160, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "onError",
          "ranges": [{ "startOffset": 25163, "endOffset": 25278, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.ref",
          "ranges": [{ "startOffset": 25304, "endOffset": 25411, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.unref",
          "ranges": [{ "startOffset": 25440, "endOffset": 25549, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.setRecvBufferSize",
          "ranges": [{ "startOffset": 25590, "endOffset": 25647, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.setSendBufferSize",
          "ranges": [{ "startOffset": 25688, "endOffset": 25745, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.getRecvBufferSize",
          "ranges": [{ "startOffset": 25786, "endOffset": 25843, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.getSendBufferSize",
          "ranges": [{ "startOffset": 25884, "endOffset": 25941, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.getSendQueueSize",
          "ranges": [{ "startOffset": 25980, "endOffset": 26049, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "Socket.getSendQueueCount",
          "ranges": [{ "startOffset": 26089, "endOffset": 26159, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 26278, "endOffset": 26332, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 26405, "endOffset": 26461, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 26614, "endOffset": 26671, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 26747, "endOffset": 26806, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 26962, "endOffset": 27019, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 27095, "endOffset": 27154, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 27306, "endOffset": 27359, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 27431, "endOffset": 27486, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 27638, "endOffset": 27695, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 27771, "endOffset": 27830, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 27937, "endOffset": 27972, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 28081, "endOffset": 28118, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "get",
          "ranges": [{ "startOffset": 28403, "endOffset": 28439, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "set",
          "ranges": [{ "startOffset": 28443, "endOffset": 28484, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "258",
      "url": "node:internal/dgram",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1851, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lookup4",
          "ranges": [{ "startOffset": 478, "endOffset": 579, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "lookup6",
          "ranges": [{ "startOffset": 582, "endOffset": 677, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "newHandle",
          "ranges": [{ "startOffset": 679, "endOffset": 1323, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "_createSocketHandle",
          "ranges": [{ "startOffset": 1326, "endOffset": 1774, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "259",
      "url": "node:internal/socket_list",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 2709, "count": 1 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "SocketListSend",
          "ranges": [{ "startOffset": 235, "endOffset": 376, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "_request",
          "ranges": [{ "startOffset": 380, "endOffset": 1035, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "close",
          "ranges": [{ "startOffset": 1039, "endOffset": 1190, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "getConnections",
          "ranges": [{ "startOffset": 1194, "endOffset": 1430, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "SocketListReceive",
          "ranges": [{ "startOffset": 1544, "endOffset": 2404, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "add",
          "ranges": [{ "startOffset": 2408, "endOffset": 2649, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "260",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/promise-spawn/lib/escape.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1538, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "cmd",
          "ranges": [{ "startOffset": 216, "endOffset": 1057, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "sh",
          "ranges": [
            { "startOffset": 1070, "endOffset": 1502, "count": 1 },
            { "startOffset": 1104, "endOffset": 1125, "count": 0 },
            { "startOffset": 1198, "endOffset": 1501, "count": 0 }
          ],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "261",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/package-envs.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 826, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "packageEnvs",
          "ranges": [
            { "startOffset": 20, "endOffset": 549, "count": 2 },
            { "startOffset": 99, "endOffset": 534, "count": 6 },
            { "startOffset": 128, "endOffset": 150, "count": 2 },
            { "startOffset": 150, "endOffset": 530, "count": 4 },
            { "startOffset": 191, "endOffset": 232, "count": 0 },
            { "startOffset": 262, "endOffset": 384, "count": 0 },
            { "startOffset": 419, "endOffset": 474, "count": 1 },
            { "startOffset": 474, "endOffset": 530, "count": 3 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 282, "endOffset": 377, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "module.exports",
          "ranges": [{ "startOffset": 657, "endOffset": 825, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "262",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/node-gyp/lib/index.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            { "startOffset": 0, "endOffset": 349, "count": 1 },
            { "startOffset": 83, "endOffset": 119, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "isNodeGypPackage",
          "ranges": [{ "startOffset": 121, "endOffset": 259, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "263",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/signal-manager.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1051, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "handleSignal",
          "ranges": [{ "startOffset": 369, "endOffset": 445, "count": 0 }],
          "isBlockCoverage": false
        },
        {
          "functionName": "setupListeners",
          "ranges": [
            { "startOffset": 470, "endOffset": 590, "count": 1 },
            { "startOffset": 519, "endOffset": 561, "count": 2 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "cleanupListeners",
          "ranges": [
            { "startOffset": 617, "endOffset": 795, "count": 1 },
            { "startOffset": 701, "endOffset": 759, "count": 2 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "add",
          "ranges": [{ "startOffset": 809, "endOffset": 985, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 918, "endOffset": 982, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    },
    {
      "scriptId": "264",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/is-server-package.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 245, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "module.exports",
          "ranges": [{ "startOffset": 104, "endOffset": 244, "count": 0 }],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "265",
      "url": "file:///usr/local/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/validate-options.js",
      "functions": [
        {
          "functionName": "",
          "ranges": [{ "startOffset": 0, "endOffset": 1212, "count": 1 }],
          "isBlockCoverage": true
        },
        {
          "functionName": "validateOptions",
          "ranges": [
            { "startOffset": 24, "endOffset": 1177, "count": 1 },
            { "startOffset": 84, "endOffset": 161, "count": 0 },
            { "startOffset": 327, "endOffset": 397, "count": 0 },
            { "startOffset": 439, "endOffset": 508, "count": 0 },
            { "startOffset": 541, "endOffset": 575, "count": 0 },
            { "startOffset": 577, "endOffset": 658, "count": 0 },
            { "startOffset": 698, "endOffset": 771, "count": 0 },
            { "startOffset": 804, "endOffset": 828, "count": 0 },
            { "startOffset": 830, "endOffset": 905, "count": 0 },
            { "startOffset": 975, "endOffset": 1049, "count": 0 },
            { "startOffset": 1074, "endOffset": 1100, "count": 0 },
            { "startOffset": 1102, "endOffset": 1175, "count": 0 }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [{ "startOffset": 946, "endOffset": 972, "count": 1 }],
          "isBlockCoverage": true
        }
      ]
    }
  ],
  "timestamp": 79659.80039,
  "source-map-cache": {
    "file:///usr/local/lib/node_modules/npm/node_modules/walk-up-path/dist/cjs/index.js": {
      "lineLengths": [
        13, 62, 24, 31, 33, 51, 19, 45, 26, 18, 9, 14, 22, 9, 5, 2, 24, 33
      ],
      "data": null,
      "url": "index.js.map"
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/which/node_modules/isexe/dist/cjs/index.js": {
      "lineLengths": [
        13, 97, 33, 53, 88, 68, 5, 39, 29, 33, 17, 4, 96, 72, 21, 21, 3, 66, 42,
        20, 141, 36, 18, 2, 72, 126, 2, 62, 70, 50, 22, 50, 22, 47, 71, 50, 3,
        66, 3, 27, 3, 62, 20, 3, 25, 33
      ],
      "data": null,
      "url": "index.js.map"
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/which/node_modules/isexe/dist/cjs/posix.js": {
      "lineLengths": [
        13, 3, 65, 27, 2, 10, 3, 62, 38, 27, 42, 3, 67, 45, 3, 45, 45, 9, 68, 5,
        15, 21, 49, 25, 17, 5, 2, 22, 3, 68, 58, 3, 38, 45, 9, 60, 5, 15, 21,
        49, 25, 17, 5, 2, 20, 79, 38, 52, 67, 67, 53, 49, 5, 49, 26, 25, 25, 33,
        33, 33, 21, 24, 39, 37, 35, 2, 33
      ],
      "data": null,
      "url": "posix.js.map"
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/which/node_modules/isexe/dist/cjs/win32.js": {
      "lineLengths": [
        13, 3, 67, 33, 2, 10, 3, 62, 38, 27, 42, 3, 69, 65, 3, 45, 45, 9, 74, 5,
        15, 21, 49, 25, 17, 5, 2, 22, 3, 73, 75, 3, 38, 45, 9, 66, 5, 15, 21,
        49, 25, 17, 5, 2, 20, 41, 60, 39, 37, 20, 5, 46, 43, 73, 29, 24, 9, 5,
        17, 2, 88, 33
      ],
      "data": null,
      "url": "win32.js.map"
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/which/node_modules/isexe/dist/cjs/options.js": {
      "lineLengths": [13, 62, 35],
      "data": null,
      "url": "options.js.map"
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/minipass/dist/commonjs/index.js": {
      "lineLengths": [
        13, 72, 62, 2, 62, 87, 51, 13, 7, 21, 21, 6, 45, 62, 61, 3, 78, 40, 3,
        30, 28, 29, 45, 37, 36, 28, 3, 67, 3, 32, 28, 46, 35, 69, 61, 32, 3, 67,
        3, 32, 28, 46, 36, 32, 32, 26, 46, 41, 43, 45, 32, 28, 30, 40, 36, 34,
        34, 32, 32, 32, 30, 44, 40, 42, 40, 42, 38, 42, 30, 36, 34, 36, 30, 30,
        34, 32, 46, 38, 49, 29, 79, 60, 11, 32, 24, 47, 27, 78, 3, 62, 2, 12, 3,
        12, 8, 9, 9, 12, 34, 23, 25, 25, 43, 44, 5, 14, 56, 5, 34, 25, 24, 24,
        11, 22, 26, 28, 5, 1, 3, 67, 22, 2, 12, 3, 36, 14, 59, 23, 5, 34, 31,
        56, 42, 5, 1, 50, 90, 3, 34, 2, 58, 2, 75, 55, 2, 67, 41, 3, 51, 22, 21,
        17, 18, 17, 15, 12, 14, 18, 26, 27, 21, 27, 23, 24, 13, 22, 24, 24, 7,
        40, 7, 20, 7, 37, 7, 20, 7, 69, 70, 51, 63, 7, 26, 35, 16, 16, 73, 84,
        9, 43, 36, 34, 9, 46, 46, 37, 9, 14, 37, 34, 9, 38, 38, 69, 19, 63, 60,
        79, 9, 63, 59, 77, 9, 35, 21, 34, 33, 30, 13, 18, 70, 13, 9, 5, 7, 66,
        6, 62, 77, 55, 73, 15, 7, 24, 34, 5, 7, 55, 7, 20, 30, 5, 7, 49, 7, 24,
        70, 5, 7, 67, 7, 23, 70, 5, 7, 43, 7, 22, 32, 5, 7, 49, 7, 25, 72, 5, 7,
        38, 7, 21, 27, 5, 7, 45, 6, 78, 74, 34, 7, 22, 41, 5, 57, 15, 29, 49,
        43, 5, 7, 43, 7, 19, 29, 5, 7, 78, 34, 7, 22, 32, 26, 25, 22, 47, 30,
        141, 24, 9, 45, 26, 30, 9, 22, 30, 49, 67, 71, 42, 63, 59, 43, 58, 86,
        13, 48, 58, 43, 13, 49, 88, 13, 9, 58, 62, 31, 32, 33, 58, 34, 32, 30,
        41, 16, 40, 41, 38, 19, 23, 33, 9, 56, 55, 28, 41, 38, 19, 23, 33, 9,
        70, 61, 40, 64, 73, 52, 49, 9, 55, 52, 47, 9, 73, 54, 30, 26, 37, 12,
        36, 37, 34, 15, 19, 29, 5, 7, 38, 6, 74, 17, 6, 70, 77, 66, 6, 72, 31,
        7, 13, 28, 24, 32, 39, 22, 44, 35, 24, 9, 29, 21, 59, 79, 40, 28, 31,
        43, 71, 14, 9, 59, 31, 19, 5, 22, 29, 32, 14, 28, 45, 36, 45, 45, 38,
        40, 13, 18, 48, 41, 40, 13, 9, 33, 47, 31, 21, 5, 30, 42, 23, 30, 9, 45,
        26, 30, 9, 32, 40, 15, 33, 25, 30, 66, 37, 65, 63, 43, 35, 20, 5, 51,
        16, 28, 19, 58, 35, 9, 29, 29, 28, 32, 26, 27, 35, 12, 31, 5, 7, 61, 6,
        79, 77, 78, 76, 41, 7, 14, 30, 5, 7, 23, 7, 13, 30, 28, 32, 5, 7, 53, 7,
        21, 31, 5, 7, 71, 46, 7, 19, 29, 5, 7, 56, 7, 18, 28, 5, 25, 29, 36, 12,
        47, 33, 5, 21, 29, 36, 12, 57, 36, 5, 30, 62, 33, 59, 31, 5, 25, 33, 29,
        5, 7, 74, 6, 33, 7, 22, 28, 24, 32, 40, 26, 57, 29, 12, 42, 46, 50, 20,
        25, 27, 9, 14, 78, 76, 46, 44, 57, 28, 44, 16, 31, 9, 20, 5, 7, 47, 6,
        74, 73, 73, 52, 7, 18, 57, 16, 43, 65, 42, 17, 33, 13, 16, 62, 23, 9, 5,
        7, 36, 7, 30, 36, 5, 7, 64, 71, 6, 68, 6, 80, 57, 6, 75, 78, 26, 6, 77,
        79, 16, 7, 21, 42, 28, 36, 34, 56, 31, 13, 9, 65, 35, 9, 53, 27, 40, 9,
        57, 30, 28, 63, 16, 50, 9, 19, 5, 7, 37, 7, 33, 37, 5, 7, 45, 6, 73, 76,
        73, 52, 7, 22, 43, 73, 74, 64, 28, 64, 44, 35, 38, 38, 13, 9, 19, 5, 7,
        60, 6, 80, 76, 79, 14, 7, 28, 49, 48, 36, 58, 38, 13, 9, 19, 5, 7, 47,
        7, 22, 33, 5, 24, 34, 33, 31, 40, 24, 38, 29, 35, 32, 29, 35, 39, 9, 5,
        7, 66, 71, 6, 73, 72, 18, 6, 74, 74, 75, 71, 19, 6, 72, 63, 6, 79, 74,
        71, 6, 74, 66, 7, 23, 29, 74, 29, 29, 31, 30, 25, 9, 33, 45, 23, 29, 63,
        43, 9, 32, 35, 9, 34, 32, 57, 55, 29, 44, 45, 23, 9, 34, 39, 36, 71, 43,
        24, 35, 23, 9, 35, 45, 35, 23, 9, 57, 39, 40, 23, 9, 35, 44, 31, 19, 5,
        22, 38, 45, 29, 9, 71, 31, 19, 5, 17, 30, 25, 33, 30, 26, 51, 31, 5, 18,
        28, 45, 23, 46, 39, 17, 37, 45, 13, 9, 38, 20, 9, 38, 39, 19, 5, 7, 74,
        23, 7, 21, 39, 26, 11, 30, 31, 60, 39, 33, 30, 24, 34, 43, 11, 16, 19,
        5, 7, 78, 28, 6, 41, 7, 20, 31, 59, 9, 41, 30, 26, 50, 5, 7, 64, 7, 21,
        49, 76, 47, 44, 11, 5, 7, 45, 6, 74, 7, 30, 70, 22, 32, 28, 34, 25, 27,
        52, 10, 28, 24, 30, 36, 29, 68, 26, 30, 24, 23, 35, 41, 39, 47, 23, 27,
        14, 39, 41, 39, 47, 29, 54, 14, 33, 41, 41, 47, 23, 58, 14, 73, 46, 29,
        30, 48, 42, 40, 42, 15, 10, 16, 17, 24, 25, 38, 28, 14, 10, 5, 7, 38, 6,
        75, 44, 7, 25, 70, 22, 32, 28, 28, 25, 34, 38, 34, 27, 52, 10, 28, 24,
        30, 38, 68, 10, 31, 31, 35, 16, 17, 24, 25, 33, 28, 14, 10, 5, 7, 79, 6,
        70, 19, 6, 76, 30, 6, 70, 21, 7, 17, 30, 19, 39, 16, 37, 24, 9, 31, 31,
        62, 32, 31, 24, 60, 23, 15, 35, 61, 12, 33, 20, 5, 7, 33, 6, 70, 6, 18,
        7, 27, 32, 5, 1, 28, 33
      ],
      "data": null,
      "url": "index.js.map"
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/minimatch/dist/commonjs/index.js": {
      "lineLengths": [
        13, 72, 62, 2, 62, 221, 70, 71, 37, 43, 47, 49, 63, 40, 58, 21, 5, 52,
        2, 30, 56, 45, 77, 58, 39, 28, 70, 2, 42, 28, 48, 2, 35, 69, 77, 28, 72,
        23, 61, 69, 42, 46, 40, 13, 21, 28, 60, 2, 49, 43, 13, 21, 28, 60, 2,
        43, 43, 61, 2, 40, 40, 61, 2, 35, 26, 57, 2, 38, 26, 62, 2, 21, 63, 41,
        22, 54, 24, 15, 14, 25, 24, 2, 20, 76, 36, 41, 46, 32, 49, 21, 32, 26,
        60, 63, 45, 61, 34, 45, 47, 93, 24, 42, 51, 27, 70, 33, 5, 35, 80, 29,
        59, 48, 50, 13, 38, 66, 13, 10, 41, 33, 53, 55, 13, 32, 52, 69, 13, 10,
        75, 71, 83, 64, 83, 93, 93, 22, 35, 7, 2, 28, 46, 19, 21, 19, 30, 35,
        43, 2, 33, 21, 17, 48, 63, 60, 60, 63, 39, 25, 5, 51, 2, 34, 52, 41, 50,
        68, 68, 61, 66, 2, 74, 72, 69, 62, 83, 24, 42, 48, 47, 41, 44, 27, 5,
        16, 2, 22, 40, 31, 44, 74, 17, 12, 8, 12, 25, 13, 11, 12, 10, 28, 12,
        12, 14, 11, 14, 13, 23, 11, 40, 67, 32, 31, 31, 60, 51, 35, 83, 40, 60,
        9, 73, 27, 28, 43, 29, 27, 41, 44, 33, 52, 44, 52, 26, 28, 22, 39, 20,
        5, 16, 64, 24, 9, 41, 41, 45, 32, 13, 9, 21, 5, 19, 12, 37, 37, 53, 62,
        32, 19, 9, 23, 30, 19, 9, 44, 27, 32, 56, 28, 61, 9, 47, 71, 42, 70, 60,
        48, 10, 75, 76, 74, 71, 55, 49, 27, 52, 60, 53, 44, 34, 62, 42, 54, 28,
        87, 17, 35, 75, 17, 13, 47, 11, 38, 62, 60, 51, 29, 55, 38, 34, 34, 51,
        47, 45, 31, 17, 13, 9, 43, 5, 61, 62, 61, 64, 43, 27, 65, 38, 56, 63,
        51, 46, 21, 17, 13, 9, 55, 37, 68, 61, 62, 9, 42, 63, 57, 9, 14, 58, 66,
        9, 25, 5, 44, 42, 39, 24, 63, 27, 47, 24, 17, 31, 45, 17, 13, 25, 11, 5,
        54, 33, 39, 49, 49, 53, 31, 17, 36, 81, 34, 35, 21, 17, 31, 27, 19, 53,
        11, 5, 33, 36, 43, 9, 33, 12, 33, 47, 48, 60, 39, 53, 63, 33, 48, 44,
        43, 28, 21, 17, 39, 41, 60, 40, 32, 17, 13, 50, 23, 63, 40, 65, 40, 44,
        28, 17, 13, 31, 49, 5, 45, 34, 35, 53, 21, 6, 68, 68, 70, 57, 6, 86, 39,
        42, 32, 6, 73, 67, 37, 33, 12, 33, 94, 42, 28, 67, 33, 53, 64, 30, 21,
        75, 55, 35, 55, 21, 45, 44, 45, 38, 33, 29, 36, 37, 30, 37, 38, 33, 21,
        40, 64, 40, 49, 37, 42, 25, 17, 51, 52, 64, 43, 57, 67, 37, 52, 48, 47,
        32, 25, 21, 43, 45, 64, 44, 36, 21, 17, 54, 27, 67, 44, 69, 44, 75, 59,
        58, 47, 43, 32, 21, 17, 13, 31, 25, 5, 42, 58, 50, 56, 6, 63, 55, 38,
        56, 60, 107, 30, 38, 43, 26, 17, 13, 9, 49, 5, 44, 19, 19, 24, 23, 48,
        34, 59, 21, 21, 13, 77, 35, 21, 13, 77, 35, 21, 13, 37, 24, 63, 33, 34,
        33, 28, 35, 21, 21, 13, 37, 24, 63, 33, 34, 33, 28, 35, 21, 21, 13, 18,
        29, 13, 9, 70, 41, 47, 5, 19, 26, 19, 37, 27, 29, 79, 29, 27, 9, 25, 55,
        29, 5, 51, 45, 59, 55, 23, 46, 37, 68, 75, 30, 29, 87, 41, 33, 33, 34,
        42, 96, 47, 36, 36, 37, 49, 45, 64, 70, 69, 59, 60, 38, 36, 53, 21, 41,
        47, 21, 17, 13, 9, 68, 76, 55, 37, 51, 9, 56, 60, 105, 40, 32, 29, 38,
        36, 52, 33, 30, 29, 13, 32, 41, 56, 23, 57, 30, 30, 30, 24, 65, 72, 41,
        70, 45, 18, 51, 32, 31, 50, 36, 35, 53, 51, 49, 50, 28, 32, 32, 48, 66,
        45, 63, 42, 74, 43, 43, 47, 48, 73, 41, 21, 32, 17, 67, 33, 45, 85, 73,
        84, 79, 41, 36, 21, 26, 58, 73, 48, 49, 76, 79, 34, 25, 63, 79, 29, 21,
        17, 38, 83, 37, 30, 38, 82, 36, 36, 21, 17, 36, 29, 13, 38, 60, 65, 20,
        40, 30, 54, 13, 18, 32, 55, 13, 21, 29, 9, 60, 60, 51, 58, 60, 63, 60,
        65, 37, 49, 72, 37, 64, 28, 24, 9, 29, 59, 61, 35, 27, 9, 29, 56, 64,
        61, 36, 52, 33, 9, 14, 37, 36, 9, 28, 5, 19, 68, 5, 20, 67, 37, 20, 29,
        36, 27, 22, 63, 66, 14, 28, 42, 60, 9, 53, 38, 29, 45, 42, 29, 39, 44,
        9, 49, 38, 29, 41, 38, 29, 35, 37, 9, 54, 74, 9, 50, 35, 9, 78, 49, 55,
        68, 9, 18, 5, 14, 49, 31, 59, 36, 10, 64, 65, 51, 29, 26, 32, 31, 9, 37,
        42, 18, 25, 28, 31, 59, 42, 58, 78, 57, 70, 43, 20, 29, 41, 42, 54, 37,
        17, 44, 37, 44, 42, 33, 15, 34, 39, 39, 74, 27, 17, 41, 74, 73, 21, 26,
        40, 21, 17, 46, 66, 17, 53, 78, 49, 17, 15, 68, 10, 23, 71, 75, 71, 36,
        56, 43, 56, 24, 38, 13, 62, 33, 9, 20, 35, 32, 9, 28, 27, 5, 19, 59, 69,
        54, 50, 43, 32, 9, 59, 50, 43, 9, 14, 34, 9, 5, 38, 45, 54, 25, 27, 25,
        9, 25, 28, 9, 35, 24, 9, 37, 40, 29, 40, 9, 53, 38, 46, 66, 67, 43, 47,
        29, 45, 82, 41, 24, 67, 33, 13, 9, 46, 35, 26, 60, 34, 13, 62, 22, 41,
        32, 17, 36, 13, 9, 67, 38, 33, 25, 9, 27, 5, 26, 57, 5, 1, 30, 21, 35,
        103, 41, 112, 45, 118, 20, 37, 40, 46, 52, 33
      ],
      "data": null,
      "url": "index.js.map"
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/minimatch/dist/commonjs/assert-valid-pattern.js": {
      "lineLengths": [13, 62, 36, 37, 41, 38, 47, 5, 46, 51, 5, 2, 48, 48],
      "data": null,
      "url": "assert-valid-pattern.js.map"
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/minimatch/dist/commonjs/ast.js": {
      "lineLengths": [
        13, 30, 62, 21, 65, 47, 49, 42, 65, 64, 42, 71, 53, 29, 71, 69, 69, 44,
        58, 38, 46, 74, 32, 21, 32, 26, 74, 38, 33, 73, 59, 11, 9, 10, 14, 19,
        16, 12, 17, 10, 24, 13, 14, 54, 43, 22, 45, 25, 42, 17, 34, 30, 62, 76,
        65, 52, 34, 74, 5, 20, 29, 41, 34, 28, 38, 38, 25, 37, 47, 9, 80, 30, 5,
        31, 16, 41, 34, 25, 79, 9, 14, 36, 83, 9, 5, 17, 29, 32, 56, 29, 24, 28,
        48, 24, 32, 14, 40, 31, 25, 81, 22, 31, 24, 89, 50, 45, 55, 76, 25, 44,
        50, 21, 17, 23, 31, 13, 9, 20, 5, 20, 32, 25, 25, 33, 85, 54, 13, 32,
        32, 9, 5, 14, 38, 84, 63, 41, 28, 27, 35, 74, 25, 9, 19, 5, 15, 32, 24,
        58, 37, 25, 36, 24, 81, 31, 53, 35, 58, 29, 13, 9, 20, 5, 13, 32, 24,
        39, 24, 35, 25, 23, 41, 50, 29, 65, 28, 44, 5, 18, 37, 28, 12, 40, 5,
        19, 45, 38, 24, 9, 17, 5, 42, 29, 28, 28, 29, 32, 65, 24, 25, 36, 42,
        75, 42, 45, 41, 29, 29, 17, 30, 47, 53, 44, 25, 21, 80, 40, 21, 29, 29,
        17, 37, 35, 35, 37, 29, 29, 17, 78, 34, 29, 48, 56, 34, 29, 17, 25, 13,
        26, 21, 9, 48, 31, 24, 38, 25, 21, 32, 38, 71, 38, 41, 37, 25, 25, 13,
        26, 43, 49, 40, 21, 17, 76, 36, 17, 25, 25, 13, 33, 31, 31, 33, 25, 25,
        13, 60, 31, 25, 45, 31, 52, 25, 13, 28, 31, 25, 33, 42, 25, 13, 28, 60,
        41, 17, 31, 25, 41, 25, 13, 21, 9, 29, 74, 41, 24, 34, 46, 17, 5, 44,
        54, 48, 19, 5, 72, 21, 19, 40, 29, 32, 44, 28, 37, 66, 71, 75, 46, 36,
        29, 36, 49, 59, 24, 24, 9, 77, 60, 21, 24, 11, 5, 19, 29, 5, 73, 73, 77,
        74, 73, 76, 72, 62, 6, 43, 32, 60, 43, 50, 14, 32, 16, 6, 71, 28, 53,
        34, 66, 43, 50, 14, 52, 21, 6, 78, 79, 79, 19, 6, 76, 64, 69, 32, 66,
        49, 56, 6, 75, 68, 6, 74, 41, 6, 78, 79, 6, 22, 51, 48, 75, 6, 81, 78,
        74, 42, 6, 77, 72, 46, 6, 31, 74, 73, 75, 30, 52, 32, 29, 25, 59, 35,
        27, 70, 64, 49, 60, 51, 26, 14, 26, 27, 33, 57, 83, 67, 84, 67, 100, 42,
        52, 78, 44, 42, 79, 58, 74, 80, 76, 81, 83, 68, 86, 92, 21, 17, 13, 73,
        25, 31, 41, 45, 34, 13, 44, 20, 22, 49, 52, 28, 14, 9, 73, 73, 44, 64,
        31, 62, 44, 75, 79, 39, 38, 30, 29, 39, 83, 9, 43, 72, 16, 40, 38, 32,
        9, 29, 56, 9, 62, 23, 50, 77, 9, 14, 43, 67, 26, 81, 30, 27, 35, 25, 39,
        30, 61, 33, 65, 38, 50, 41, 9, 16, 18, 46, 48, 24, 10, 5, 25, 26, 23,
        59, 33, 40, 64, 13, 32, 77, 68, 47, 22, 10, 66, 23, 5, 56, 29, 20, 26,
        47, 37, 27, 33, 58, 25, 13, 29, 44, 33, 17, 22, 36, 17, 25, 13, 28, 106,
        31, 30, 47, 38, 49, 29, 17, 13, 28, 44, 38, 20, 31, 32, 25, 13, 28, 28,
        32, 25, 13, 34, 9, 74, 5, 1, 18, 31
      ],
      "data": null,
      "url": "ast.js.map"
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/minimatch/dist/commonjs/brace-expressions.js": {
      "lineLengths": [
        13, 72, 40, 62, 28, 62, 22, 48, 41, 50, 38, 35, 35, 46, 35, 34, 34, 49,
        35, 54, 39, 2, 63, 19, 58, 37, 74, 60, 51, 63, 66, 67, 41, 65, 29, 40,
        25, 25, 35, 53, 5, 24, 22, 20, 20, 25, 22, 25, 23, 21, 24, 36, 33, 56,
        26, 16, 21, 9, 49, 27, 18, 9, 24, 25, 28, 32, 20, 25, 13, 70, 9, 37, 72,
        79, 46, 67, 37, 70, 21, 36, 28, 40, 24, 42, 39, 35, 17, 13, 9, 56, 25,
        25, 66, 31, 33, 76, 13, 40, 44, 13, 28, 16, 21, 9, 45, 70, 43, 46, 19,
        21, 9, 42, 27, 19, 21, 9, 60, 36, 12, 5, 21, 62, 55, 37, 5, 68, 70, 41,
        54, 5, 77, 74, 77, 74, 28, 30, 35, 18, 75, 61, 5, 77, 73, 45, 43, 23,
        21, 20, 45, 2, 32, 45
      ],
      "data": null,
      "url": "brace-expressions.js.map"
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/minimatch/dist/commonjs/unescape.js": {
      "lineLengths": [
        13, 62, 26, 3, 64, 2, 72, 77, 72, 66, 2, 70, 33, 2, 77, 16, 3, 65, 31,
        43, 85, 2, 28, 36
      ],
      "data": null,
      "url": "unescape.js.map"
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/minimatch/dist/commonjs/escape.js": {
      "lineLengths": [
        13, 62, 24, 3, 49, 2, 73, 75, 74, 75, 73, 3, 63, 60, 64, 58, 31, 41, 44,
        2, 24, 34
      ],
      "data": null,
      "url": "escape.js.map"
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/glob/dist/commonjs/index.js": {
      "lineLengths": [
        13, 62, 315, 41, 39, 49, 39, 112, 116, 37, 106, 47, 119, 41, 112, 48,
        61, 1, 40, 44, 57, 1, 32, 42, 59, 1, 28, 45, 55, 1, 49, 62, 1, 42, 45,
        58, 1, 34, 65, 36, 69, 38, 46, 26, 3, 40, 27, 29, 3, 37, 16, 13, 23, 15,
        27, 19, 35, 16, 29, 20, 37, 25, 38, 31, 35, 3, 33, 33
      ],
      "data": {
        "version": 3,
        "file": "index.js",
        "sourceRoot": "",
        "sources": [
          "file:///usr/local/lib/node_modules/npm/node_modules/glob/src/index.ts"
        ],
        "names": [],
        "mappings": ";;;AAAA,yCAA4C;AAS5C,uCAAgC;AAChC,iDAAyC;AAEzC,uCAA4C;AAAnC,mGAAA,MAAM,OAAA;AAAE,qGAAA,QAAQ,OAAA;AAQzB,qCAAgC;AAAvB,+FAAA,IAAI,OAAA;AAOb,+CAAyC;AAAhC,wGAAA,QAAQ,OAAA;AACjB,yCAAoC;AAA3B,mGAAA,MAAM,OAAA;AAyBf,SAAgB,cAAc,CAC5B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,UAAU,EAAE,CAAA;AAChD,CAAC;AALD,wCAKC;AAsBD,SAAgB,UAAU,CACxB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,CAAA;AAC5C,CAAC;AALD,gCAKC;AAqBD,SAAgB,QAAQ,CACtB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAA;AAC9C,CAAC;AALD,4BAKC;AAwBD,KAAK,UAAU,KAAK,CAClB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAA;AAC1C,CAAC;AAqBD,SAAgB,eAAe,CAC7B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAA;AACjD,CAAC;AALD,0CAKC;AAqBD,SAAgB,WAAW,CACzB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,OAAO,EAAE,CAAA;AAC7C,CAAC;AALD,kCAKC;AAED,iEAAiE;AACpD,QAAA,UAAU,GAAG,cAAc,CAAA;AAC3B,QAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAA;AAC5D,QAAA,WAAW,GAAG,eAAe,CAAA;AAC7B,QAAA,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE;IAChD,IAAI,EAAE,eAAe;CACtB,CAAC,CAAA;AACW,QAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;IAC1C,MAAM,EAAE,cAAc;IACtB,OAAO,EAAE,eAAe;CACzB,CAAC,CAAA;AAEW,QAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;IACvC,IAAI,EAAE,KAAK;IACX,QAAQ;IACR,IAAI,EAAJ,YAAI;IACJ,UAAU;IACV,MAAM,EAAN,cAAM;IACN,cAAc;IACd,UAAU,EAAV,kBAAU;IACV,WAAW;IACX,OAAO,EAAP,eAAO;IACP,eAAe;IACf,WAAW,EAAX,mBAAW;IACX,IAAI,EAAJ,cAAI;IACJ,QAAQ,EAAR,uBAAQ;IACR,MAAM,EAAN,kBAAM;IACN,QAAQ,EAAR,oBAAQ;CACT,CAAC,CAAA;AACF,YAAI,CAAC,IAAI,GAAG,YAAI,CAAA",
        "sourcesContent": [
          "import { escape, unescape } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nimport { Glob } from './glob.js'\nimport { hasMagic } from './has-magic.js'\n\nexport { escape, unescape } from 'minimatch'\nexport type {\n  FSOption,\n  Path,\n  WalkOptions,\n  WalkOptionsWithFileTypesTrue,\n  WalkOptionsWithFileTypesUnset,\n} from 'path-scurry'\nexport { Glob } from './glob.js'\nexport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nexport { hasMagic } from './has-magic.js'\nexport { Ignore } from './ignore.js'\nexport type { IgnoreLike } from './ignore.js'\nexport type { MatchStream } from './walker.js'\n\n/**\n * Syncronous form of {@link globStream}. Will read all the matches as fast as\n * you consume them, even all in a single tick if you consume them immediately,\n * but will still respond to backpressure if they're not consumed immediately.\n */\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesUnset,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).streamSync()\n}\n\n/**\n * Return a stream that emits all the strings or `Path` objects and\n * then emits `end` when completed.\n */\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStream(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).stream()\n}\n\n/**\n * Synchronous form of {@link glob}\n */\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Path[]\nexport function globSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Path[] | string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walkSync()\n}\n\n/**\n * Perform an asynchronous glob search for the pattern(s) specified. Returns\n * [Path](https://isaacs.github.io/path-scurry/classes/PathBase) objects if the\n * {@link withFileTypes} option is set to `true`. See {@link GlobOptions} for\n * full option descriptions.\n */\nasync function glob_(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Promise<Path[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions,\n): Promise<Path[] | string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walk()\n}\n\n/**\n * Return a sync iterator for walking glob pattern matches.\n */\nexport function globIterateSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Generator<Path, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Generator<Path, void, void> | Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterateSync()\n}\n\n/**\n * Return an async iterator for walking glob pattern matches.\n */\nexport function globIterate(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): AsyncGenerator<Path, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions,\n): AsyncGenerator<Path, void, void> | AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterate()\n}\n\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexport const streamSync = globStreamSync\nexport const stream = Object.assign(globStream, { sync: globStreamSync })\nexport const iterateSync = globIterateSync\nexport const iterate = Object.assign(globIterate, {\n  sync: globIterateSync,\n})\nexport const sync = Object.assign(globSync, {\n  stream: globStreamSync,\n  iterate: globIterateSync,\n})\n\nexport const glob = Object.assign(glob_, {\n  glob: glob_,\n  globSync,\n  sync,\n  globStream,\n  stream,\n  globStreamSync,\n  streamSync,\n  globIterate,\n  iterate,\n  globIterateSync,\n  iterateSync,\n  Glob,\n  hasMagic,\n  escape,\n  unescape,\n})\nglob.glob = glob\n"
        ]
      },
      "url": null
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/glob/dist/commonjs/glob.js": {
      "lineLengths": [
        13, 62, 22, 41, 39, 45, 45, 43, 44, 48, 55, 14, 43, 20, 14, 3, 54, 3,
        12, 13, 8, 9, 8, 16, 11, 11, 18, 9, 14, 13, 12, 11, 10, 10, 15, 12, 13,
        13, 11, 9, 11, 25, 18, 24, 7, 47, 7, 9, 7, 60, 7, 13, 7, 65, 6, 61, 6,
        62, 71, 37, 6, 71, 13, 7, 32, 29, 18, 57, 28, 50, 34, 36, 30, 46, 34,
        32, 24, 26, 9, 77, 63, 9, 34, 30, 50, 38, 34, 40, 38, 70, 44, 42, 23,
        73, 32, 34, 64, 74, 9, 42, 32, 9, 35, 42, 43, 26, 40, 62, 9, 29, 34, 71,
        13, 76, 9, 31, 57, 57, 26, 38, 44, 53, 84, 13, 9, 14, 84, 77, 67, 51,
        48, 36, 28, 15, 9, 41, 70, 66, 69, 42, 88, 21, 47, 20, 26, 38, 34, 32,
        28, 28, 30, 27, 33, 36, 60, 37, 10, 77, 62, 34, 40, 23, 21, 50, 35, 33,
        19, 58, 32, 70, 11, 5, 18, 74, 73, 79, 46, 16, 82, 29, 54, 59, 31, 40,
        36, 62, 23, 10, 5, 16, 16, 75, 29, 54, 59, 31, 40, 36, 62, 26, 10, 5,
        14, 75, 25, 50, 55, 27, 36, 32, 58, 20, 5, 18, 75, 25, 50, 55, 27, 36,
        32, 58, 24, 5, 7, 64, 33, 7, 19, 52, 5, 25, 34, 5, 7, 71, 33, 7, 15, 53,
        5, 30, 30, 5, 1, 20, 32
      ],
      "data": {
        "version": 3,
        "file": "glob.js",
        "sourceRoot": "",
        "sources": [
          "file:///usr/local/lib/node_modules/npm/node_modules/glob/src/glob.ts"
        ],
        "names": [],
        "mappings": "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",
        "sourcesContent": [
          "import { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { fileURLToPath } from 'node:url'\nimport {\n  FSOption,\n  Path,\n  PathScurry,\n  PathScurryDarwin,\n  PathScurryPosix,\n  PathScurryWin32,\n} from 'path-scurry'\nimport { IgnoreLike } from './ignore.js'\nimport { Pattern } from './pattern.js'\nimport { GlobStream, GlobWalker } from './walker.js'\n\nexport type MatchSet = Minimatch['set']\nexport type GlobParts = Exclude<Minimatch['globParts'], undefined>\n\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform: NodeJS.Platform =\n  (\n    typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string'\n  ) ?\n    process.platform\n  : 'linux'\n\n/**\n * A `GlobOptions` object may be provided to any of the exported methods, and\n * must be provided to the `Glob` constructor.\n *\n * All options are optional, boolean, and false by default, unless otherwise\n * noted.\n *\n * All resolved options are added to the Glob object as properties.\n *\n * If you are running many `glob` operations, you can pass a Glob object as the\n * `options` argument to a subsequent operation to share the previously loaded\n * cache.\n */\nexport interface GlobOptions {\n  /**\n   * Set to `true` to always receive absolute paths for\n   * matched files. Set to `false` to always return relative paths.\n   *\n   * When this option is not set, absolute paths are returned for patterns\n   * that are absolute, and otherwise paths are returned that are relative\n   * to the `cwd` setting.\n   *\n   * This does _not_ make an extra system call to get\n   * the realpath, it only does string path resolution.\n   *\n   * Conflicts with {@link withFileTypes}\n   */\n  absolute?: boolean\n\n  /**\n   * Set to false to enable {@link windowsPathsNoEscape}\n   *\n   * @deprecated\n   */\n  allowWindowsEscape?: boolean\n\n  /**\n   * The current working directory in which to search. Defaults to\n   * `process.cwd()`.\n   *\n   * May be eiher a string path or a `file://` URL object or string.\n   */\n  cwd?: string | URL\n\n  /**\n   * Include `.dot` files in normal matches and `globstar`\n   * matches. Note that an explicit dot in a portion of the pattern\n   * will always match dot files.\n   */\n  dot?: boolean\n\n  /**\n   * Prepend all relative path strings with `./` (or `.\\` on Windows).\n   *\n   * Without this option, returned relative paths are \"bare\", so instead of\n   * returning `'./foo/bar'`, they are returned as `'foo/bar'`.\n   *\n   * Relative patterns starting with `'../'` are not prepended with `./`, even\n   * if this option is set.\n   */\n  dotRelative?: boolean\n\n  /**\n   * Follow symlinked directories when expanding `**`\n   * patterns. This can result in a lot of duplicate references in\n   * the presence of cyclic links, and make performance quite bad.\n   *\n   * By default, a `**` in a pattern will follow 1 symbolic link if\n   * it is not the first item in the pattern, or none if it is the\n   * first item in the pattern, following the same behavior as Bash.\n   */\n  follow?: boolean\n\n  /**\n   * string or string[], or an object with `ignore` and `ignoreChildren`\n   * methods.\n   *\n   * If a string or string[] is provided, then this is treated as a glob\n   * pattern or array of glob patterns to exclude from matches. To ignore all\n   * children within a directory, as well as the entry itself, append `'/**'`\n   * to the ignore pattern.\n   *\n   * **Note** `ignore` patterns are _always_ in `dot:true` mode, regardless of\n   * any other settings.\n   *\n   * If an object is provided that has `ignored(path)` and/or\n   * `childrenIgnored(path)` methods, then these methods will be called to\n   * determine whether any Path is a match or if its children should be\n   * traversed, respectively.\n   */\n  ignore?: string | string[] | IgnoreLike\n\n  /**\n   * Treat brace expansion like `{a,b}` as a \"magic\" pattern. Has no\n   * effect if {@link nobrace} is set.\n   *\n   * Only has effect on the {@link hasMagic} function.\n   */\n  magicalBraces?: boolean\n\n  /**\n   * Add a `/` character to directory matches. Note that this requires\n   * additional stat calls in some cases.\n   */\n  mark?: boolean\n\n  /**\n   * Perform a basename-only match if the pattern does not contain any slash\n   * characters. That is, `*.js` would be treated as equivalent to\n   * `**\\/*.js`, matching all js files in all directories.\n   */\n  matchBase?: boolean\n\n  /**\n   * Limit the directory traversal to a given depth below the cwd.\n   * Note that this does NOT prevent traversal to sibling folders,\n   * root patterns, and so on. It only limits the maximum folder depth\n   * that the walk will descend, relative to the cwd.\n   */\n  maxDepth?: number\n\n  /**\n   * Do not expand `{a,b}` and `{1..3}` brace sets.\n   */\n  nobrace?: boolean\n\n  /**\n   * Perform a case-insensitive match. This defaults to `true` on macOS and\n   * Windows systems, and `false` on all others.\n   *\n   * **Note** `nocase` should only be explicitly set when it is\n   * known that the filesystem's case sensitivity differs from the\n   * platform default. If set `true` on case-sensitive file\n   * systems, or `false` on case-insensitive file systems, then the\n   * walk may return more or less results than expected.\n   */\n  nocase?: boolean\n\n  /**\n   * Do not match directories, only files. (Note: to match\n   * _only_ directories, put a `/` at the end of the pattern.)\n   */\n  nodir?: boolean\n\n  /**\n   * Do not match \"extglob\" patterns such as `+(a|b)`.\n   */\n  noext?: boolean\n\n  /**\n   * Do not match `**` against multiple filenames. (Ie, treat it as a normal\n   * `*` instead.)\n   *\n   * Conflicts with {@link matchBase}\n   */\n  noglobstar?: boolean\n\n  /**\n   * Defaults to value of `process.platform` if available, or `'linux'` if\n   * not. Setting `platform:'win32'` on non-Windows systems may cause strange\n   * behavior.\n   */\n  platform?: NodeJS.Platform\n\n  /**\n   * Set to true to call `fs.realpath` on all of the\n   * results. In the case of an entry that cannot be resolved, the\n   * entry is omitted. This incurs a slight performance penalty, of\n   * course, because of the added system calls.\n   */\n  realpath?: boolean\n\n  /**\n   *\n   * A string path resolved against the `cwd` option, which\n   * is used as the starting point for absolute patterns that start\n   * with `/`, (but not drive letters or UNC paths on Windows).\n   *\n   * Note that this _doesn't_ necessarily limit the walk to the\n   * `root` directory, and doesn't affect the cwd starting point for\n   * non-absolute patterns. A pattern containing `..` will still be\n   * able to traverse out of the root directory, if it is not an\n   * actual root directory on the filesystem, and any non-absolute\n   * patterns will be matched in the `cwd`. For example, the\n   * pattern `/../*` with `{root:'/some/path'}` will return all\n   * files in `/some`, not all files in `/some/path`. The pattern\n   * `*` with `{root:'/some/path'}` will return all the entries in\n   * the cwd, not the entries in `/some/path`.\n   *\n   * To start absolute and non-absolute patterns in the same\n   * path, you can use `{root:''}`. However, be aware that on\n   * Windows systems, a pattern like `x:/*` or `//host/share/*` will\n   * _always_ start in the `x:/` or `//host/share` directory,\n   * regardless of the `root` setting.\n   */\n  root?: string\n\n  /**\n   * A [PathScurry](http://npm.im/path-scurry) object used\n   * to traverse the file system. If the `nocase` option is set\n   * explicitly, then any provided `scurry` object must match this\n   * setting.\n   */\n  scurry?: PathScurry\n\n  /**\n   * Call `lstat()` on all entries, whether required or not to determine\n   * if it's a valid match. When used with {@link withFileTypes}, this means\n   * that matches will include data such as modified time, permissions, and\n   * so on.  Note that this will incur a performance cost due to the added\n   * system calls.\n   */\n  stat?: boolean\n\n  /**\n   * An AbortSignal which will cancel the Glob walk when\n   * triggered.\n   */\n  signal?: AbortSignal\n\n  /**\n   * Use `\\\\` as a path separator _only_, and\n   *  _never_ as an escape character. If set, all `\\\\` characters are\n   *  replaced with `/` in the pattern.\n   *\n   *  Note that this makes it **impossible** to match against paths\n   *  containing literal glob pattern characters, but allows matching\n   *  with patterns constructed using `path.join()` and\n   *  `path.resolve()` on Windows platforms, mimicking the (buggy!)\n   *  behavior of Glob v7 and before on Windows. Please use with\n   *  caution, and be mindful of [the caveat below about Windows\n   *  paths](#windows). (For legacy reasons, this is also set if\n   *  `allowWindowsEscape` is set to the exact value `false`.)\n   */\n  windowsPathsNoEscape?: boolean\n\n  /**\n   * Return [PathScurry](http://npm.im/path-scurry)\n   * `Path` objects instead of strings. These are similar to a\n   * NodeJS `Dirent` object, but with additional methods and\n   * properties.\n   *\n   * Conflicts with {@link absolute}\n   */\n  withFileTypes?: boolean\n\n  /**\n   * An fs implementation to override some or all of the defaults.  See\n   * http://npm.im/path-scurry for details about what can be overridden.\n   */\n  fs?: FSOption\n\n  /**\n   * Just passed along to Minimatch.  Note that this makes all pattern\n   * matching operations slower and *extremely* noisy.\n   */\n  debug?: boolean\n\n  /**\n   * Return `/` delimited paths, even on Windows.\n   *\n   * On posix systems, this has no effect.  But, on Windows, it means that\n   * paths will be `/` delimited, and absolute paths will be their full\n   * resolved UNC forms, eg instead of `'C:\\\\foo\\\\bar'`, it would return\n   * `'//?/C:/foo/bar'`\n   */\n  posix?: boolean\n\n  /**\n   * Do not match any children of any matches. For example, the pattern\n   * `**\\/foo` would match `a/foo`, but not `a/foo/b/foo` in this mode.\n   *\n   * This is especially useful for cases like \"find all `node_modules`\n   * folders, but not the ones in `node_modules`\".\n   *\n   * In order to support this, the `Ignore` implementation must support an\n   * `add(pattern: string)` method. If using the default `Ignore` class, then\n   * this is fine, but if this is set to `false`, and a custom `Ignore` is\n   * provided that does not have an `add()` method, then it will throw an\n   * error.\n   *\n   * **Caveat** It *only* ignores matches that would be a descendant of a\n   * previous match, and only if that descendant is matched *after* the\n   * ancestor is encountered. Since the file system walk happens in\n   * indeterminate order, it's possible that a match will already be added\n   * before its ancestor, if multiple or braced patterns are used.\n   *\n   * For example:\n   *\n   * ```ts\n   * const results = await glob([\n   *   // likely to match first, since it's just a stat\n   *   'a/b/c/d/e/f',\n   *\n   *   // this pattern is more complicated! It must to various readdir()\n   *   // calls and test the results against a regular expression, and that\n   *   // is certainly going to take a little bit longer.\n   *   //\n   *   // So, later on, it encounters a match at 'a/b/c/d/e', but it's too\n   *   // late to ignore a/b/c/d/e/f, because it's already been emitted.\n   *   'a/[bdf]/?/[a-z]/*',\n   * ], { includeChildMatches: false })\n   * ```\n   *\n   * It's best to only set this to `false` if you can be reasonably sure that\n   * no components of the pattern will potentially match one another's file\n   * system descendants, or if the occasional included child entry will not\n   * cause problems.\n   *\n   * @default true\n   */\n  includeChildMatches?: boolean\n}\n\nexport type GlobOptionsWithFileTypesTrue = GlobOptions & {\n  withFileTypes: true\n  // string options not relevant if returning Path objects.\n  absolute?: undefined\n  mark?: undefined\n  posix?: undefined\n}\n\nexport type GlobOptionsWithFileTypesFalse = GlobOptions & {\n  withFileTypes?: false\n}\n\nexport type GlobOptionsWithFileTypesUnset = GlobOptions & {\n  withFileTypes?: undefined\n}\n\nexport type Result<Opts> =\n  Opts extends GlobOptionsWithFileTypesTrue ? Path\n  : Opts extends GlobOptionsWithFileTypesFalse ? string\n  : Opts extends GlobOptionsWithFileTypesUnset ? string\n  : string | Path\nexport type Results<Opts> = Result<Opts>[]\n\nexport type FileTypes<Opts> =\n  Opts extends GlobOptionsWithFileTypesTrue ? true\n  : Opts extends GlobOptionsWithFileTypesFalse ? false\n  : Opts extends GlobOptionsWithFileTypesUnset ? false\n  : boolean\n\n/**\n * An object that can perform glob pattern traversals.\n */\nexport class Glob<Opts extends GlobOptions> implements GlobOptions {\n  absolute?: boolean\n  cwd: string\n  root?: string\n  dot: boolean\n  dotRelative: boolean\n  follow: boolean\n  ignore?: string | string[] | IgnoreLike\n  magicalBraces: boolean\n  mark?: boolean\n  matchBase: boolean\n  maxDepth: number\n  nobrace: boolean\n  nocase: boolean\n  nodir: boolean\n  noext: boolean\n  noglobstar: boolean\n  pattern: string[]\n  platform: NodeJS.Platform\n  realpath: boolean\n  scurry: PathScurry\n  stat: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape: boolean\n  withFileTypes: FileTypes<Opts>\n  includeChildMatches: boolean\n\n  /**\n   * The options provided to the constructor.\n   */\n  opts: Opts\n\n  /**\n   * An array of parsed immutable {@link Pattern} objects.\n   */\n  patterns: Pattern[]\n\n  /**\n   * All options are stored as properties on the `Glob` object.\n   *\n   * See {@link GlobOptions} for full options descriptions.\n   *\n   * Note that a previous `Glob` object can be passed as the\n   * `GlobOptions` to another `Glob` instantiation to re-use settings\n   * and caches with a new pattern.\n   *\n   * Traversal functions can be called multiple times to run the walk\n   * again.\n   */\n  constructor(pattern: string | string[], opts: Opts) {\n    /* c8 ignore start */\n    if (!opts) throw new TypeError('glob options required')\n    /* c8 ignore stop */\n    this.withFileTypes = !!opts.withFileTypes as FileTypes<Opts>\n    this.signal = opts.signal\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.dotRelative = !!opts.dotRelative\n    this.nodir = !!opts.nodir\n    this.mark = !!opts.mark\n    if (!opts.cwd) {\n      this.cwd = ''\n    } else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n      opts.cwd = fileURLToPath(opts.cwd)\n    }\n    this.cwd = opts.cwd || ''\n    this.root = opts.root\n    this.magicalBraces = !!opts.magicalBraces\n    this.nobrace = !!opts.nobrace\n    this.noext = !!opts.noext\n    this.realpath = !!opts.realpath\n    this.absolute = opts.absolute\n    this.includeChildMatches = opts.includeChildMatches !== false\n\n    this.noglobstar = !!opts.noglobstar\n    this.matchBase = !!opts.matchBase\n    this.maxDepth =\n      typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity\n    this.stat = !!opts.stat\n    this.ignore = opts.ignore\n\n    if (this.withFileTypes && this.absolute !== undefined) {\n      throw new Error('cannot set absolute and withFileTypes:true')\n    }\n\n    if (typeof pattern === 'string') {\n      pattern = [pattern]\n    }\n\n    this.windowsPathsNoEscape =\n      !!opts.windowsPathsNoEscape ||\n      (opts as { allowWindowsEscape?: boolean }).allowWindowsEscape ===\n        false\n\n    if (this.windowsPathsNoEscape) {\n      pattern = pattern.map(p => p.replace(/\\\\/g, '/'))\n    }\n\n    if (this.matchBase) {\n      if (opts.noglobstar) {\n        throw new TypeError('base matching requires globstar')\n      }\n      pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`))\n    }\n\n    this.pattern = pattern\n\n    this.platform = opts.platform || defaultPlatform\n    this.opts = { ...opts, platform: this.platform }\n    if (opts.scurry) {\n      this.scurry = opts.scurry\n      if (\n        opts.nocase !== undefined &&\n        opts.nocase !== opts.scurry.nocase\n      ) {\n        throw new Error('nocase option contradicts provided scurry option')\n      }\n    } else {\n      const Scurry =\n        opts.platform === 'win32' ? PathScurryWin32\n        : opts.platform === 'darwin' ? PathScurryDarwin\n        : opts.platform ? PathScurryPosix\n        : PathScurry\n      this.scurry = new Scurry(this.cwd, {\n        nocase: opts.nocase,\n        fs: opts.fs,\n      })\n    }\n    this.nocase = this.scurry.nocase\n\n    // If you do nocase:true on a case-sensitive file system, then\n    // we need to use regexps instead of strings for non-magic\n    // path portions, because statting `aBc` won't return results\n    // for the file `AbC` for example.\n    const nocaseMagicOnly =\n      this.platform === 'darwin' || this.platform === 'win32'\n\n    const mmo: MinimatchOptions = {\n      // default nocase based on platform\n      ...opts,\n      dot: this.dot,\n      matchBase: this.matchBase,\n      nobrace: this.nobrace,\n      nocase: this.nocase,\n      nocaseMagicOnly,\n      nocomment: true,\n      noext: this.noext,\n      nonegate: true,\n      optimizationLevel: 2,\n      platform: this.platform,\n      windowsPathsNoEscape: this.windowsPathsNoEscape,\n      debug: !!this.opts.debug,\n    }\n\n    const mms = this.pattern.map(p => new Minimatch(p, mmo))\n    const [matchSet, globParts] = mms.reduce(\n      (set: [MatchSet, GlobParts], m) => {\n        set[0].push(...m.set)\n        set[1].push(...m.globParts)\n        return set\n      },\n      [[], []],\n    )\n    this.patterns = matchSet.map((set, i) => {\n      const g = globParts[i]\n      /* c8 ignore start */\n      if (!g) throw new Error('invalid pattern object')\n      /* c8 ignore stop */\n      return new Pattern(set, g, 0, this.platform)\n    })\n  }\n\n  /**\n   * Returns a Promise that resolves to the results array.\n   */\n  async walk(): Promise<Results<Opts>>\n  async walk(): Promise<(string | Path)[]> {\n    // Walkers always return array of Path objects, so we just have to\n    // coerce them into the right shape.  It will have already called\n    // realpath() if the option was set to do so, so we know that's cached.\n    // start out knowing the cwd, at least\n    return [\n      ...(await new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity ?\n            this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n        includeChildMatches: this.includeChildMatches,\n      }).walk()),\n    ]\n  }\n\n  /**\n   * synchronous {@link Glob.walk}\n   */\n  walkSync(): Results<Opts>\n  walkSync(): (string | Path)[] {\n    return [\n      ...new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity ?\n            this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n        includeChildMatches: this.includeChildMatches,\n      }).walkSync(),\n    ]\n  }\n\n  /**\n   * Stream results asynchronously.\n   */\n  stream(): Minipass<Result<Opts>, Result<Opts>>\n  stream(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity ?\n          this.maxDepth + this.scurry.cwd.depth()\n        : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n      includeChildMatches: this.includeChildMatches,\n    }).stream()\n  }\n\n  /**\n   * Stream results synchronously.\n   */\n  streamSync(): Minipass<Result<Opts>, Result<Opts>>\n  streamSync(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity ?\n          this.maxDepth + this.scurry.cwd.depth()\n        : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n      includeChildMatches: this.includeChildMatches,\n    }).streamSync()\n  }\n\n  /**\n   * Default sync iteration function. Returns a Generator that\n   * iterates over the results.\n   */\n  iterateSync(): Generator<Result<Opts>, void, void> {\n    return this.streamSync()[Symbol.iterator]()\n  }\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  /**\n   * Default async iteration function. Returns an AsyncGenerator that\n   * iterates over the results.\n   */\n  iterate(): AsyncGenerator<Result<Opts>, void, void> {\n    return this.stream()[Symbol.asyncIterator]()\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n}\n"
        ]
      },
      "url": null
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/path-scurry/dist/commonjs/index.js": {
      "lineLengths": [
        13, 97, 33, 53, 88, 68, 5, 39, 29, 33, 17, 4, 96, 72, 21, 21, 3, 66, 42,
        20, 141, 36, 18, 2, 62, 253, 41, 41, 39, 27, 50, 46, 57, 46, 47, 39, 19,
        30, 26, 34, 36, 17, 15, 32, 36, 38, 38, 6, 2, 58, 97, 13, 7, 21, 20, 19,
        34, 41, 10, 6, 39, 48, 95, 47, 27, 57, 21, 21, 21, 21, 21, 21, 22, 20,
        27, 27, 64, 40, 33, 38, 66, 33, 57, 64, 32, 74, 29, 37, 38, 37, 48, 34,
        43, 29, 36, 43, 43, 43, 44, 38, 31, 33, 26, 36, 10, 17, 34, 29, 13, 2,
        39, 32, 42, 10, 17, 41, 35, 13, 2, 3, 65, 12, 3, 49, 19, 28, 5, 1, 36,
        72, 79, 73, 79, 78, 77, 75, 76, 2, 78, 70, 3, 41, 12, 3, 50, 38, 15, 20,
        32, 47, 11, 5, 1, 38, 47, 3, 48, 78, 2, 78, 74, 75, 19, 2, 75, 75, 16,
        3, 16, 7, 32, 6, 73, 74, 80, 74, 45, 7, 9, 7, 53, 6, 16, 7, 9, 7, 59, 6,
        16, 7, 10, 7, 79, 6, 16, 7, 11, 7, 71, 16, 7, 11, 7, 73, 53, 7, 18, 36,
        8, 19, 9, 15, 25, 5, 10, 16, 26, 5, 11, 17, 27, 5, 9, 15, 25, 5, 9, 15,
        25, 5, 10, 16, 26, 5, 13, 19, 29, 5, 9, 15, 25, 5, 10, 16, 26, 5, 12,
        18, 28, 5, 13, 19, 29, 5, 13, 19, 29, 5, 13, 19, 29, 5, 17, 23, 33, 5,
        11, 17, 27, 5, 11, 17, 27, 5, 11, 17, 27, 5, 15, 21, 31, 5, 15, 11, 14,
        19, 14, 19, 10, 14, 16, 14, 7, 69, 69, 76, 27, 7, 22, 48, 5, 7, 77, 77,
        7, 16, 31, 5, 7, 79, 67, 6, 16, 7, 76, 25, 75, 37, 29, 27, 33, 34, 39,
        39, 49, 34, 26, 39, 9, 14, 45, 9, 5, 7, 58, 6, 65, 7, 13, 38, 31, 25,
        37, 55, 5, 7, 16, 7, 21, 30, 5, 7, 81, 7, 19, 20, 24, 9, 50, 52, 50, 33,
        58, 43, 22, 5, 29, 21, 38, 30, 9, 17, 5, 7, 77, 80, 79, 14, 6, 16, 7,
        16, 48, 21, 26, 9, 63, 43, 38, 24, 5, 7, 69, 6, 78, 14, 6, 75, 61, 6,
        36, 6, 16, 7, 27, 50, 24, 9, 32, 39, 9, 25, 41, 83, 35, 40, 25, 13, 9,
        71, 67, 34, 46, 84, 57, 20, 25, 21, 11, 33, 35, 9, 78, 79, 30, 22, 5, 7,
        76, 68, 7, 16, 23, 22, 43, 34, 9, 31, 30, 17, 48, 9, 32, 62, 5, 7, 69,
        44, 73, 57, 7, 21, 29, 35, 23, 22, 46, 39, 31, 30, 17, 64, 9, 37, 57, 5,
        7, 57, 7, 16, 43, 34, 9, 31, 30, 17, 48, 9, 32, 59, 37, 5, 7, 70, 6, 77,
        21, 7, 21, 46, 39, 29, 59, 27, 58, 39, 58, 13, 18, 49, 13, 9, 30, 39,
        71, 43, 5, 7, 38, 6, 80, 76, 45, 7, 17, 47, 5, 18, 35, 5, 15, 44, 46,
        40, 60, 48, 74, 70, 86, 53, 28, 5, 7, 34, 7, 14, 45, 5, 7, 31, 7, 19,
        45, 5, 7, 38, 7, 25, 45, 5, 7, 34, 7, 21, 45, 5, 7, 31, 7, 14, 45, 5, 7,
        28, 7, 16, 46, 5, 7, 35, 7, 22, 46, 5, 7, 72, 27, 6, 74, 47, 7, 19, 60,
        5, 7, 75, 51, 6, 80, 74, 48, 7, 22, 32, 5, 7, 75, 56, 6, 80, 74, 48, 7,
        22, 30, 5, 7, 76, 58, 6, 75, 74, 67, 7, 21, 41, 55, 5, 7, 77, 57, 6, 76,
        55, 7, 19, 29, 24, 25, 25, 49, 39, 56, 39, 33, 5, 7, 77, 61, 7, 21, 47,
        5, 7, 80, 74, 71, 7, 16, 39, 5, 7, 80, 50, 6, 75, 77, 56, 6, 73, 16, 7,
        16, 29, 44, 53, 5, 7, 77, 6, 80, 39, 6, 79, 7, 22, 40, 21, 26, 9, 34,
        29, 9, 29, 72, 27, 29, 9, 28, 13, 75, 77, 29, 55, 13, 9, 20, 40, 29, 9,
        5, 7, 44, 7, 20, 40, 21, 26, 9, 34, 29, 9, 29, 72, 27, 29, 9, 28, 13,
        64, 73, 29, 55, 13, 9, 20, 40, 29, 9, 5, 31, 45, 37, 60, 70, 34, 18, 32,
        9, 5, 19, 37, 32, 19, 58, 35, 5, 27, 56, 41, 33, 35, 28, 9, 5, 24, 34,
        28, 5, 63, 20, 65, 66, 66, 46, 29, 33, 19, 28, 27, 62, 54, 33, 30, 33,
        35, 5, 29, 60, 53, 32, 9, 37, 31, 9, 14, 44, 9, 5, 27, 70, 29, 33, 57,
        34, 29, 9, 37, 32, 31, 9, 5, 30, 29, 27, 30, 26, 69, 54, 77, 29, 32, 9,
        25, 72, 62, 29, 48, 39, 9, 28, 5, 28, 55, 44, 5, 31, 61, 34, 68, 40, 67,
        35, 9, 25, 24, 21, 5, 37, 56, 32, 83, 45, 25, 13, 62, 9, 5, 42, 25, 59,
        58, 63, 25, 28, 69, 71, 38, 39, 24, 16, 35, 25, 9, 24, 17, 5, 7, 78, 18,
        6, 78, 71, 74, 6, 79, 81, 16, 6, 75, 15, 7, 19, 42, 17, 80, 28, 13, 24,
        41, 13, 9, 5, 7, 41, 7, 17, 42, 17, 69, 28, 13, 24, 41, 13, 9, 5, 20,
        157, 28, 32, 36, 40, 32, 30, 28, 32, 24, 24, 24, 26, 28, 32, 28, 26, 26,
        24, 35, 51, 71, 67, 34, 9, 5, 22, 31, 32, 40, 46, 37, 46, 5, 7, 79, 6,
        79, 19, 6, 75, 15, 6, 76, 76, 63, 81, 76, 74, 7, 39, 33, 27, 29, 16, 51,
        19, 9, 41, 35, 62, 27, 28, 16, 50, 19, 9, 57, 35, 38, 19, 9, 39, 52, 54,
        41, 78, 21, 43, 41, 13, 18, 68, 28, 42, 55, 17, 47, 13, 75, 19, 11, 5,
        26, 7, 46, 6, 79, 19, 6, 75, 15, 7, 21, 33, 22, 9, 41, 35, 59, 9, 52,
        54, 41, 41, 45, 9, 14, 33, 36, 32, 77, 17, 75, 40, 21, 55, 17, 47, 13,
        24, 43, 41, 13, 51, 22, 9, 55, 5, 7, 43, 7, 19, 33, 22, 9, 41, 35, 59,
        9, 52, 54, 41, 13, 60, 36, 17, 51, 13, 43, 9, 20, 39, 37, 9, 55, 5, 18,
        34, 25, 39, 75, 29, 70, 25, 9, 28, 20, 5, 34, 49, 39, 30, 47, 5, 7, 63,
        22, 6, 74, 6, 79, 41, 7, 22, 27, 34, 62, 29, 13, 73, 55, 9, 19, 36, 9,
        5, 7, 35, 7, 20, 27, 34, 62, 29, 13, 62, 55, 9, 19, 36, 9, 5, 7, 66, 41,
        6, 16, 7, 24, 28, 19, 29, 26, 36, 20, 21, 31, 27, 44, 44, 25, 26, 9, 44,
        19, 50, 36, 41, 25, 9, 5, 1, 28, 3, 35, 2, 79, 43, 3, 34, 7, 45, 7, 15,
        7, 42, 7, 25, 7, 79, 67, 6, 16, 7, 76, 63, 5, 7, 16, 7, 47, 105, 5, 7,
        16, 7, 25, 50, 5, 7, 16, 7, 23, 54, 42, 29, 9, 70, 67, 51, 53, 13, 9,
        47, 81, 5, 7, 16, 7, 50, 67, 77, 33, 27, 26, 33, 45, 36, 5, 1, 30, 3,
        40, 2, 36, 3, 34, 7, 41, 7, 19, 7, 44, 7, 14, 7, 79, 67, 6, 16, 7, 76,
        63, 5, 7, 16, 7, 25, 47, 5, 7, 16, 7, 24, 25, 5, 7, 16, 7, 47, 105, 5,
        1, 30, 3, 78, 40, 2, 78, 77, 36, 3, 22, 7, 75, 7, 9, 7, 78, 7, 13, 7,
        68, 7, 10, 7, 83, 7, 8, 18, 23, 14, 7, 51, 6, 68, 7, 11, 8, 7, 54, 6,
        76, 6, 16, 7, 118, 36, 62, 53, 9, 61, 55, 46, 41, 52, 48, 53, 62, 73,
        70, 46, 24, 9, 29, 35, 86, 9, 28, 29, 43, 46, 29, 35, 37, 32, 29, 35,
        28, 37, 64, 65, 68, 15, 28, 9, 24, 5, 7, 59, 7, 28, 39, 42, 9, 28, 5, 7,
        75, 53, 6, 16, 7, 21, 30, 5, 7, 60, 6, 49, 6, 78, 71, 17, 7, 23, 71, 72,
        19, 53, 31, 32, 25, 36, 37, 22, 13, 9, 49, 35, 26, 9, 54, 42, 22, 5, 7,
        71, 72, 62, 6, 49, 6, 78, 71, 17, 7, 28, 71, 72, 19, 53, 31, 32, 25, 36,
        37, 22, 13, 9, 54, 35, 26, 9, 59, 47, 22, 5, 7, 79, 7, 32, 40, 44, 9,
        32, 5, 7, 73, 61, 7, 37, 40, 44, 9, 37, 5, 7, 65, 7, 32, 40, 44, 9, 26,
        5, 7, 64, 7, 31, 40, 44, 9, 50, 5, 44, 28, 8, 40, 44, 9, 48, 25, 29, 9,
        39, 34, 22, 9, 14, 44, 58, 9, 5, 42, 28, 8, 40, 44, 9, 48, 25, 29, 9,
        46, 34, 22, 9, 33, 39, 9, 14, 56, 9, 5, 7, 70, 42, 6, 78, 71, 74, 6, 79,
        81, 16, 6, 75, 15, 7, 35, 40, 44, 9, 29, 5, 7, 47, 7, 33, 40, 44, 9, 33,
        5, 58, 29, 8, 40, 44, 9, 48, 48, 29, 9, 41, 49, 5, 56, 29, 8, 40, 44, 9,
        48, 48, 29, 9, 39, 49, 5, 58, 29, 8, 40, 44, 9, 48, 48, 29, 9, 41, 49,
        5, 56, 29, 8, 40, 44, 9, 48, 48, 29, 9, 39, 49, 5, 45, 40, 44, 9, 48,
        25, 29, 9, 83, 27, 39, 67, 9, 31, 35, 26, 44, 37, 25, 34, 17, 36, 41,
        25, 32, 36, 38, 29, 21, 18, 42, 47, 71, 21, 55, 36, 72, 97, 21, 26, 61,
        42, 25, 30, 35, 25, 21, 17, 36, 10, 28, 42, 31, 37, 23, 35, 36, 29, 15,
        11, 5, 43, 40, 44, 9, 48, 25, 29, 9, 83, 27, 39, 67, 9, 38, 33, 46, 38,
        43, 67, 17, 26, 41, 60, 33, 38, 38, 17, 53, 32, 17, 13, 9, 23, 5, 7, 30,
        6, 47, 6, 75, 80, 76, 7, 30, 30, 5, 45, 76, 81, 81, 40, 44, 9, 48, 28,
        29, 9, 67, 5, 7, 63, 6, 51, 7, 25, 34, 5, 47, 40, 44, 9, 48, 25, 29, 9,
        83, 39, 59, 9, 38, 33, 46, 38, 43, 59, 17, 26, 41, 60, 33, 38, 38, 17,
        53, 32, 17, 13, 9, 5, 41, 40, 44, 9, 48, 25, 29, 9, 83, 70, 39, 68, 9,
        31, 30, 27, 31, 31, 29, 42, 27, 41, 38, 27, 17, 29, 30, 74, 41, 27, 57,
        40, 50, 44, 50, 53, 47, 47, 82, 29, 25, 46, 93, 35, 25, 21, 46, 58, 83,
        46, 29, 25, 21, 33, 46, 58, 61, 42, 25, 21, 53, 55, 21, 37, 34, 21, 18,
        36, 32, 47, 29, 13, 10, 18, 23, 5, 45, 40, 44, 9, 48, 25, 29, 9, 83, 70,
        31, 39, 68, 9, 30, 27, 31, 31, 29, 42, 27, 41, 38, 27, 17, 29, 30, 50,
        42, 47, 79, 42, 25, 21, 17, 29, 42, 30, 45, 64, 37, 42, 42, 21, 57, 38,
        21, 17, 13, 43, 47, 10, 18, 23, 5, 28, 32, 76, 35, 5, 1, 40, 3, 51, 2,
        75, 38, 3, 46, 7, 44, 7, 15, 49, 39, 65, 29, 49, 35, 9, 5, 7, 16, 7, 24,
        80, 73, 58, 63, 5, 7, 16, 7, 17, 117, 5, 7, 66, 7, 19, 86, 5, 1, 42, 3,
        81, 2, 76, 2, 43, 3, 46, 7, 44, 7, 14, 49, 40, 64, 29, 5, 7, 16, 7, 25,
        19, 5, 7, 16, 7, 17, 117, 5, 7, 66, 7, 19, 33, 5, 1, 42, 3, 68, 2, 72,
        11, 2, 43, 3, 48, 49, 39, 40, 5, 1, 44, 3, 68, 2, 73, 3, 68, 3, 74, 2,
        74, 65, 3, 67, 54, 26, 33
      ],
      "data": null,
      "url": "index.js.map"
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/lru-cache/dist/commonjs/index.js": {
      "lineLengths": [
        13, 3, 19, 3, 62, 26, 47, 18, 41, 17, 11, 25, 21, 74, 21, 46, 45, 50,
        53, 2, 36, 32, 21, 32, 16, 28, 16, 22, 15, 24, 33, 35, 9, 6, 16, 32, 23,
        29, 9, 26, 23, 36, 23, 24, 40, 24, 39, 24, 52, 27, 13, 42, 9, 6, 82, 34,
        36, 19, 39, 78, 67, 71, 75, 81, 81, 133, 6, 1, 20, 47, 28, 73, 21, 40,
        70, 71, 71, 72, 55, 27, 56, 44, 10, 27, 20, 32, 25, 36, 29, 48, 31, 27,
        20, 31, 23, 20, 21, 5, 1, 13, 9, 11, 26, 33, 24, 42, 21, 22, 35, 42, 36,
        17, 5, 31, 29, 35, 75, 9, 28, 37, 24, 5, 13, 37, 5, 11, 40, 5, 1, 3, 61,
        2, 64, 72, 70, 77, 25, 3, 16, 75, 76, 40, 9, 13, 13, 18, 17, 7, 39, 7,
        8, 7, 49, 7, 18, 7, 48, 7, 17, 7, 50, 7, 19, 7, 50, 7, 19, 7, 46, 7, 15,
        7, 50, 7, 19, 7, 47, 7, 16, 7, 48, 7, 17, 7, 51, 7, 20, 7, 60, 7, 29, 7,
        54, 7, 23, 7, 58, 7, 27, 7, 62, 7, 31, 7, 52, 7, 21, 26, 10, 20, 12, 13,
        13, 10, 10, 10, 10, 10, 14, 11, 12, 10, 16, 20, 21, 7, 61, 65, 65, 6,
        45, 6, 16, 7, 37, 16, 25, 30, 26, 28, 30, 32, 32, 26, 26, 24, 31, 14,
        24, 31, 14, 26, 22, 62, 108, 56, 54, 56, 50, 10, 5, 34, 7, 51, 7, 15,
        25, 5, 7, 55, 7, 19, 29, 5, 7, 64, 7, 26, 36, 5, 7, 58, 7, 16, 26, 5, 7,
        59, 7, 23, 33, 5, 7, 55, 7, 19, 29, 5, 7, 60, 7, 24, 34, 5, 26, 348, 42,
        76, 9, 58, 25, 57, 9, 24, 32, 58, 47, 35, 55, 106, 13, 61, 75, 13, 9,
        40, 48, 79, 9, 40, 45, 33, 55, 55, 40, 40, 23, 23, 39, 23, 33, 44, 36,
        9, 49, 46, 32, 9, 14, 43, 39, 9, 43, 53, 47, 41, 67, 71, 63, 51, 57, 38,
        38, 47, 91, 17, 13, 47, 92, 13, 43, 9, 39, 55, 47, 47, 28, 58, 31, 20,
        43, 28, 23, 38, 83, 13, 42, 9, 51, 71, 84, 9, 65, 47, 35, 33, 86, 62,
        74, 13, 9, 5, 7, 58, 7, 26, 52, 5, 30, 46, 48, 26, 30, 64, 50, 30, 49,
        44, 47, 58, 21, 28, 57, 37, 30, 30, 17, 36, 13, 10, 40, 63, 10, 46, 30,
        40, 44, 36, 35, 27, 33, 37, 51, 47, 48, 13, 10, 66, 39, 26, 30, 33, 41,
        30, 80, 49, 37, 30, 30, 17, 36, 13, 21, 10, 39, 48, 38, 25, 13, 36, 40,
        33, 32, 13, 56, 29, 10, 34, 36, 34, 65, 10, 5, 55, 31, 27, 28, 24, 27,
        31, 47, 33, 28, 41, 49, 29, 10, 62, 55, 66, 45, 25, 13, 34, 38, 64, 82,
        21, 49, 42, 104, 21, 17, 22, 91, 82, 48, 17, 13, 24, 10, 54, 32, 32, 61,
        56, 38, 17, 13, 49, 25, 40, 66, 13, 10, 5, 32, 40, 55, 38, 100, 9, 17,
        6, 54, 25, 45, 45, 26, 17, 54, 28, 17, 39, 26, 17, 22, 38, 17, 13, 9, 5,
        55, 25, 45, 45, 26, 17, 54, 28, 17, 39, 26, 17, 22, 38, 17, 13, 9, 5,
        26, 38, 62, 5, 7, 56, 63, 7, 16, 42, 49, 49, 61, 59, 13, 9, 5, 7, 56, 6,
        56, 63, 7, 17, 43, 49, 49, 61, 59, 13, 9, 5, 7, 57, 63, 7, 13, 42, 39,
        34, 61, 24, 13, 9, 5, 7, 53, 6, 57, 63, 7, 14, 43, 39, 34, 61, 24, 13,
        9, 5, 7, 59, 63, 7, 15, 42, 39, 34, 61, 39, 13, 9, 5, 7, 55, 6, 59, 63,
        7, 16, 43, 39, 34, 61, 39, 13, 9, 5, 7, 65, 31, 7, 25, 30, 5, 7, 98, 63,
        7, 38, 7, 76, 71, 7, 31, 42, 39, 52, 40, 20, 36, 25, 52, 62, 13, 9, 5,
        7, 74, 66, 69, 42, 7, 31, 42, 39, 52, 40, 20, 36, 25, 58, 9, 5, 7, 74,
        78, 7, 32, 43, 39, 52, 40, 20, 36, 25, 58, 9, 5, 7, 70, 23, 7, 18, 28,
        63, 35, 46, 31, 13, 9, 23, 5, 7, 77, 74, 77, 63, 7, 15, 40, 28, 29, 35,
        48, 36, 16, 32, 29, 32, 41, 38, 42, 31, 58, 35, 41, 13, 9, 26, 40, 9,
        21, 5, 7, 75, 29, 7, 12, 23, 62, 41, 39, 52, 40, 20, 57, 25, 36, 45, 42,
        73, 76, 57, 59, 13, 30, 44, 13, 38, 9, 19, 5, 7, 76, 73, 48, 7, 15, 21,
        41, 30, 75, 77, 77, 31, 18, 76, 53, 47, 13, 46, 9, 5, 7, 32, 6, 73, 30,
        7, 32, 30, 27, 24, 9, 140, 60, 84, 53, 53, 60, 25, 36, 51, 13, 66, 27,
        24, 9, 71, 34, 23, 37, 28, 41, 38, 46, 44, 38, 37, 37, 39, 43, 43, 31,
        25, 51, 23, 35, 32, 9, 14, 21, 36, 48, 31, 78, 74, 63, 61, 47, 57, 25,
        52, 64, 25, 21, 17, 43, 43, 58, 21, 48, 65, 21, 17, 44, 55, 41, 29, 43,
        78, 53, 33, 47, 51, 17, 13, 30, 38, 13, 9, 39, 42, 9, 25, 31, 52, 13,
        23, 47, 9, 73, 38, 21, 42, 46, 13, 9, 20, 5, 7, 65, 37, 7, 11, 13, 32,
        54, 34, 51, 51, 56, 21, 17, 45, 31, 17, 13, 9, 17, 58, 42, 25, 46, 50,
        17, 13, 9, 5, 18, 32, 38, 38, 65, 60, 9, 61, 35, 47, 13, 40, 54, 13, 9,
        35, 67, 19, 44, 44, 34, 9, 31, 40, 34, 9, 14, 42, 9, 31, 21, 20, 5, 7,
        75, 76, 20, 6, 38, 58, 7, 29, 76, 42, 34, 43, 45, 55, 29, 13, 40, 37,
        47, 17, 29, 39, 51, 17, 28, 13, 30, 37, 47, 13, 9, 26, 32, 9, 21, 5, 7,
        75, 13, 6, 55, 54, 7, 31, 61, 42, 34, 52, 19, 9, 39, 76, 71, 5, 50, 73,
        41, 21, 9, 28, 35, 65, 74, 30, 11, 27, 30, 20, 20, 10, 48, 42, 76, 33,
        46, 55, 65, 36, 64, 17, 22, 56, 17, 13, 58, 51, 13, 81, 25, 45, 38, 50,
        71, 21, 26, 39, 21, 17, 22, 39, 59, 54, 17, 13, 21, 10, 28, 33, 52, 47,
        13, 33, 10, 35, 42, 80, 87, 76, 25, 45, 85, 86, 79, 26, 35, 17, 46, 72,
        72, 71, 73, 67, 17, 13, 29, 78, 56, 17, 47, 13, 44, 25, 13, 10, 37, 61,
        48, 73, 13, 58, 58, 43, 55, 48, 53, 35, 69, 57, 47, 21, 17, 15, 10, 27,
        50, 50, 37, 34, 36, 34, 11, 34, 45, 73, 40, 9, 14, 38, 9, 18, 5, 27, 34,
        25, 20, 22, 35, 55, 47, 5, 39, 15, 22, 121, 22, 143, 34, 288, 36, 23,
        37, 32, 27, 31, 35, 23, 15, 9, 25, 23, 27, 31, 16, 27, 17, 28, 24, 37,
        39, 35, 29, 19, 19, 10, 40, 34, 23, 38, 72, 38, 9, 14, 47, 43, 45, 81,
        29, 46, 30, 52, 17, 75, 13, 79, 76, 49, 44, 27, 41, 40, 37, 47, 17, 27,
        51, 25, 13, 77, 33, 72, 66, 52, 25, 61, 40, 48, 13, 74, 9, 5, 7, 74, 19,
        6, 62, 7, 29, 153, 42, 34, 47, 60, 23, 47, 39, 27, 41, 67, 32, 46, 39,
        21, 45, 52, 58, 17, 22, 33, 37, 67, 52, 21, 79, 17, 13, 18, 27, 39, 80,
        81, 82, 84, 53, 31, 54, 17, 40, 37, 47, 17, 29, 13, 9, 26, 32, 9, 5, 20,
        26, 26, 5, 24, 41, 44, 15, 69, 50, 29, 29, 23, 35, 39, 47, 13, 18, 68,
        13, 45, 31, 9, 5, 7, 38, 60, 7, 15, 28, 31, 46, 38, 31, 39, 33, 17, 22,
        48, 51, 53, 72, 21, 73, 47, 60, 25, 52, 67, 25, 21, 43, 53, 53, 47, 55,
        21, 52, 55, 21, 26, 53, 59, 53, 59, 21, 33, 43, 17, 13, 9, 62, 38, 21,
        42, 46, 13, 9, 23, 5, 7, 58, 7, 13, 67, 43, 45, 64, 13, 18, 47, 39, 52,
        17, 44, 59, 17, 13, 9, 29, 38, 38, 41, 31, 33, 9, 26, 32, 9, 23, 23, 30,
        33, 23, 54, 38, 21, 42, 46, 13, 9, 5, 1, 28, 33
      ],
      "data": null,
      "url": "index.js.map"
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/glob/dist/commonjs/pattern.js": {
      "lineLengths": [
        13, 73, 62, 25, 41, 45, 42, 3, 67, 10, 3, 15, 17, 14, 11, 11, 14, 10,
        16, 13, 11, 16, 27, 57, 42, 54, 9, 36, 51, 9, 53, 81, 9, 41, 48, 54, 9,
        40, 34, 28, 34, 75, 32, 28, 29, 35, 48, 49, 55, 35, 25, 31, 45, 69, 66,
        38, 32, 34, 34, 17, 57, 57, 50, 47, 55, 13, 59, 57, 54, 38, 32, 34, 34,
        17, 35, 35, 50, 47, 55, 13, 9, 5, 7, 53, 7, 15, 46, 5, 7, 44, 7, 16, 66,
        5, 7, 44, 7, 18, 71, 5, 7, 41, 7, 16, 64, 5, 7, 63, 7, 18, 34, 31, 36,
        39, 77, 50, 68, 5, 7, 58, 7, 15, 45, 5, 7, 74, 7, 12, 37, 30, 28, 39,
        101, 50, 40, 44, 26, 5, 7, 62, 7, 13, 37, 42, 23, 28, 45, 40, 35, 35,
        48, 30, 48, 29, 5, 26, 26, 71, 74, 49, 7, 64, 7, 15, 37, 44, 25, 30, 45,
        40, 38, 48, 45, 5, 42, 54, 56, 7, 56, 7, 18, 37, 47, 28, 33, 50, 37, 34,
        5, 7, 53, 7, 12, 39, 82, 13, 17, 5, 7, 72, 23, 7, 27, 37, 33, 35, 5, 7,
        74, 7, 26, 77, 25, 37, 20, 5, 1, 26, 35
      ],
      "data": {
        "version": 3,
        "file": "pattern.js",
        "sourceRoot": "",
        "sources": [
          "file:///usr/local/lib/node_modules/npm/node_modules/glob/src/pattern.ts"
        ],
        "names": [],
        "mappings": "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",
        "sourcesContent": [
          "// this is just a very light wrapper around 2 arrays with an offset index\n\nimport { GLOBSTAR } from 'minimatch'\nexport type MMPattern = string | RegExp | typeof GLOBSTAR\n\n// an array of length >= 1\nexport type PatternList = [p: MMPattern, ...rest: MMPattern[]]\nexport type UNCPatternList = [\n  p0: '',\n  p1: '',\n  p2: string,\n  p3: string,\n  ...rest: MMPattern[],\n]\nexport type DrivePatternList = [p0: string, ...rest: MMPattern[]]\nexport type AbsolutePatternList = [p0: '', ...rest: MMPattern[]]\nexport type GlobList = [p: string, ...rest: string[]]\n\nconst isPatternList = (pl: MMPattern[]): pl is PatternList =>\n  pl.length >= 1\nconst isGlobList = (gl: string[]): gl is GlobList => gl.length >= 1\n\n/**\n * An immutable-ish view on an array of glob parts and their parsed\n * results\n */\nexport class Pattern {\n  readonly #patternList: PatternList\n  readonly #globList: GlobList\n  readonly #index: number\n  readonly length: number\n  readonly #platform: NodeJS.Platform\n  #rest?: Pattern | null\n  #globString?: string\n  #isDrive?: boolean\n  #isUNC?: boolean\n  #isAbsolute?: boolean\n  #followGlobstar: boolean = true\n\n  constructor(\n    patternList: MMPattern[],\n    globList: string[],\n    index: number,\n    platform: NodeJS.Platform,\n  ) {\n    if (!isPatternList(patternList)) {\n      throw new TypeError('empty pattern list')\n    }\n    if (!isGlobList(globList)) {\n      throw new TypeError('empty glob list')\n    }\n    if (globList.length !== patternList.length) {\n      throw new TypeError('mismatched pattern list and glob list lengths')\n    }\n    this.length = patternList.length\n    if (index < 0 || index >= this.length) {\n      throw new TypeError('index out of range')\n    }\n    this.#patternList = patternList\n    this.#globList = globList\n    this.#index = index\n    this.#platform = platform\n\n    // normalize root entries of absolute patterns on initial creation.\n    if (this.#index === 0) {\n      // c: => ['c:/']\n      // C:/ => ['C:/']\n      // C:/x => ['C:/', 'x']\n      // //host/share => ['//host/share/']\n      // //host/share/ => ['//host/share/']\n      // //host/share/x => ['//host/share/', 'x']\n      // /etc => ['/', 'etc']\n      // / => ['/']\n      if (this.isUNC()) {\n        // '' / '' / 'host' / 'share'\n        const [p0, p1, p2, p3, ...prest] = this.#patternList\n        const [g0, g1, g2, g3, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = [p0, p1, p2, p3, ''].join('/')\n        const g = [g0, g1, g2, g3, ''].join('/')\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      } else if (this.isDrive() || this.isAbsolute()) {\n        const [p1, ...prest] = this.#patternList\n        const [g1, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = (p1 as string) + '/'\n        const g = g1 + '/'\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      }\n    }\n  }\n\n  /**\n   * The first entry in the parsed list of patterns\n   */\n  pattern(): MMPattern {\n    return this.#patternList[this.#index] as MMPattern\n  }\n\n  /**\n   * true of if pattern() returns a string\n   */\n  isString(): boolean {\n    return typeof this.#patternList[this.#index] === 'string'\n  }\n  /**\n   * true of if pattern() returns GLOBSTAR\n   */\n  isGlobstar(): boolean {\n    return this.#patternList[this.#index] === GLOBSTAR\n  }\n  /**\n   * true if pattern() returns a regexp\n   */\n  isRegExp(): boolean {\n    return this.#patternList[this.#index] instanceof RegExp\n  }\n\n  /**\n   * The /-joined set of glob parts that make up this pattern\n   */\n  globString(): string {\n    return (this.#globString =\n      this.#globString ||\n      (this.#index === 0 ?\n        this.isAbsolute() ?\n          this.#globList[0] + this.#globList.slice(1).join('/')\n        : this.#globList.join('/')\n      : this.#globList.slice(this.#index).join('/')))\n  }\n\n  /**\n   * true if there are more pattern parts after this one\n   */\n  hasMore(): boolean {\n    return this.length > this.#index + 1\n  }\n\n  /**\n   * The rest of the pattern after this part, or null if this is the end\n   */\n  rest(): Pattern | null {\n    if (this.#rest !== undefined) return this.#rest\n    if (!this.hasMore()) return (this.#rest = null)\n    this.#rest = new Pattern(\n      this.#patternList,\n      this.#globList,\n      this.#index + 1,\n      this.#platform,\n    )\n    this.#rest.#isAbsolute = this.#isAbsolute\n    this.#rest.#isUNC = this.#isUNC\n    this.#rest.#isDrive = this.#isDrive\n    return this.#rest\n  }\n\n  /**\n   * true if the pattern represents a //unc/path/ on windows\n   */\n  isUNC(): boolean {\n    const pl = this.#patternList\n    return this.#isUNC !== undefined ?\n        this.#isUNC\n      : (this.#isUNC =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          pl[0] === '' &&\n          pl[1] === '' &&\n          typeof pl[2] === 'string' &&\n          !!pl[2] &&\n          typeof pl[3] === 'string' &&\n          !!pl[3])\n  }\n\n  // pattern like C:/...\n  // split = ['C:', ...]\n  // XXX: would be nice to handle patterns like `c:*` to test the cwd\n  // in c: for *, but I don't know of a way to even figure out what that\n  // cwd is without actually chdir'ing into it?\n  /**\n   * True if the pattern starts with a drive letter on Windows\n   */\n  isDrive(): boolean {\n    const pl = this.#patternList\n    return this.#isDrive !== undefined ?\n        this.#isDrive\n      : (this.#isDrive =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          this.length > 1 &&\n          typeof pl[0] === 'string' &&\n          /^[a-z]:$/i.test(pl[0]))\n  }\n\n  // pattern = '/' or '/...' or '/x/...'\n  // split = ['', ''] or ['', ...] or ['', 'x', ...]\n  // Drive and UNC both considered absolute on windows\n  /**\n   * True if the pattern is rooted on an absolute path\n   */\n  isAbsolute(): boolean {\n    const pl = this.#patternList\n    return this.#isAbsolute !== undefined ?\n        this.#isAbsolute\n      : (this.#isAbsolute =\n          (pl[0] === '' && pl.length > 1) ||\n          this.isDrive() ||\n          this.isUNC())\n  }\n\n  /**\n   * consume the root of the pattern, and return it\n   */\n  root(): string {\n    const p = this.#patternList[0]\n    return (\n        typeof p === 'string' && this.isAbsolute() && this.#index === 0\n      ) ?\n        p\n      : ''\n  }\n\n  /**\n   * Check to see if the current globstar pattern is allowed to follow\n   * a symbolic link.\n   */\n  checkFollowGlobstar(): boolean {\n    return !(\n      this.#index === 0 ||\n      !this.isGlobstar() ||\n      !this.#followGlobstar\n    )\n  }\n\n  /**\n   * Mark that the current globstar pattern is following a symbolic link\n   */\n  markFollowGlobstar(): boolean {\n    if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n      return false\n    this.#followGlobstar = false\n    return true\n  }\n}\n"
        ]
      },
      "url": null
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/glob/dist/commonjs/walker.js": {
      "lineLengths": [
        13, 62, 68, 3, 74, 11, 2, 10, 3, 39, 43, 49, 104, 66, 17, 3, 61, 3, 16,
        9, 13, 9, 21, 19, 20, 19, 12, 9, 11, 13, 24, 39, 33, 25, 25, 74, 70, 55,
        63, 44, 57, 84, 35, 13, 9, 69, 27, 29, 50, 28, 26, 38, 57, 42, 15, 9, 5,
        20, 70, 5, 28, 55, 5, 29, 13, 27, 5, 14, 29, 33, 19, 28, 28, 27, 63, 17,
        9, 5, 18, 33, 19, 29, 27, 17, 9, 14, 32, 36, 9, 5, 67, 44, 32, 37, 29,
        16, 33, 61, 21, 33, 20, 9, 57, 49, 73, 46, 33, 67, 37, 13, 32, 9, 45, 5,
        30, 20, 73, 41, 53, 32, 36, 38, 54, 32, 13, 24, 5, 30, 37, 29, 16, 33,
        57, 21, 33, 20, 9, 57, 47, 73, 44, 68, 35, 13, 9, 45, 5, 30, 29, 19, 69,
        61, 50, 34, 9, 85, 25, 72, 36, 38, 30, 9, 23, 75, 39, 9, 14, 75, 84, 31,
        21, 65, 9, 5, 37, 50, 14, 42, 5, 35, 48, 14, 42, 5, 34, 29, 33, 17, 28,
        84, 5, 46, 42, 24, 33, 17, 26, 79, 19, 9, 52, 77, 68, 65, 22, 28, 30,
        21, 10, 73, 33, 25, 20, 62, 9, 53, 75, 25, 13, 20, 53, 34, 65, 18, 93,
        13, 9, 15, 5, 45, 61, 22, 28, 30, 21, 10, 73, 33, 25, 20, 62, 9, 72, 20,
        68, 9, 15, 5, 38, 29, 33, 17, 28, 88, 5, 50, 42, 24, 33, 17, 26, 83, 19,
        9, 52, 77, 68, 65, 22, 28, 30, 21, 10, 73, 33, 25, 47, 9, 53, 75, 25,
        13, 20, 45, 59, 9, 15, 5, 49, 61, 22, 28, 30, 21, 10, 73, 33, 25, 47, 9,
        72, 20, 72, 9, 15, 5, 1, 28, 35, 24, 39, 36, 5, 18, 28, 5, 18, 33, 37,
        36, 36, 9, 41, 57, 43, 44, 17, 22, 38, 17, 15, 11, 28, 5, 16, 33, 37,
        36, 34, 9, 68, 57, 37, 41, 11, 28, 5, 1, 32, 35, 12, 39, 36, 48, 32, 29,
        11, 54, 55, 5, 18, 30, 34, 25, 5, 14, 33, 33, 39, 77, 15, 9, 14, 73, 9,
        28, 5, 18, 36, 34, 9, 76, 28, 5, 1, 32, 34
      ],
      "data": {
        "version": 3,
        "file": "walker.js",
        "sourceRoot": "",
        "sources": [
          "file:///usr/local/lib/node_modules/npm/node_modules/glob/src/walker.ts"
        ],
        "names": [],
        "mappings": "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",
        "sourcesContent": [
          "/**\n * Single-use utility classes to provide functionality to the {@link Glob}\n * methods.\n *\n * @module\n */\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport { Ignore, IgnoreLike } from './ignore.js'\n\n// XXX can we somehow make it so that it NEVER processes a given path more than\n// once, enough that the match set tracking is no longer needed?  that'd speed\n// things up a lot.  Or maybe bring back nounique, and skip it in that case?\n\n// a single minimatch set entry with 1 or more parts\nimport { Pattern } from './pattern.js'\nimport { Processor } from './processor.js'\n\nexport interface GlobWalkerOpts {\n  absolute?: boolean\n  allowWindowsEscape?: boolean\n  cwd?: string | URL\n  dot?: boolean\n  dotRelative?: boolean\n  follow?: boolean\n  ignore?: string | string[] | IgnoreLike\n  mark?: boolean\n  matchBase?: boolean\n  // Note: maxDepth here means \"maximum actual Path.depth()\",\n  // not \"maximum depth beyond cwd\"\n  maxDepth?: number\n  nobrace?: boolean\n  nocase?: boolean\n  nodir?: boolean\n  noext?: boolean\n  noglobstar?: boolean\n  platform?: NodeJS.Platform\n  posix?: boolean\n  realpath?: boolean\n  root?: string\n  stat?: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape?: boolean\n  withFileTypes?: boolean\n  includeChildMatches?: boolean\n}\n\nexport type GWOFileTypesTrue = GlobWalkerOpts & {\n  withFileTypes: true\n}\nexport type GWOFileTypesFalse = GlobWalkerOpts & {\n  withFileTypes: false\n}\nexport type GWOFileTypesUnset = GlobWalkerOpts & {\n  withFileTypes?: undefined\n}\n\nexport type Result<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue ? Path\n  : O extends GWOFileTypesFalse ? string\n  : O extends GWOFileTypesUnset ? string\n  : Path | string\n\nexport type Matches<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue ? Set<Path>\n  : O extends GWOFileTypesFalse ? Set<string>\n  : O extends GWOFileTypesUnset ? Set<string>\n  : Set<Path | string>\n\nexport type MatchStream<O extends GlobWalkerOpts> = Minipass<\n  Result<O>,\n  Result<O>\n>\n\nconst makeIgnore = (\n  ignore: string | string[] | IgnoreLike,\n  opts: GlobWalkerOpts,\n): IgnoreLike =>\n  typeof ignore === 'string' ? new Ignore([ignore], opts)\n  : Array.isArray(ignore) ? new Ignore(ignore, opts)\n  : ignore\n\n/**\n * basic walking utilities that all the glob walker types use\n */\nexport abstract class GlobUtil<O extends GlobWalkerOpts = GlobWalkerOpts> {\n  path: Path\n  patterns: Pattern[]\n  opts: O\n  seen: Set<Path> = new Set<Path>()\n  paused: boolean = false\n  aborted: boolean = false\n  #onResume: (() => any)[] = []\n  #ignore?: IgnoreLike\n  #sep: '\\\\' | '/'\n  signal?: AbortSignal\n  maxDepth: number\n  includeChildMatches: boolean\n\n  constructor(patterns: Pattern[], path: Path, opts: O)\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    this.patterns = patterns\n    this.path = path\n    this.opts = opts\n    this.#sep = !opts.posix && opts.platform === 'win32' ? '\\\\' : '/'\n    this.includeChildMatches = opts.includeChildMatches !== false\n    if (opts.ignore || !this.includeChildMatches) {\n      this.#ignore = makeIgnore(opts.ignore ?? [], opts)\n      if (\n        !this.includeChildMatches &&\n        typeof this.#ignore.add !== 'function'\n      ) {\n        const m = 'cannot ignore child matches, ignore lacks add() method.'\n        throw new Error(m)\n      }\n    }\n    // ignore, always set with maxDepth, but it's optional on the\n    // GlobOptions type\n    /* c8 ignore start */\n    this.maxDepth = opts.maxDepth || Infinity\n    /* c8 ignore stop */\n    if (opts.signal) {\n      this.signal = opts.signal\n      this.signal.addEventListener('abort', () => {\n        this.#onResume.length = 0\n      })\n    }\n  }\n\n  #ignored(path: Path): boolean {\n    return this.seen.has(path) || !!this.#ignore?.ignored?.(path)\n  }\n  #childrenIgnored(path: Path): boolean {\n    return !!this.#ignore?.childrenIgnored?.(path)\n  }\n\n  // backpressure mechanism\n  pause() {\n    this.paused = true\n  }\n  resume() {\n    /* c8 ignore start */\n    if (this.signal?.aborted) return\n    /* c8 ignore stop */\n    this.paused = false\n    let fn: (() => any) | undefined = undefined\n    while (!this.paused && (fn = this.#onResume.shift())) {\n      fn()\n    }\n  }\n  onResume(fn: () => any) {\n    if (this.signal?.aborted) return\n    /* c8 ignore start */\n    if (!this.paused) {\n      fn()\n    } else {\n      /* c8 ignore stop */\n      this.#onResume.push(fn)\n    }\n  }\n\n  // do the requisite realpath/stat checking, and return the path\n  // to add or undefined to filter it out.\n  async matchCheck(e: Path, ifDir: boolean): Promise<Path | undefined> {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || (await e.realpath())\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? await e.lstat() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = await s.realpath()\n      /* c8 ignore start */\n      if (target && (target.isUnknown() || this.opts.stat)) {\n        await target.lstat()\n      }\n      /* c8 ignore stop */\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  matchCheckTest(e: Path | undefined, ifDir: boolean): Path | undefined {\n    return (\n        e &&\n          (this.maxDepth === Infinity || e.depth() <= this.maxDepth) &&\n          (!ifDir || e.canReaddir()) &&\n          (!this.opts.nodir || !e.isDirectory()) &&\n          (!this.opts.nodir ||\n            !this.opts.follow ||\n            !e.isSymbolicLink() ||\n            !e.realpathCached()?.isDirectory()) &&\n          !this.#ignored(e)\n      ) ?\n        e\n      : undefined\n  }\n\n  matchCheckSync(e: Path, ifDir: boolean): Path | undefined {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || e.realpathSync()\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? e.lstatSync() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = s.realpathSync()\n      if (target && (target?.isUnknown() || this.opts.stat)) {\n        target.lstatSync()\n      }\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  abstract matchEmit(p: Result<O>): void\n  abstract matchEmit(p: string | Path): void\n\n  matchFinish(e: Path, absolute: boolean) {\n    if (this.#ignored(e)) return\n    // we know we have an ignore if this is false, but TS doesn't\n    if (!this.includeChildMatches && this.#ignore?.add) {\n      const ign = `${e.relativePosix()}/**`\n      this.#ignore.add(ign)\n    }\n    const abs =\n      this.opts.absolute === undefined ? absolute : this.opts.absolute\n    this.seen.add(e)\n    const mark = this.opts.mark && e.isDirectory() ? this.#sep : ''\n    // ok, we have what we need!\n    if (this.opts.withFileTypes) {\n      this.matchEmit(e)\n    } else if (abs) {\n      const abs = this.opts.posix ? e.fullpathPosix() : e.fullpath()\n      this.matchEmit(abs + mark)\n    } else {\n      const rel = this.opts.posix ? e.relativePosix() : e.relative()\n      const pre =\n        this.opts.dotRelative && !rel.startsWith('..' + this.#sep) ?\n          '.' + this.#sep\n        : ''\n      this.matchEmit(!rel ? '.' + mark : pre + rel + mark)\n    }\n  }\n\n  async match(e: Path, absolute: boolean, ifDir: boolean): Promise<void> {\n    const p = await this.matchCheck(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  matchSync(e: Path, absolute: boolean, ifDir: boolean): void {\n    const p = this.matchCheckSync(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  walkCB(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() => this.walkCB2(target, patterns, processor, cb))\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const childrenCached = t.readdirCached()\n      if (t.calledReaddir())\n        this.walkCB3(t, childrenCached, processor, next)\n      else {\n        t.readdirCB(\n          (_, entries) => this.walkCB3(t, entries, processor, next),\n          true,\n        )\n      }\n    }\n\n    next()\n  }\n\n  walkCB3(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n\n  walkCBSync(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2Sync(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2Sync(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() =>\n        this.walkCB2Sync(target, patterns, processor, cb),\n      )\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const children = t.readdirSync()\n      this.walkCB3Sync(t, children, processor, next)\n    }\n\n    next()\n  }\n\n  walkCB3Sync(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2Sync(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n}\n\nexport class GlobWalker<\n  O extends GlobWalkerOpts = GlobWalkerOpts,\n> extends GlobUtil<O> {\n  matches = new Set<Result<O>>()\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n  }\n\n  matchEmit(e: Result<O>): void {\n    this.matches.add(e)\n  }\n\n  async walk(): Promise<Set<Result<O>>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      await this.path.lstat()\n    }\n    await new Promise((res, rej) => {\n      this.walkCB(this.path, this.patterns, () => {\n        if (this.signal?.aborted) {\n          rej(this.signal.reason)\n        } else {\n          res(this.matches)\n        }\n      })\n    })\n    return this.matches\n  }\n\n  walkSync(): Set<Result<O>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    // nothing for the callback to do, because this never pauses\n    this.walkCBSync(this.path, this.patterns, () => {\n      if (this.signal?.aborted) throw this.signal.reason\n    })\n    return this.matches\n  }\n}\n\nexport class GlobStream<\n  O extends GlobWalkerOpts = GlobWalkerOpts,\n> extends GlobUtil<O> {\n  results: Minipass<Result<O>, Result<O>>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.results = new Minipass<Result<O>, Result<O>>({\n      signal: this.signal,\n      objectMode: true,\n    })\n    this.results.on('drain', () => this.resume())\n    this.results.on('resume', () => this.resume())\n  }\n\n  matchEmit(e: Result<O>): void {\n    this.results.write(e)\n    if (!this.results.flowing) this.pause()\n  }\n\n  stream(): MatchStream<O> {\n    const target = this.path\n    if (target.isUnknown()) {\n      target.lstat().then(() => {\n        this.walkCB(target, this.patterns, () => this.results.end())\n      })\n    } else {\n      this.walkCB(target, this.patterns, () => this.results.end())\n    }\n    return this.results\n  }\n\n  streamSync(): MatchStream<O> {\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    this.walkCBSync(this.path, this.patterns, () => this.results.end())\n    return this.results\n  }\n}\n"
        ]
      },
      "url": null
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/glob/dist/commonjs/ignore.js": {
      "lineLengths": [
        13, 54, 34, 66, 45, 62, 24, 41, 45, 55, 14, 43, 20, 14, 3, 41, 3, 14,
        13, 21, 13, 21, 13, 11, 95, 27, 27, 35, 35, 33, 23, 22, 20, 19, 18, 23,
        33, 21, 28, 27, 10, 34, 26, 5, 14, 75, 72, 75, 47, 75, 77, 31, 79, 76,
        29, 78, 48, 63, 49, 37, 46, 33, 40, 58, 13, 44, 61, 63, 31, 34, 13, 32,
        84, 77, 70, 44, 25, 38, 16, 38, 27, 29, 50, 20, 50, 13, 9, 5, 16, 38,
        41, 45, 41, 40, 56, 28, 9, 40, 56, 28, 9, 21, 5, 24, 44, 53, 48, 34, 28,
        9, 48, 34, 28, 9, 21, 5, 1, 24, 34
      ],
      "data": {
        "version": 3,
        "file": "ignore.js",
        "sourceRoot": "",
        "sources": [
          "file:///usr/local/lib/node_modules/npm/node_modules/glob/src/ignore.ts"
        ],
        "names": [],
        "mappings": "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",
        "sourcesContent": [
          "// give it a pattern, and it'll be able to tell you if\n// a given path should be ignored.\n// Ignoring a path ignores its children if the pattern ends in /**\n// Ignores are always parsed in dot:true mode\n\nimport { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\nexport interface IgnoreLike {\n  ignored?: (p: Path) => boolean\n  childrenIgnored?: (p: Path) => boolean\n  add?: (ignore: string) => void\n}\n\nconst defaultPlatform: NodeJS.Platform =\n  (\n    typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string'\n  ) ?\n    process.platform\n  : 'linux'\n\n/**\n * Class used to process ignored patterns\n */\nexport class Ignore implements IgnoreLike {\n  relative: Minimatch[]\n  relativeChildren: Minimatch[]\n  absolute: Minimatch[]\n  absoluteChildren: Minimatch[]\n  platform: NodeJS.Platform\n  mmopts: MinimatchOptions\n\n  constructor(\n    ignored: string[],\n    {\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      platform = defaultPlatform,\n    }: GlobWalkerOpts,\n  ) {\n    this.relative = []\n    this.absolute = []\n    this.relativeChildren = []\n    this.absoluteChildren = []\n    this.platform = platform\n    this.mmopts = {\n      dot: true,\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      optimizationLevel: 2,\n      platform,\n      nocomment: true,\n      nonegate: true,\n    }\n    for (const ign of ignored) this.add(ign)\n  }\n\n  add(ign: string) {\n    // this is a little weird, but it gives us a clean set of optimized\n    // minimatch matchers, without getting tripped up if one of them\n    // ends in /** inside a brace section, and it's only inefficient at\n    // the start of the walk, not along it.\n    // It'd be nice if the Pattern class just had a .test() method, but\n    // handling globstars is a bit of a pita, and that code already lives\n    // in minimatch anyway.\n    // Another way would be if maybe Minimatch could take its set/globParts\n    // as an option, and then we could at least just use Pattern to test\n    // for absolute-ness.\n    // Yet another way, Minimatch could take an array of glob strings, and\n    // a cwd option, and do the right thing.\n    const mm = new Minimatch(ign, this.mmopts)\n    for (let i = 0; i < mm.set.length; i++) {\n      const parsed = mm.set[i]\n      const globParts = mm.globParts[i]\n      /* c8 ignore start */\n      if (!parsed || !globParts) {\n        throw new Error('invalid pattern object')\n      }\n      // strip off leading ./ portions\n      // https://github.com/isaacs/node-glob/issues/570\n      while (parsed[0] === '.' && globParts[0] === '.') {\n        parsed.shift()\n        globParts.shift()\n      }\n      /* c8 ignore stop */\n      const p = new Pattern(parsed, globParts, 0, this.platform)\n      const m = new Minimatch(p.globString(), this.mmopts)\n      const children = globParts[globParts.length - 1] === '**'\n      const absolute = p.isAbsolute()\n      if (absolute) this.absolute.push(m)\n      else this.relative.push(m)\n      if (children) {\n        if (absolute) this.absoluteChildren.push(m)\n        else this.relativeChildren.push(m)\n      }\n    }\n  }\n\n  ignored(p: Path): boolean {\n    const fullpath = p.fullpath()\n    const fullpaths = `${fullpath}/`\n    const relative = p.relative() || '.'\n    const relatives = `${relative}/`\n    for (const m of this.relative) {\n      if (m.match(relative) || m.match(relatives)) return true\n    }\n    for (const m of this.absolute) {\n      if (m.match(fullpath) || m.match(fullpaths)) return true\n    }\n    return false\n  }\n\n  childrenIgnored(p: Path): boolean {\n    const fullpath = p.fullpath() + '/'\n    const relative = (p.relative() || '.') + '/'\n    for (const m of this.relativeChildren) {\n      if (m.match(relative)) return true\n    }\n    for (const m of this.absoluteChildren) {\n      if (m.match(fullpath)) return true\n    }\n    return false\n  }\n}\n"
        ]
      },
      "url": null
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/glob/dist/commonjs/processor.js": {
      "lineLengths": [
        13, 69, 62, 93, 41, 3, 65, 3, 22, 10, 36, 27, 5, 12, 55, 5, 32, 76, 5,
        34, 43, 48, 19, 45, 12, 70, 5, 1, 40, 3, 66, 72, 66, 3, 19, 22, 34, 55,
        47, 72, 5, 29, 15, 61, 17, 22, 22, 11, 5, 1, 34, 3, 71, 20, 3, 16, 22,
        26, 35, 19, 9, 44, 19, 75, 35, 13, 9, 12, 46, 5, 17, 44, 29, 20, 63, 9,
        28, 20, 5, 15, 60, 5, 12, 66, 5, 1, 28, 3, 54, 2, 66, 35, 3, 17, 19, 32,
        30, 13, 11, 8, 9, 39, 25, 36, 30, 29, 74, 5, 39, 33, 61, 72, 47, 49, 56,
        40, 82, 46, 23, 76, 34, 28, 44, 28, 53, 29, 17, 22, 35, 17, 13, 29, 25,
        18, 21, 32, 65, 42, 39, 22, 31, 31, 13, 34, 34, 26, 62, 29, 60, 13, 67,
        49, 62, 40, 67, 43, 66, 64, 25, 13, 50, 56, 60, 72, 76, 80, 42, 34, 52,
        50, 17, 43, 43, 69, 69, 65, 75, 17, 22, 38, 80, 80, 45, 49, 44, 35, 65,
        77, 57, 25, 21, 17, 13, 43, 46, 13, 9, 20, 5, 22, 36, 5, 13, 61, 5, 62,
        45, 49, 31, 36, 51, 65, 37, 34, 45, 54, 44, 44, 49, 69, 17, 47, 61, 17,
        22, 61, 17, 13, 9, 23, 5, 46, 50, 37, 53, 13, 33, 75, 80, 79, 81, 71,
        57, 50, 17, 46, 64, 51, 21, 60, 54, 21, 17, 13, 9, 62, 20, 19, 38, 41,
        54, 30, 28, 29, 62, 13, 35, 37, 41, 36, 44, 13, 44, 62, 13, 9, 5, 38,
        28, 19, 20, 49, 9, 14, 39, 9, 5, 38, 31, 26, 19, 20, 49, 9, 14, 39, 9,
        5, 1, 30, 37
      ],
      "data": {
        "version": 3,
        "file": "processor.js",
        "sourceRoot": "",
        "sources": [
          "file:///usr/local/lib/node_modules/npm/node_modules/glob/src/processor.ts"
        ],
        "names": [],
        "mappings": "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",
        "sourcesContent": [
          "// synchronous utility for filtering entries and calculating subwalks\n\nimport { GLOBSTAR, MMRegExp } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { MMPattern, Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\n/**\n * A cache of which patterns have been processed for a given Path\n */\nexport class HasWalkedCache {\n  store: Map<string, Set<string>>\n  constructor(store: Map<string, Set<string>> = new Map()) {\n    this.store = store\n  }\n  copy() {\n    return new HasWalkedCache(new Map(this.store))\n  }\n  hasWalked(target: Path, pattern: Pattern) {\n    return this.store.get(target.fullpath())?.has(pattern.globString())\n  }\n  storeWalked(target: Path, pattern: Pattern) {\n    const fullpath = target.fullpath()\n    const cached = this.store.get(fullpath)\n    if (cached) cached.add(pattern.globString())\n    else this.store.set(fullpath, new Set([pattern.globString()]))\n  }\n}\n\n/**\n * A record of which paths have been matched in a given walk step,\n * and whether they only are considered a match if they are a directory,\n * and whether their absolute or relative path should be returned.\n */\nexport class MatchRecord {\n  store: Map<Path, number> = new Map()\n  add(target: Path, absolute: boolean, ifDir: boolean) {\n    const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0)\n    const current = this.store.get(target)\n    this.store.set(target, current === undefined ? n : n & current)\n  }\n  // match, absolute, ifdir\n  entries(): [Path, boolean, boolean][] {\n    return [...this.store.entries()].map(([path, n]) => [\n      path,\n      !!(n & 2),\n      !!(n & 1),\n    ])\n  }\n}\n\n/**\n * A collection of patterns that must be processed in a subsequent step\n * for a given path.\n */\nexport class SubWalks {\n  store: Map<Path, Pattern[]> = new Map()\n  add(target: Path, pattern: Pattern) {\n    if (!target.canReaddir()) {\n      return\n    }\n    const subs = this.store.get(target)\n    if (subs) {\n      if (!subs.find(p => p.globString() === pattern.globString())) {\n        subs.push(pattern)\n      }\n    } else this.store.set(target, [pattern])\n  }\n  get(target: Path): Pattern[] {\n    const subs = this.store.get(target)\n    /* c8 ignore start */\n    if (!subs) {\n      throw new Error('attempting to walk unknown path')\n    }\n    /* c8 ignore stop */\n    return subs\n  }\n  entries(): [Path, Pattern[]][] {\n    return this.keys().map(k => [k, this.store.get(k) as Pattern[]])\n  }\n  keys(): Path[] {\n    return [...this.store.keys()].filter(t => t.canReaddir())\n  }\n}\n\n/**\n * The class that processes patterns for a given path.\n *\n * Handles child entry filtering, and determining whether a path's\n * directory contents must be read.\n */\nexport class Processor {\n  hasWalkedCache: HasWalkedCache\n  matches = new MatchRecord()\n  subwalks = new SubWalks()\n  patterns?: Pattern[]\n  follow: boolean\n  dot: boolean\n  opts: GlobWalkerOpts\n\n  constructor(opts: GlobWalkerOpts, hasWalkedCache?: HasWalkedCache) {\n    this.opts = opts\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.hasWalkedCache =\n      hasWalkedCache ? hasWalkedCache.copy() : new HasWalkedCache()\n  }\n\n  processPatterns(target: Path, patterns: Pattern[]) {\n    this.patterns = patterns\n    const processingSet: [Path, Pattern][] = patterns.map(p => [target, p])\n\n    // map of paths to the magic-starting subwalks they need to walk\n    // first item in patterns is the filter\n\n    for (let [t, pattern] of processingSet) {\n      this.hasWalkedCache.storeWalked(t, pattern)\n\n      const root = pattern.root()\n      const absolute = pattern.isAbsolute() && this.opts.absolute !== false\n\n      // start absolute patterns at root\n      if (root) {\n        t = t.resolve(\n          root === '/' && this.opts.root !== undefined ?\n            this.opts.root\n          : root,\n        )\n        const rest = pattern.rest()\n        if (!rest) {\n          this.matches.add(t, true, false)\n          continue\n        } else {\n          pattern = rest\n        }\n      }\n\n      if (t.isENOENT()) continue\n\n      let p: MMPattern\n      let rest: Pattern | null\n      let changed = false\n      while (\n        typeof (p = pattern.pattern()) === 'string' &&\n        (rest = pattern.rest())\n      ) {\n        const c = t.resolve(p)\n        t = c\n        pattern = rest\n        changed = true\n      }\n      p = pattern.pattern()\n      rest = pattern.rest()\n      if (changed) {\n        if (this.hasWalkedCache.hasWalked(t, pattern)) continue\n        this.hasWalkedCache.storeWalked(t, pattern)\n      }\n\n      // now we have either a final string for a known entry,\n      // more strings for an unknown entry,\n      // or a pattern starting with magic, mounted on t.\n      if (typeof p === 'string') {\n        // must not be final entry, otherwise we would have\n        // concatenated it earlier.\n        const ifDir = p === '..' || p === '' || p === '.'\n        this.matches.add(t.resolve(p), absolute, ifDir)\n        continue\n      } else if (p === GLOBSTAR) {\n        // if no rest, match and subwalk pattern\n        // if rest, process rest and subwalk pattern\n        // if it's a symlink, but we didn't get here by way of a\n        // globstar match (meaning it's the first time THIS globstar\n        // has traversed a symlink), then we follow it. Otherwise, stop.\n        if (\n          !t.isSymbolicLink() ||\n          this.follow ||\n          pattern.checkFollowGlobstar()\n        ) {\n          this.subwalks.add(t, pattern)\n        }\n        const rp = rest?.pattern()\n        const rrest = rest?.rest()\n        if (!rest || ((rp === '' || rp === '.') && !rrest)) {\n          // only HAS to be a dir if it ends in **/ or **/.\n          // but ending in ** will match files as well.\n          this.matches.add(t, absolute, rp === '' || rp === '.')\n        } else {\n          if (rp === '..') {\n            // this would mean you're matching **/.. at the fs root,\n            // and no thanks, I'm not gonna test that specific case.\n            /* c8 ignore start */\n            const tp = t.parent || t\n            /* c8 ignore stop */\n            if (!rrest) this.matches.add(tp, absolute, true)\n            else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n              this.subwalks.add(tp, rrest)\n            }\n          }\n        }\n      } else if (p instanceof RegExp) {\n        this.subwalks.add(t, pattern)\n      }\n    }\n\n    return this\n  }\n\n  subwalkTargets(): Path[] {\n    return this.subwalks.keys()\n  }\n\n  child() {\n    return new Processor(this.opts, this.hasWalkedCache)\n  }\n\n  // return a new Processor containing the subwalks for each\n  // child entry, and a set of matches, and\n  // a hasWalkedCache that's a copy of this one\n  // then we're going to call\n  filterEntries(parent: Path, entries: Path[]): Processor {\n    const patterns = this.subwalks.get(parent)\n    // put matches and entry walks into the results processor\n    const results = this.child()\n    for (const e of entries) {\n      for (const pattern of patterns) {\n        const absolute = pattern.isAbsolute()\n        const p = pattern.pattern()\n        const rest = pattern.rest()\n        if (p === GLOBSTAR) {\n          results.testGlobstar(e, pattern, rest, absolute)\n        } else if (p instanceof RegExp) {\n          results.testRegExp(e, p, rest, absolute)\n        } else {\n          results.testString(e, p, rest, absolute)\n        }\n      }\n    }\n    return results\n  }\n\n  testGlobstar(\n    e: Path,\n    pattern: Pattern,\n    rest: Pattern | null,\n    absolute: boolean,\n  ) {\n    if (this.dot || !e.name.startsWith('.')) {\n      if (!pattern.hasMore()) {\n        this.matches.add(e, absolute, false)\n      }\n      if (e.canReaddir()) {\n        // if we're in follow mode or it's not a symlink, just keep\n        // testing the same pattern. If there's more after the globstar,\n        // then this symlink consumes the globstar. If not, then we can\n        // follow at most ONE symlink along the way, so we mark it, which\n        // also checks to ensure that it wasn't already marked.\n        if (this.follow || !e.isSymbolicLink()) {\n          this.subwalks.add(e, pattern)\n        } else if (e.isSymbolicLink()) {\n          if (rest && pattern.checkFollowGlobstar()) {\n            this.subwalks.add(e, rest)\n          } else if (pattern.markFollowGlobstar()) {\n            this.subwalks.add(e, pattern)\n          }\n        }\n      }\n    }\n    // if the NEXT thing matches this entry, then also add\n    // the rest.\n    if (rest) {\n      const rp = rest.pattern()\n      if (\n        typeof rp === 'string' &&\n        // dots and empty were handled already\n        rp !== '..' &&\n        rp !== '' &&\n        rp !== '.'\n      ) {\n        this.testString(e, rp, rest.rest(), absolute)\n      } else if (rp === '..') {\n        /* c8 ignore start */\n        const ep = e.parent || e\n        /* c8 ignore stop */\n        this.subwalks.add(ep, rest)\n      } else if (rp instanceof RegExp) {\n        this.testRegExp(e, rp, rest.rest(), absolute)\n      }\n    }\n  }\n\n  testRegExp(\n    e: Path,\n    p: MMRegExp,\n    rest: Pattern | null,\n    absolute: boolean,\n  ) {\n    if (!p.test(e.name)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n\n  testString(e: Path, p: string, rest: Pattern | null, absolute: boolean) {\n    // should never happen?\n    if (!e.isNamed(p)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n}\n"
        ]
      },
      "url": null
    },
    "file:///usr/local/lib/node_modules/npm/node_modules/glob/dist/commonjs/has-magic.js": {
      "lineLengths": [
        13, 62, 26, 41, 3, 74, 30, 2, 78, 77, 74, 78, 78, 77, 3, 45, 34, 28, 5,
        30, 61, 24, 5, 17, 2, 28, 37
      ],
      "data": {
        "version": 3,
        "file": "has-magic.js",
        "sourceRoot": "",
        "sources": [
          "file:///usr/local/lib/node_modules/npm/node_modules/glob/src/has-magic.ts"
        ],
        "names": [],
        "mappings": ";;;AAAA,yCAAqC;AAGrC;;;;;;;;;;GAUG;AACI,MAAM,QAAQ,GAAG,CACtB,OAA0B,EAC1B,UAAuB,EAAE,EAChB,EAAE;IACX,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;QAC5B,OAAO,GAAG,CAAC,OAAO,CAAC,CAAA;IACrB,CAAC;IACD,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC;QACxB,IAAI,IAAI,qBAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE;YAAE,OAAO,IAAI,CAAA;IACvD,CAAC;IACD,OAAO,KAAK,CAAA;AACd,CAAC,CAAA;AAXY,QAAA,QAAQ,YAWpB",
        "sourcesContent": [
          "import { Minimatch } from 'minimatch'\nimport { GlobOptions } from './glob.js'\n\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nexport const hasMagic = (\n  pattern: string | string[],\n  options: GlobOptions = {},\n): boolean => {\n  if (!Array.isArray(pattern)) {\n    pattern = [pattern]\n  }\n  for (const p of pattern) {\n    if (new Minimatch(p, options).hasMagic()) return true\n  }\n  return false\n}\n"
        ]
      },
      "url": null
    }
  }
}
